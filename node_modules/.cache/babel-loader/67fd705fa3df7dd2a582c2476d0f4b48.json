{"ast":null,"code":"var _jsxFileName = \"/Users/greggvanorden/Desktop/bonds_react_app/bonds-react-app/src/components/bond_pricing.jsx\";\nimport React, { Component } from 'react';\nimport { Form, Col, InputGroup, Button, OverlayTrigger, Tooltip, Table, Card } from 'react-bootstrap';\nimport '../index.css';\n\nclass BondPricingOne extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentBond: null,\n      totalPrice: null,\n      totalInterest: null,\n      totalValue: null,\n      totalDate: null,\n      month: this.getCurrentMonth(),\n      year: this.getCurrentYear(),\n      showTooltip: {\n        visibility: 'visible'\n      },\n      showCards: {\n        visibility: 'hidden'\n      },\n      hideTable: true\n    };\n    this.onUpdateEnter = this.onUpdateEnter.bind(this);\n    this.onUpdateClick = this.onUpdateClick.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.formatDate = this.formatDate.bind(this);\n    this.appendToTable = this.appendToTable.bind(this);\n  }\n\n  formatDate(value_date) {\n    const months = {\n      \"01\": \"Jan.\",\n      \"02\": \"Feb.\",\n      \"03\": \"March\",\n      \"04\": \"April\",\n      \"05\": \"May\",\n      \"06\": \"June\",\n      \"07\": \"July\",\n      \"08\": \"Aug.\",\n      \"09\": \"Sept\",\n      \"10\": \"Oct\",\n      \"11\": \"Nov\",\n      \"12\": \"Dec\"\n    };\n    let month = value_date.split('/')[0];\n    let year = value_date.split('/')[1];\n    let month_string = months[month] + ' 1, ' + year;\n    return month_string;\n  }\n\n  getCurrentMonth() {\n    let d = new Date();\n    return d.getMonth() + 1;\n  }\n\n  getCurrentYear() {\n    let d = new Date();\n    return d.getFullYear();\n  }\n\n  appendToTable(currentBond) {\n    function handleClickX(element) {\n      element.parentNode.parentNode.remove();\n      let rows = document.getElementById('bond-table').getElementsByTagName('tr');\n\n      if (rows.length === 2) {\n        element.parentNode.parentNode.remove();\n        document.getElementById('bond-table').getElementsByTagName('tr')[0].style.visibility = 'hidden';\n      }\n\n      let total_prices = [];\n      let total_interests = [];\n      let total_values = [];\n      let prices = document.getElementsByClassName('issue-price');\n\n      for (let i in prices) {\n        let price = prices[i].innerHTML;\n\n        if (price !== undefined) {\n          total_prices.push(parseFloat(price.substring(1)));\n        }\n      }\n\n      let interests = document.getElementsByClassName('bond-interest');\n\n      for (let i in interests) {\n        let interest = interests[i].innerHTML;\n\n        if (interest !== undefined) {\n          total_interests.push(parseFloat(interest.substring(1)));\n        }\n      }\n\n      let values = document.getElementsByClassName('bond-value');\n\n      for (let i in values) {\n        let value = values[i].innerHTML;\n\n        if (value !== undefined) {\n          total_values.push(parseFloat(value.substring(1)));\n        }\n      }\n\n      document.getElementById('card-price').innerHTML = '$' + parseFloat(total_prices.reduce((a, b) => a + b, 0)).toFixed(2);\n      document.getElementById('card-interest').innerHTML = '$' + parseFloat(total_interests.reduce((a, b) => a + b, 0)).toFixed(2);\n      document.getElementById('card-value').innerHTML = '$' + parseFloat(total_values.reduce((a, b) => a + b, 0)).toFixed(2);\n    }\n\n    const bondTable = document.getElementById('bond-table');\n    bondTable.getElementsByTagName('tr')[0].style.visibility = 'visible';\n    let bondRow = bondTable.insertRow(1);\n    bondRow.style.textAlign = 'center';\n    bondRow.insertCell(0).innerHTML = currentBond['serialNumber'];\n    bondRow.insertCell(1).innerHTML = currentBond['series'];\n    bondRow.insertCell(2).innerHTML = currentBond['denomination'];\n    bondRow.insertCell(3).innerHTML = currentBond['iDate'];\n    bondRow.insertCell(4).innerHTML = currentBond['aDate'];\n    bondRow.insertCell(5).innerHTML = currentBond['mDate'];\n    let cell6 = bondRow.insertCell(6);\n    cell6.className = 'issue-price';\n    cell6.innerHTML = '$' + currentBond['iPrice'];\n    let cell7 = bondRow.insertCell(7);\n    cell7.className = 'bond-interest';\n    cell7.innerHTML = '$' + currentBond['interest'];\n    let cell8 = bondRow.insertCell(8);\n    cell8.className = 'bond-value';\n    cell8.innerHTML = '$' + currentBond['value'];\n    cell8.style.position = 'relative';\n    let span = document.createElement('span');\n    span.innerHTML = '&times;';\n    span.setAttribute('aria-hidden', 'true');\n    span.style.border = 'none';\n    let button = document.createElement('button');\n\n    button.onclick = function () {\n      handleClickX(this);\n    };\n\n    button.className = 'close';\n    button.style.position = 'absolute';\n    button.style.right = '-1em';\n    button.append(span);\n    cell8.append(button);\n    let rows = bondTable.getElementsByTagName('tr');\n    let total_prices = [];\n    let total_interests = [];\n    let total_values = [];\n\n    for (let i in rows) {\n      if (!isNaN(i)) {\n        if (i > 0 && i < rows.length - 1) {\n          let prices = rows[i].getElementsByClassName('issue-price');\n\n          for (let j in prices) {\n            let price = prices[j].innerHTML;\n\n            if (price !== undefined) {\n              total_prices.push(parseFloat(price.substring(1)));\n            }\n          }\n\n          let interests = rows[i].getElementsByClassName('bond-interest');\n\n          for (let j in interests) {\n            let interest = interests[j].innerHTML;\n\n            if (interest !== undefined) {\n              total_interests.push(parseFloat(interest.substring(1)));\n            }\n          }\n\n          let values = rows[i].getElementsByClassName('bond-value');\n\n          for (let j in values) {\n            let value = values[j].innerHTML;\n\n            if (value !== undefined) {\n              total_values.push(parseFloat(value.substring(1)));\n            }\n          }\n        }\n      }\n    }\n\n    document.getElementById('card-price').innerHTML = '$' + parseFloat(total_prices.reduce((a, b) => a + b, 0)).toFixed(2);\n    document.getElementById('card-interest').innerHTML = '$' + parseFloat(total_interests.reduce((a, b) => a + b, 0)).toFixed(2);\n    document.getElementById('card-value').innerHTML = '$' + parseFloat(total_values.reduce((a, b) => a + b, 0)).toFixed(2);\n  }\n\n  onUpdateEnter(e) {\n    e.preventDefault();\n    setTimeout(() => {\n      this.setState({\n        showTooltip: {\n          visibility: 'hidden'\n        }\n      });\n    }, 3500);\n  }\n\n  onUpdateClick(e) {\n    let rows = document.getElementById('bond-table').getElementsByTagName('tr');\n    let bonds = [];\n    console.log(e.target.aMonth.value);\n    console.log(e.target.aYear.value);\n\n    for (let i in rows) {\n      if (!isNaN(i)) {\n        if (i > 0 && i < rows.length - 1) {\n          console.log(rows[i]); //rows[i].getElementsByTagName('td')[1].innerHTML\n\n          /*let bond = {\n              'vMonth': ,\n              'vYear': ,\n              'series': ,\n              'denomination': ,\n              'serialNumber': ,\n              'iMonth': ,\n              'iYear': ,\n          }*/\n        }\n      }\n    }\n    /*        const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' },\n                body: JSON.stringify({})\n            };\n    \n            fetch('http://localhost:5000/update', requestOptions)\n                .then(response => response.json())\n                .then(response => {\n                    this.appendToTable(response)\n    \n                    this.setState({\n                        currentBond: response\n                    })\n                })\n    */\n\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    if (this.state.hideTable) {\n      this.setState({\n        hideTable: false,\n        showCards: {\n          visibility: 'visible'\n        }\n      });\n    }\n\n    const series_map = {\n      'EE Bond': 'EE',\n      'E Bond': 'E',\n      'I Bond': 'I',\n      'Savings Bond': 'S'\n    };\n    let bond = {\n      'vMonth': e.target.aMonth.value,\n      'vYear': e.target.aYear.value,\n      'series': series_map[e.target.series.value],\n      'denomination': e.target.denomination.value.substring(1),\n      'serialNumber': e.target.serialnumber.value,\n      'iMonth': e.target.iMonth.value,\n      'iYear': e.target.iYear.value\n    };\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      },\n      body: JSON.stringify({\n        bond\n      })\n    };\n    fetch('http://localhost:5000/individual/bonds', requestOptions).then(response => response.json()).then(response => {\n      this.appendToTable(response);\n      this.setState({\n        currentBond: response\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '75%',\n        margin: 'auto',\n        marginTop: '1.5em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      style: {\n        width: '100%',\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"col-padding\",\n      style: {\n        position: 'relative'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 29\n      }\n    }, \"VALUE AS OF\"), /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      name: \"aMonth\",\n      type: \"number\",\n      placeholder: \"Month\",\n      min: \"1\",\n      max: \"12\",\n      defaultValue: this.state.month,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n      id: \"inputGroupPrepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 37\n      }\n    }, \"/\")), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      name: \"aYear\",\n      type: \"number\",\n      placeholder: \"Year\",\n      maxLength: \"4\",\n      min: \"1992\",\n      max: this.state.year,\n      style: {\n        marginLeft: '-1px'\n      },\n      defaultValue: this.state.year,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(OverlayTrigger, {\n      placement: \"right\",\n      overlay: /*#__PURE__*/React.createElement(Tooltip, {\n        style: this.state.showTooltip,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 33\n        }\n      }, \"Revalue all bonds by this date.\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      size: \"sm\",\n      variant: \"success\",\n      onMouseEnter: this.onUpdateEnter,\n      onClick: this.onUpdateClick,\n      style: {\n        position: 'absolute',\n        top: '0',\n        right: '1.5em',\n        fontSize: '.65em',\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 33\n      }\n    }, \"UPDATE\"))), /*#__PURE__*/React.createElement(Col, {\n      className: \"col-padding\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 29\n      }\n    }, \"SERIES\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"series\",\n      as: \"select\",\n      custom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 33\n      }\n    }, \"EE Bond\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 33\n      }\n    }, \"I Bond\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 33\n      }\n    }, \"E Bond\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 33\n      }\n    }, \"Savings Note\"))), /*#__PURE__*/React.createElement(Col, {\n      className: \"col-padding\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 29\n      }\n    }, \"DENOMINATION\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"denomination\",\n      as: \"select\",\n      custom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 33\n      }\n    }, \"$25\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 33\n      }\n    }, \"$50\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 33\n      }\n    }, \"$75\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 33\n      }\n    }, \"$100\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 33\n      }\n    }, \"$200\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 33\n      }\n    }, \"$500\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 33\n      }\n    }, \"$1,000\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 33\n      }\n    }, \"$5,000\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 33\n      }\n    }, \"$10,000\"))), /*#__PURE__*/React.createElement(Col, {\n      className: \"col-padding\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 29\n      }\n    }, \"SERIAL NUMBER\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"serialnumber\",\n      type: \"text\",\n      placeholder: \"Optional\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      style: {\n        position: 'relative'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 29\n      }\n    }, \"ISSUE DATE\"), /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      name: \"iMonth\",\n      type: \"number\",\n      placeholder: \"Month\",\n      maxLength: \"2\",\n      min: \"1\",\n      max: \"12\",\n      defaultValue: \"11\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n      id: \"inputGroupPrepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 37\n      }\n    }, \"/\")), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      name: \"iYear\",\n      type: \"number\",\n      placeholder: \"Year\",\n      maxLength: \"4\",\n      min: \"1940\",\n      max: this.state.year,\n      style: {\n        marginLeft: '-1px'\n      },\n      defaultValue: \"2005\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      size: \"sm\",\n      style: {\n        position: 'absolute',\n        top: '0',\n        right: '.5em',\n        fontSize: '.65em',\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 29\n      }\n    }, \"SUBMIT\")))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"card-container\",\n      style: {\n        width: '100%',\n        float: 'left',\n        paddingTop: '2em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: this.state.showCards,\n      className: \"card-one\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: {\n        fontSize: '14px',\n        padding: '.50em',\n        fontWeight: '500'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 25\n      }\n    }, \"VALUE AS OF\"), /*#__PURE__*/React.createElement(Card.Body, {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 29\n      }\n    }, this.state.currentBond ? this.formatDate(this.state.currentBond['vDate']) : null))), /*#__PURE__*/React.createElement(Card, {\n      style: this.state.showCards,\n      className: \"card-two\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: {\n        fontSize: '14px',\n        padding: '.50em',\n        fontWeight: '500'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 25\n      }\n    }, \"TOTAL COST\"), /*#__PURE__*/React.createElement(Card.Body, {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      id: \"card-price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 29\n      }\n    }, \"$0.00\"))), /*#__PURE__*/React.createElement(Card, {\n      style: this.state.showCards,\n      className: \"card-three\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: {\n        fontSize: '14px',\n        padding: '.50em',\n        fontWeight: '500'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 25\n      }\n    }, \"TOTAL INTEREST\"), /*#__PURE__*/React.createElement(Card.Body, {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      id: \"card-interest\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 29\n      }\n    }, \"$0.00\"))), /*#__PURE__*/React.createElement(Card, {\n      style: this.state.showCards,\n      className: \"card-four\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: {\n        fontSize: '14px',\n        padding: '.50em',\n        fontWeight: '500'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 25\n      }\n    }, \"TOTAL VALUE\"), /*#__PURE__*/React.createElement(Card.Body, {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      id: \"card-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 29\n      }\n    }, \"$0.00\")))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        float: 'left',\n        marginTop: '1em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      id: \"bond-table\",\n      hidden: this.state.hideTable,\n      onChange: this.state.changeTable,\n      style: {\n        width: '100%',\n        margin: 'auto',\n        marginBottom: '2em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      style: {\n        textAlign: \"center\",\n        fontSize: \"11px\",\n        textTransform: \"uppercase\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 33\n      }\n    }, \"Serial Number\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 33\n      }\n    }, \"Series\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 33\n      }\n    }, \"Denomination\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 33\n      }\n    }, \"Issue Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 33\n      }\n    }, \"Next Accrual\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 33\n      }\n    }, \"Final Maturity\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 33\n      }\n    }, \"Issue Price\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 33\n      }\n    }, \"Interest\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 33\n      }\n    }, \"Value\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n}\n\nexport default BondPricingOne;","map":{"version":3,"sources":["/Users/greggvanorden/Desktop/bonds_react_app/bonds-react-app/src/components/bond_pricing.jsx"],"names":["React","Component","Form","Col","InputGroup","Button","OverlayTrigger","Tooltip","Table","Card","BondPricingOne","constructor","props","state","currentBond","totalPrice","totalInterest","totalValue","totalDate","month","getCurrentMonth","year","getCurrentYear","showTooltip","visibility","showCards","hideTable","onUpdateEnter","bind","onUpdateClick","onSubmit","formatDate","appendToTable","value_date","months","split","month_string","d","Date","getMonth","getFullYear","handleClickX","element","parentNode","remove","rows","document","getElementById","getElementsByTagName","length","style","total_prices","total_interests","total_values","prices","getElementsByClassName","i","price","innerHTML","undefined","push","parseFloat","substring","interests","interest","values","value","reduce","a","b","toFixed","bondTable","bondRow","insertRow","textAlign","insertCell","cell6","className","cell7","cell8","position","span","createElement","setAttribute","border","button","onclick","right","append","isNaN","j","e","preventDefault","setTimeout","setState","bonds","console","log","target","aMonth","aYear","series_map","bond","series","denomination","serialnumber","iMonth","iYear","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","render","width","margin","marginTop","fontSize","marginLeft","top","fontWeight","float","paddingTop","padding","changeTable","marginBottom","textTransform"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Col, InputGroup, Button, OverlayTrigger, Tooltip, Table, Card } from 'react-bootstrap';\nimport '../index.css'\n\nclass BondPricingOne extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentBond: null,\n            totalPrice: null,\n            totalInterest: null,\n            totalValue: null,\n            totalDate: null,\n            month: this.getCurrentMonth(),\n            year: this.getCurrentYear(),\n            showTooltip: { visibility: 'visible' },\n            showCards: { visibility: 'hidden' },\n            hideTable: true\n        };\n\n        this.onUpdateEnter = this.onUpdateEnter.bind(this)\n        this.onUpdateClick = this.onUpdateClick.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n        this.formatDate = this.formatDate.bind(this)\n        this.appendToTable = this.appendToTable.bind(this)\n    }\n\n    formatDate(value_date) {\n        const months = { \"01\": \"Jan.\", \"02\": \"Feb.\", \"03\": \"March\", \"04\": \"April\", \"05\": \"May\", \"06\": \"June\", \"07\": \"July\", \"08\": \"Aug.\", \"09\": \"Sept\", \"10\": \"Oct\", \"11\": \"Nov\", \"12\": \"Dec\" }\n\n        let month = value_date.split('/')[0]\n        let year = value_date.split('/')[1]\n\n        let month_string = months[month] + ' 1, ' + year\n\n        return month_string\n    }\n\n    getCurrentMonth() {\n        let d = new Date();\n        return d.getMonth() + 1\n    }\n\n    getCurrentYear() {\n        let d = new Date();\n\n        return d.getFullYear()\n    }\n\n    appendToTable(currentBond) {\n        function handleClickX(element) {\n            element.parentNode.parentNode.remove()\n\n            let rows = document.getElementById('bond-table').getElementsByTagName('tr')\n\n            if (rows.length === 2) {\n                element.parentNode.parentNode.remove()\n\n                document.getElementById('bond-table').getElementsByTagName('tr')[0].style.visibility = 'hidden'\n            }\n\n            let total_prices = []\n            let total_interests = []\n            let total_values = []\n\n            let prices = document.getElementsByClassName('issue-price')\n            for (let i in prices) {\n                let price = prices[i].innerHTML\n                if (price !== undefined) {\n                    total_prices.push(parseFloat(price.substring(1)))\n                }\n            }\n\n            let interests = document.getElementsByClassName('bond-interest')\n            for (let i in interests) {\n                let interest = interests[i].innerHTML\n                if (interest !== undefined) {\n                    total_interests.push(parseFloat(interest.substring(1)))\n                }\n            }\n\n            let values = document.getElementsByClassName('bond-value')\n\n            for (let i in values) {\n                let value = values[i].innerHTML\n                if (value !== undefined) {\n                    total_values.push(parseFloat(value.substring(1)))\n                }\n            }\n\n            document.getElementById('card-price').innerHTML = '$' + parseFloat(total_prices.reduce((a, b) => a + b, 0)).toFixed(2)\n            document.getElementById('card-interest').innerHTML = '$' + parseFloat(total_interests.reduce((a, b) => a + b, 0)).toFixed(2)\n            document.getElementById('card-value').innerHTML = '$' + parseFloat(total_values.reduce((a, b) => a + b, 0)).toFixed(2)\n        }\n\n        const bondTable = document.getElementById('bond-table')\n\n        bondTable.getElementsByTagName('tr')[0].style.visibility = 'visible'\n\n        let bondRow = bondTable.insertRow(1);\n        bondRow.style.textAlign = 'center'\n\n        bondRow.insertCell(0).innerHTML = currentBond['serialNumber']\n        bondRow.insertCell(1).innerHTML = currentBond['series']\n        bondRow.insertCell(2).innerHTML = currentBond['denomination']\n        bondRow.insertCell(3).innerHTML = currentBond['iDate']\n        bondRow.insertCell(4).innerHTML = currentBond['aDate']\n        bondRow.insertCell(5).innerHTML = currentBond['mDate']\n\n        let cell6 = bondRow.insertCell(6)\n        cell6.className = 'issue-price'\n        cell6.innerHTML = '$' + currentBond['iPrice']\n\n        let cell7 = bondRow.insertCell(7)\n        cell7.className = 'bond-interest'\n        cell7.innerHTML = '$' + currentBond['interest']\n\n        let cell8 = bondRow.insertCell(8)\n        cell8.className = 'bond-value'\n        cell8.innerHTML = '$' + currentBond['value']\n        cell8.style.position = 'relative'\n\n        let span = document.createElement('span')\n        span.innerHTML = '&times;'\n        span.setAttribute('aria-hidden', 'true')\n        span.style.border = 'none';\n\n        let button = document.createElement('button')\n        button.onclick = function () { handleClickX(this); };\n        button.className = 'close'\n        button.style.position = 'absolute'\n        button.style.right = '-1em'\n\n        button.append(span);\n        cell8.append(button);\n\n        let rows = bondTable.getElementsByTagName('tr')\n\n        let total_prices = []\n        let total_interests = []\n        let total_values = []\n\n        for (let i in rows) {\n            if (!isNaN(i)) {\n                if (i > 0 && i < (rows.length - 1)) {\n\n                    let prices = rows[i].getElementsByClassName('issue-price')\n                    for (let j in prices) {\n                        let price = prices[j].innerHTML\n                        if (price !== undefined) {\n                            total_prices.push(parseFloat(price.substring(1)))\n                        }\n                    }\n\n                    let interests = rows[i].getElementsByClassName('bond-interest')\n                    for (let j in interests) {\n                        let interest = interests[j].innerHTML\n                        if (interest !== undefined) {\n                            total_interests.push(parseFloat(interest.substring(1)))\n                        }\n                    }\n\n                    let values = rows[i].getElementsByClassName('bond-value')\n                    for (let j in values) {\n                        let value = values[j].innerHTML\n                        if (value !== undefined) {\n                            total_values.push(parseFloat(value.substring(1)))\n                        }\n                    }\n                }\n            }\n        }\n\n        document.getElementById('card-price').innerHTML = '$' + parseFloat(total_prices.reduce((a, b) => a + b, 0)).toFixed(2)\n        document.getElementById('card-interest').innerHTML = '$' + parseFloat(total_interests.reduce((a, b) => a + b, 0)).toFixed(2)\n        document.getElementById('card-value').innerHTML = '$' + parseFloat(total_values.reduce((a, b) => a + b, 0)).toFixed(2)\n    }\n\n    onUpdateEnter(e) {\n        e.preventDefault();\n\n        setTimeout(() => {\n            this.setState({ showTooltip: { visibility: 'hidden' } })\n        }, 3500)\n    }\n\n    onUpdateClick(e) {\n        let rows = document.getElementById('bond-table').getElementsByTagName('tr')\n\n        let bonds = []\n\n        console.log(e.target.aMonth.value)\n        console.log(e.target.aYear.value)\n\n        for (let i in rows) {\n            if (!isNaN(i)) {\n                if (i > 0 && i < (rows.length - 1)) {\n                    console.log(rows[i])\n\n                    //rows[i].getElementsByTagName('td')[1].innerHTML\n                    /*let bond = {\n                        'vMonth': ,\n                        'vYear': ,\n                        'series': ,\n                        'denomination': ,\n                        'serialNumber': ,\n                        'iMonth': ,\n                        'iYear': ,\n                    }*/\n                }\n            }\n        }\n\n        /*        const requestOptions = {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' },\n                    body: JSON.stringify({})\n                };\n        \n                fetch('http://localhost:5000/update', requestOptions)\n                    .then(response => response.json())\n                    .then(response => {\n                        this.appendToTable(response)\n        \n                        this.setState({\n                            currentBond: response\n                        })\n                    })\n        */\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        if (this.state.hideTable) {\n            this.setState({ hideTable: false, showCards: { visibility: 'visible' } })\n        }\n\n        const series_map = {\n            'EE Bond': 'EE',\n            'E Bond': 'E',\n            'I Bond': 'I',\n            'Savings Bond': 'S'\n        }\n\n        let bond = {\n            'vMonth': e.target.aMonth.value,\n            'vYear': e.target.aYear.value,\n            'series': series_map[e.target.series.value],\n            'denomination': (e.target.denomination.value).substring(1),\n            'serialNumber': e.target.serialnumber.value,\n            'iMonth': e.target.iMonth.value,\n            'iYear': e.target.iYear.value\n        }\n\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' },\n            body: JSON.stringify({ bond })\n        };\n\n        fetch('http://localhost:5000/individual/bonds', requestOptions)\n            .then(response => response.json())\n            .then(response => {\n                this.appendToTable(response)\n\n                this.setState({\n                    currentBond: response\n                })\n            })\n    }\n\n    render() {\n        return (\n            <div style={{ width: '75%', margin: 'auto', marginTop: '1.5em' }}>\n                <Form onSubmit={this.onSubmit} style={{ width: '100%', fontSize: '14px' }}>\n                    <Form.Row>\n                        <Col className=\"col-padding\" style={{ position: 'relative' }}>\n                            <Form.Label>VALUE AS OF</Form.Label>\n                            <InputGroup>\n                                <Form.Control\n                                    required\n                                    name=\"aMonth\"\n                                    type=\"number\"\n                                    placeholder=\"Month\"\n                                    min=\"1\"\n                                    max=\"12\"\n                                    defaultValue={this.state.month}\n                                />\n                                <InputGroup.Append>\n                                    <InputGroup.Text id=\"inputGroupPrepend\">/</InputGroup.Text>\n                                </InputGroup.Append>\n                                <Form.Control\n                                    required\n                                    name=\"aYear\"\n                                    type=\"number\"\n                                    placeholder=\"Year\"\n                                    maxLength=\"4\"\n                                    min=\"1992\"\n                                    max={this.state.year}\n                                    style={{ marginLeft: '-1px' }}\n                                    defaultValue={this.state.year}\n                                />\n                            </InputGroup>\n                            <OverlayTrigger placement='right' overlay={\n                                <Tooltip style={this.state.showTooltip} >\n                                    Revalue all bonds by this date.\n                                    </Tooltip>}>\n                                <Button type=\"button\" size='sm' variant='success' onMouseEnter={this.onUpdateEnter} onClick={this.onUpdateClick} style={{ position: 'absolute', top: '0', right: '1.5em', fontSize: '.65em', fontWeight: 'bold' }}>UPDATE</Button>\n                            </OverlayTrigger>\n                        </Col>\n                        <Col className=\"col-padding\">\n                            <Form.Label>SERIES</Form.Label>\n                            <Form.Control name=\"series\" as=\"select\" custom>\n                                <option>EE Bond</option>\n                                <option>I Bond</option>\n                                <option>E Bond</option>\n                                <option>Savings Note</option>\n                            </Form.Control>\n                        </Col>\n                        <Col className=\"col-padding\">\n                            <Form.Label>DENOMINATION</Form.Label>\n                            <Form.Control name=\"denomination\" as=\"select\" custom>\n                                <option>$25</option>\n                                <option>$50</option>\n                                <option>$75</option>\n                                <option>$100</option>\n                                <option>$200</option>\n                                <option>$500</option>\n                                <option>$1,000</option>\n                                <option>$5,000</option>\n                                <option>$10,000</option>\n                            </Form.Control>\n                        </Col>\n                        <Col className=\"col-padding\">\n                            <Form.Label size='sm'>SERIAL NUMBER</Form.Label>\n                            <Form.Control\n                                name=\"serialnumber\"\n                                type=\"text\"\n                                placeholder=\"Optional\"\n                            />\n                        </Col>\n                        <Col style={{ position: 'relative' }}>\n                            <Form.Label>ISSUE DATE</Form.Label>\n                            <InputGroup>\n                                <Form.Control\n                                    required\n                                    name=\"iMonth\"\n                                    type=\"number\"\n                                    placeholder=\"Month\"\n                                    maxLength=\"2\"\n                                    min=\"1\"\n                                    max=\"12\"\n                                    defaultValue=\"11\"\n                                />\n                                <InputGroup.Append>\n                                    <InputGroup.Text id=\"inputGroupPrepend\">/</InputGroup.Text>\n                                </InputGroup.Append>\n                                <Form.Control\n                                    required\n                                    name=\"iYear\"\n                                    type=\"number\"\n                                    placeholder=\"Year\"\n                                    maxLength=\"4\"\n                                    min=\"1940\"\n                                    max={this.state.year}\n                                    style={{ marginLeft: '-1px' }}\n                                    defaultValue=\"2005\"\n                                />\n                            </InputGroup>\n                            <Button type=\"submit\" size='sm' style={{ position: 'absolute', top: '0', right: '.5em', fontSize: '.65em', fontWeight: 'bold' }}>SUBMIT</Button>\n                        </Col>\n                    </Form.Row>\n                </Form >\n                <div id=\"card-container\" style={{ width: '100%', float: 'left', paddingTop: '2em' }}>\n                    <Card style={this.state.showCards} className='card-one'>\n                        <Card.Header style={{ fontSize: '14px', padding: '.50em', fontWeight: '500' }}>VALUE AS OF</Card.Header>\n                        <Card.Body style={{ textAlign: 'center' }}>\n                            <Card.Title>{this.state.currentBond ? this.formatDate(this.state.currentBond['vDate']) : null}</Card.Title>\n                        </Card.Body>\n                    </Card>\n                    <Card style={this.state.showCards} className='card-two'>\n                        <Card.Header style={{ fontSize: '14px', padding: '.50em', fontWeight: '500' }}>TOTAL COST</Card.Header>\n                        <Card.Body style={{ textAlign: 'center' }}>\n                            <Card.Title id=\"card-price\">$0.00</Card.Title>\n                        </Card.Body>\n                    </Card>\n                    <Card style={this.state.showCards} className='card-three'>\n                        <Card.Header style={{ fontSize: '14px', padding: '.50em', fontWeight: '500' }}>TOTAL INTEREST</Card.Header>\n                        <Card.Body style={{ textAlign: 'center' }}>\n                            <Card.Title id=\"card-interest\">$0.00</Card.Title>\n                        </Card.Body>\n                    </Card>\n                    <Card style={this.state.showCards} className='card-four'>\n                        <Card.Header style={{ fontSize: '14px', padding: '.50em', fontWeight: '500' }}>TOTAL VALUE</Card.Header>\n                        <Card.Body style={{ textAlign: 'center' }}>\n                            <Card.Title id=\"card-value\">$0.00</Card.Title>\n                        </Card.Body>\n                    </Card>\n                </div>\n                <div style={{ width: '100%', float: 'left', marginTop: '1em' }}>\n                    <Table striped bordered hover id=\"bond-table\" hidden={this.state.hideTable} onChange={this.state.changeTable} style={{ width: '100%', margin: 'auto', marginBottom: '2em' }}>\n                        <thead style={{ textAlign: \"center\", fontSize: \"11px\", textTransform: \"uppercase\" }}>\n                            <tr>\n                                <th>Serial Number</th>\n                                <th>Series</th>\n                                <th>Denomination</th>\n                                <th>Issue Date</th>\n                                <th>Next Accrual</th>\n                                <th>Final Maturity</th>\n                                <th>Issue Price</th>\n                                <th>Interest</th>\n                                <th>Value</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr></tr>\n                        </tbody>\n                    </Table>\n                </div>\n            </div >\n        )\n    }\n}\n\nexport default BondPricingOne;\n\n"]},"metadata":{},"sourceType":"module"}