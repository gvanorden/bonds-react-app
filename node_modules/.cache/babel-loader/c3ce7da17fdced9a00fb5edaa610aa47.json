{"ast":null,"code":"var _jsxFileName = \"/Users/greggvanorden/Desktop/bonds_react_app/bonds-react-app/src/components/bond_pricing_spreadsheet.jsx\";\nimport React, { Component } from \"react\";\nimport { Form, Button, Table, Card } from \"react-bootstrap\";\nimport { CSVLink } from \"react-csv\";\n\nclass BondPricingTwo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      label: 'Attach .csv',\n      bonds: [],\n      totals: [],\n      spinner: false,\n      export: []\n    };\n    this.setFilename = this.setFilename.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  setFilename(e) {\n    if (e.target.files.length > 0) {\n      this.setState({\n        label: e.target.files[0].name\n      });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    if (this.state.hideTable) {\n      this.setState({\n        hideTable: false,\n        showCards: {\n          visibility: 'visible'\n        }\n      });\n    }\n\n    var reader = new FileReader();\n\n    reader.onload = () => {\n      const csv = reader.result;\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        },\n        body: JSON.stringify({\n          csv\n        })\n      };\n      fetch('http://localhost:5000/update', requestOptions).then(response => response.json()).then(response => {\n        let exports = [];\n        exports.push(['Lookup Date', 'Serial Number', 'Series', 'Bond Amount', 'Issue Date', 'Next Accrual', 'Final Maturity', 'Issue Price', 'Interest', 'Interest Rate', 'Bond Value']);\n\n        for (let i = 0; i < response[0].length; i++) {\n          let values = [response['vDate'], response['serialNumber'], response['series'], '$' + response['denomination'], response['iDate'], response['aDate'], response['mDate'], '$' + response['iPrice'], '$' + response['interest'], '$' + response['value']];\n          exports.push(values);\n        }\n\n        this.setState({\n          totalDate: this.formatDate(response[1]['totalDate']),\n          totalDenomination: response[1]['totalDenominations'],\n          totalPrice: response[1]['totalPrices'],\n          totalInterest: response[1]['totalInterests'],\n          totalValue: response[1]['totalValues']\n        });\n        exports.push([\"\", \"\", \"\", '$' + response[1]['totalDenominations'], \"\", \"\", \"\", '$' + parseFloat(response[1]['totalPrices']).toFixed(2), '$' + parseFloat(response[1]['totalInterests']).toFixed(2), '$' + parseFloat(response[1]['totalValues']).toFixed(2)]);\n        this.setState({\n          bonds: response[0],\n          exportResults: exports\n        });\n      });\n    };\n\n    reader.readAsText(e.target.files[0]);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: \"form-csv\",\n      style: {\n        position: 'relative'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, \"ATTACHMENT\"), /*#__PURE__*/React.createElement(Form.File, {\n      id: \"custom-file\",\n      label: this.state.label,\n      onChange: this.setFilename,\n      custom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      size: \"sm\",\n      style: {\n        position: 'absolute',\n        top: '0',\n        right: '.5em',\n        fontSize: '.65em',\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, \"SUBMIT\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: 'left',\n        width: '100%',\n        marginTop: '2em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, this.state.totals.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '50em',\n        margin: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: '15em',\n        float: 'left'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      style: {\n        margin: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card.Subtitle, {\n      className: \"mb-2 text-muted\",\n      style: {\n        fontSize: '14px',\n        fontWeight: 'bold',\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 37\n      }\n    }, \"VALUE TOTAL\"), /*#__PURE__*/React.createElement(Card.Title, {\n      style: {\n        color: 'green',\n        fontSize: '28px',\n        textAlign: 'center',\n        marginBottom: '0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 37\n      }\n    }, this.state.totals[0]))), /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: '15em',\n        float: 'left',\n        marginLeft: '2.5em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      style: {\n        margin: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card.Subtitle, {\n      className: \"mb-2 text-muted\",\n      style: {\n        fontSize: '14px',\n        fontWeight: 'bold',\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 37\n      }\n    }, \"AMOUNT TOTAL\"), /*#__PURE__*/React.createElement(Card.Title, {\n      style: {\n        fontSize: '28px',\n        textAlign: 'center',\n        marginBottom: '0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 37\n      }\n    }, this.state.totals[1]))), /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: '15em',\n        float: 'left',\n        marginLeft: '2.5em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      style: {\n        margin: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card.Subtitle, {\n      className: \"mb-2 text-muted\",\n      style: {\n        fontSize: '14px',\n        fontWeight: 'bold',\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 37\n      }\n    }, \"ISSUE PRICE TOTAL\"), /*#__PURE__*/React.createElement(Card.Title, {\n      style: {\n        fontSize: '28px',\n        textAlign: 'center',\n        marginBottom: '0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 37\n      }\n    }, this.state.totals[2])))) : null), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: 'left',\n        width: '100%',\n        margin: '.5em 0 .25em 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '85%',\n        margin: 'auto',\n        textAlign: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, this.state.rows.length > 0 ? /*#__PURE__*/React.createElement(CSVLink, {\n      filename: 'export_' + this.state.label,\n      data: this.state.export,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 29\n      }\n    }, \"+ [Export]\") : null)), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: 'left',\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, this.state.rows.length > 0 ? /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      style: {\n        width: '85%',\n        margin: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      style: {\n        textAlign: \"center\",\n        fontSize: \"11px\",\n        textTransform: \"uppercase\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 41\n      }\n    }, \"Lookup Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 41\n      }\n    }, \"Serial Number\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 41\n      }\n    }, \"Bond Type\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 41\n      }\n    }, \"Bond Amount\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 41\n      }\n    }, \"Issue Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 41\n      }\n    }, \"Next Accrual\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 41\n      }\n    }, \"Final Maturity\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 41\n      }\n    }, \"Issue Price\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 41\n      }\n    }, \"Interest\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 41\n      }\n    }, \"Interest Rate\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 41\n      }\n    }, \"Value\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 33\n      }\n    }, this.state.rows.map(result => /*#__PURE__*/React.createElement(\"tr\", {\n      key: result[1],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 45\n      }\n    }, result[0]), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 45\n      }\n    }, result[1]), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 45\n      }\n    }, result[2]), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 45\n      }\n    }, result[3]), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 45\n      }\n    }, result[4]), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 45\n      }\n    }, result[5]), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 45\n      }\n    }, result[6]), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 45\n      }\n    }, result[7]), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 45\n      }\n    }, result[8]), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 45\n      }\n    }, result[9]), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 45\n      }\n    }, result[10]))))) : null));\n  }\n\n}\n\nexport default BondPricingTwo;","map":{"version":3,"sources":["/Users/greggvanorden/Desktop/bonds_react_app/bonds-react-app/src/components/bond_pricing_spreadsheet.jsx"],"names":["React","Component","Form","Button","Table","Card","CSVLink","BondPricingTwo","constructor","props","state","label","bonds","totals","spinner","export","setFilename","bind","onSubmit","e","target","files","length","setState","name","preventDefault","hideTable","showCards","visibility","reader","FileReader","onload","csv","result","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","exports","push","i","values","totalDate","formatDate","totalDenomination","totalPrice","totalInterest","totalValue","parseFloat","toFixed","exportResults","readAsText","render","position","top","right","fontSize","fontWeight","float","width","marginTop","margin","textAlign","color","marginBottom","marginLeft","rows","textTransform","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Button, Table, Card } from \"react-bootstrap\";\nimport { CSVLink } from \"react-csv\";\n\n\nclass BondPricingTwo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            label: 'Attach .csv',\n            bonds: [],\n            totals: [],\n            spinner: false,\n            export: []\n        };\n\n        this.setFilename = this.setFilename.bind(this);\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    setFilename(e) {\n        if (e.target.files.length > 0) {\n            this.setState({ label: e.target.files[0].name })\n        }\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        if (this.state.hideTable) {\n            this.setState({ hideTable: false, showCards: { visibility: 'visible' } })\n        }\n\n        var reader = new FileReader();\n\n        reader.onload = () => {\n            const csv = reader.result\n\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' },\n                body: JSON.stringify({ csv })\n            };\n\n            fetch('http://localhost:5000/update', requestOptions)\n                .then(response => response.json())\n                .then(response => {\n                    let exports = []\n\n                    exports.push(['Lookup Date', 'Serial Number', 'Series', 'Bond Amount', 'Issue Date', 'Next Accrual', 'Final Maturity', 'Issue Price', 'Interest', 'Interest Rate', 'Bond Value'])\n\n                    for (let i = 0; i < response[0].length; i++) {\n                        let values = [\n                            response['vDate'],\n                            response['serialNumber'],\n                            response['series'],\n                            '$' + response['denomination'],\n                            response['iDate'],\n                            response['aDate'],\n                            response['mDate'],\n                            '$' + response['iPrice'],\n                            '$' + response['interest'],\n                            '$' + response['value']\n                        ]\n\n                        exports.push(values);\n                    }\n\n                    this.setState({\n                        totalDate: this.formatDate(response[1]['totalDate']),\n                        totalDenomination: response[1]['totalDenominations'],\n                        totalPrice: response[1]['totalPrices'],\n                        totalInterest: response[1]['totalInterests'],\n                        totalValue: response[1]['totalValues']\n                    })\n\n                    exports.push([\n                        \"\",\n                        \"\",\n                        \"\",\n                        '$' + response[1]['totalDenominations'],\n                        \"\",\n                        \"\",\n                        \"\",\n                        '$' + parseFloat(response[1]['totalPrices']).toFixed(2),\n                        '$' + parseFloat(response[1]['totalInterests']).toFixed(2),\n                        '$' + parseFloat(response[1]['totalValues']).toFixed(2)\n                    ])\n\n                    this.setState({ bonds: response[0], exportResults: exports })\n                })\n        }\n\n        reader.readAsText(e.target.files[0]);\n    }\n\n\n    render() {\n        return (\n            <React.Fragment>\n                <Form className=\"form-csv\" style={{ position: 'relative' }}>\n                    <Form.Label>ATTACHMENT</Form.Label>\n                    <Form.File\n                        id=\"custom-file\"\n                        label={this.state.label}\n                        onChange={this.setFilename}\n                        custom\n                    />\n                    <Button type=\"submit\" size='sm' style={{ position: 'absolute', top: '0', right: '.5em', fontSize: '.65em', fontWeight: 'bold' }}>SUBMIT</Button>\n                </Form>\n                <div style={{ float: 'left', width: '100%', marginTop: '2em' }}>\n                    {this.state.totals.length > 0 ?\n                        <div style={{ width: '50em', margin: 'auto' }}>\n                            <Card style={{ width: '15em', float: 'left' }}>\n                                <Card.Body style={{ margin: 'auto' }} >\n                                    <Card.Subtitle className=\"mb-2 text-muted\" style={{ fontSize: '14px', fontWeight: 'bold', textAlign: 'center' }}>VALUE TOTAL</Card.Subtitle>\n                                    <Card.Title style={{ color: 'green', fontSize: '28px', textAlign: 'center', marginBottom: '0' }}>{this.state.totals[0]}</Card.Title>\n                                </Card.Body>\n                            </Card>\n                            <Card style={{ width: '15em', float: 'left', marginLeft: '2.5em' }}>\n                                <Card.Body style={{ margin: 'auto' }}>\n                                    <Card.Subtitle className=\"mb-2 text-muted\" style={{ fontSize: '14px', fontWeight: 'bold', textAlign: 'center' }}>AMOUNT TOTAL</Card.Subtitle>\n                                    <Card.Title style={{ fontSize: '28px', textAlign: 'center', marginBottom: '0' }}>{this.state.totals[1]}</Card.Title>\n                                </Card.Body>\n                            </Card>\n                            <Card style={{ width: '15em', float: 'left', marginLeft: '2.5em' }}>\n                                <Card.Body style={{ margin: 'auto' }}>\n                                    <Card.Subtitle className=\"mb-2 text-muted\" style={{ fontSize: '14px', fontWeight: 'bold', textAlign: 'center' }}>ISSUE PRICE TOTAL</Card.Subtitle>\n                                    <Card.Title style={{ fontSize: '28px', textAlign: 'center', marginBottom: '0' }}>{this.state.totals[2]}</Card.Title>\n                                </Card.Body>\n                            </Card>\n                        </div> : null}\n                </div>\n                <div style={{ float: 'left', width: '100%', margin: '.5em 0 .25em 0' }}>\n                    <div style={{ width: '85%', margin: 'auto', textAlign: 'right' }}>\n                        {this.state.rows.length > 0 ?\n                            <CSVLink filename={'export_' + this.state.label} data={this.state.export}>+ [Export]</CSVLink> : null}\n                    </div>\n                </div>\n                <div style={{ float: 'left', width: '100%' }}>\n                    {\n                        this.state.rows.length > 0 ?\n                            <Table striped bordered hover style={{ width: '85%', margin: 'auto' }}>\n                                <thead style={{ textAlign: \"center\", fontSize: \"11px\", textTransform: \"uppercase\" }}>\n                                    <tr>\n                                        <th>Lookup Date</th>\n                                        <th>Serial Number</th>\n                                        <th>Bond Type</th>\n                                        <th>Bond Amount</th>\n                                        <th>Issue Date</th>\n                                        <th>Next Accrual</th>\n                                        <th>Final Maturity</th>\n                                        <th>Issue Price</th>\n                                        <th>Interest</th>\n                                        <th>Interest Rate</th>\n                                        <th>Value</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.state.rows.map((result) => (\n                                        <tr key={result[1]}>\n                                            <td>{result[0]}</td>\n                                            <td>{result[1]}</td>\n                                            <td>{result[2]}</td>\n                                            <td>{result[3]}</td>\n                                            <td>{result[4]}</td>\n                                            <td>{result[5]}</td>\n                                            <td>{result[6]}</td>\n                                            <td>{result[7]}</td>\n                                            <td>{result[8]}</td>\n                                            <td>{result[9]}</td>\n                                            <td>{result[10]}</td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table> : null}\n                </div>\n            </React.Fragment >\n        )\n    }\n}\n\nexport default BondPricingTwo;\n"]},"metadata":{},"sourceType":"module"}