{"ast":null,"code":"var _jsxFileName = \"/Users/greggvanorden/Desktop/bonds_react_app/bonds-react-app/src/components/bond_pricing.jsx\";\nimport React, { Component } from 'react';\nimport { Form, Col, InputGroup, Button, OverlayTrigger, Tooltip, Table, Card } from 'react-bootstrap';\nimport { CSVLink } from \"react-csv\";\nimport '../index.css';\n\nclass BondPricingOne extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalPrice: null,\n      totalInterest: null,\n      totalValue: null,\n      example: null,\n      month: this.getCurrentMonth(),\n      year: this.getCurrentYear(),\n      showTooltip: {\n        visibility: 'visible'\n      },\n      showCards: {\n        visibility: 'hidden'\n      },\n      hideTable: true,\n      export: \"Value as of, Serial #, Series, Denomination, Issue Date, Next Accrual, Final Maturity, Issue Price, Interest, Value\",\n      exportResults: []\n    };\n    this.onUpdateEnter = this.onUpdateEnter.bind(this);\n    this.onUpdateClick = this.onUpdateClick.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.formatDate = this.formatDate.bind(this);\n    this.appendToTable = this.appendToTable.bind(this);\n    this.exportData = this.exportData.bind(this); //this.handleClickX = this.handleClickX.bind(this)\n  }\n\n  formatDate(value_date) {\n    const months = {\n      \"01\": \"Jan.\",\n      \"02\": \"Feb.\",\n      \"03\": \"March\",\n      \"04\": \"April\",\n      \"05\": \"May\",\n      \"06\": \"June\",\n      \"07\": \"July\",\n      \"08\": \"Aug.\",\n      \"09\": \"Sept\",\n      \"10\": \"Oct\",\n      \"11\": \"Nov\",\n      \"12\": \"Dec\"\n    };\n    let month = value_date.split('/')[0];\n    let year = value_date.split('/')[1];\n    let month_string = months[month] + ' 1, ' + year;\n    return month_string;\n  }\n\n  getCurrentMonth() {\n    let d = new Date();\n    return d.getMonth() + 1;\n  }\n\n  getCurrentYear() {\n    let d = new Date();\n    return d.getFullYear();\n  }\n\n  handleClickX(element) {\n    element.parentNode.parentNode.remove();\n    let rows = document.getElementById('bond-table').getElementsByClassName('bond-row');\n\n    if (rows.length === 0) {\n      document.getElementById('bond-table').getElementsByTagName('tr')[0].style.visibility = 'hidden';\n    }\n\n    this.setState({\n      example: 'test'\n    });\n  }\n\n  appendToTable(currentBond) {\n    function handleClickX(element) {\n      element.parentNode.parentNode.remove();\n      let rows = document.getElementById('bond-table').getElementsByClassName('bond-row');\n\n      if (rows.length === 0) {\n        document.getElementById('bond-table').getElementsByTagName('tr')[0].style.visibility = 'hidden';\n      }\n\n      let total_prices = [];\n      let total_interests = [];\n      let total_values = [];\n      let prices = document.getElementsByClassName('issue-price');\n\n      for (let i in prices) {\n        let price = prices[i].innerHTML;\n\n        if (price !== undefined) {\n          total_prices.push(parseFloat(price.substring(1)));\n        }\n      }\n\n      let interests = document.getElementsByClassName('bond-interest');\n\n      for (let i in interests) {\n        let interest = interests[i].innerHTML;\n\n        if (interest !== undefined) {\n          total_interests.push(parseFloat(interest.substring(1)));\n        }\n      }\n\n      let values = document.getElementsByClassName('bond-value');\n\n      for (let i in values) {\n        let value = values[i].innerHTML;\n\n        if (value !== undefined) {\n          total_values.push(parseFloat(value.substring(1)));\n        }\n      }\n\n      document.getElementById('card-price').innerHTML = '$' + parseFloat(total_prices.reduce((a, b) => a + b, 0)).toFixed(2);\n      document.getElementById('card-interest').innerHTML = '$' + parseFloat(total_interests.reduce((a, b) => a + b, 0)).toFixed(2);\n      document.getElementById('card-value').innerHTML = '$' + parseFloat(total_values.reduce((a, b) => a + b, 0)).toFixed(2);\n    }\n\n    const bondTable = document.getElementById('bond-table');\n    let bondBody = null;\n\n    if (bondTable.getElementsByTagName('tbody').length === 0) {\n      bondBody = document.createElement('tbody');\n      bondTable.append(bondBody);\n    } else {\n      bondBody = bondTable.getElementsByTagName('tbody')[0];\n    }\n\n    bondTable.getElementsByTagName('tr')[0].style.visibility = 'visible';\n    let bondRow = bondBody.insertRow();\n    bondRow.className = \"bond-row\";\n    bondRow.style.textAlign = 'center';\n    bondRow.insertCell(0).innerHTML = currentBond['serialNumber'];\n    bondRow.insertCell(1).innerHTML = currentBond['series'];\n    bondRow.insertCell(2).innerHTML = currentBond['denomination'];\n    bondRow.insertCell(3).innerHTML = currentBond['iDate'];\n    bondRow.insertCell(4).innerHTML = currentBond['aDate'];\n    bondRow.insertCell(5).innerHTML = currentBond['mDate'];\n    let cell6 = bondRow.insertCell(6);\n    cell6.className = 'issue-price';\n    cell6.innerHTML = '$' + currentBond['iPrice'];\n    let cell7 = bondRow.insertCell(7);\n    cell7.className = 'bond-interest';\n    cell7.innerHTML = '$' + currentBond['interest'];\n    let cell8 = bondRow.insertCell(8);\n    cell8.className = 'bond-value';\n    cell8.innerHTML = '$' + currentBond['value'];\n    cell8.style.position = 'relative';\n    let span = document.createElement('span');\n    span.innerHTML = '&times;';\n    span.setAttribute('aria-hidden', 'true');\n    span.style.border = 'none';\n    let button = document.createElement('button');\n\n    button.onclick = () => {\n      this.handleClickX(button);\n    };\n\n    button.className = 'close';\n    button.style.position = 'absolute';\n    button.style.right = '-1em';\n    button.append(span);\n    cell8.append(button);\n    let rows = bondTable.getElementsByClassName('bond-row');\n    let total_prices = [];\n    let total_interests = [];\n    let total_values = [];\n\n    for (let i = 0; i < rows.length; i++) {\n      let prices = rows[i].getElementsByClassName('issue-price');\n\n      for (let j in prices) {\n        let price = prices[j].innerHTML;\n\n        if (price !== undefined) {\n          total_prices.push(parseFloat(price.substring(1)));\n        }\n      }\n\n      let interests = rows[i].getElementsByClassName('bond-interest');\n\n      for (let j in interests) {\n        let interest = interests[j].innerHTML;\n\n        if (interest !== undefined) {\n          total_interests.push(parseFloat(interest.substring(1)));\n        }\n      }\n\n      let values = rows[i].getElementsByClassName('bond-value');\n\n      for (let j in values) {\n        let value = values[j].innerHTML;\n\n        if (value !== undefined) {\n          total_values.push(parseFloat(value.substring(1)));\n        }\n      }\n    }\n\n    this.setState({\n      total_value: '$' + parseFloat(total_prices.reduce((a, b) => a + b, 0)).toFixed(2)\n    });\n    document.getElementById('card-interest').innerHTML = '$' + parseFloat(total_interests.reduce((a, b) => a + b, 0)).toFixed(2);\n    document.getElementById('card-value').innerHTML = '$' + parseFloat(total_values.reduce((a, b) => a + b, 0)).toFixed(2);\n  }\n\n  onUpdateEnter(e) {\n    e.preventDefault();\n    setTimeout(() => {\n      this.setState({\n        showTooltip: {\n          visibility: 'hidden'\n        }\n      });\n    }, 3500);\n  }\n\n  onUpdateClick() {\n    let rows = document.getElementById('bond-table').getElementsByTagName('tr');\n    let bonds = [];\n    let vMonth = document.getElementsByName('aMonth')[0].value;\n    let vYear = document.getElementsByName('aYear')[0].value;\n\n    for (let i = 1; i < rows.length; i++) {\n      let series = rows[i].getElementsByTagName('td')[1].innerHTML;\n      let denomination = rows[i].getElementsByTagName('td')[2].innerHTML.substring(1);\n      let serialNumber = rows[i].getElementsByTagName('td')[0].innerHTML;\n      let iMonth = rows[i].getElementsByTagName('td')[3].innerHTML.split('/')[0];\n      let iYear = rows[i].getElementsByTagName('td')[3].innerHTML.split('/')[1];\n      let bond = {\n        'vMonth': vMonth,\n        'vYear': vYear,\n        'series': series,\n        'denomination': denomination,\n        'serialNumber': serialNumber,\n        'iMonth': iMonth,\n        'iYear': iYear\n      };\n      bonds.push(bond);\n    }\n\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      },\n      body: JSON.stringify({\n        bonds\n      })\n    };\n    fetch('http://localhost:5000/update', requestOptions).then(response => response.json()).then(response => {\n      let bondRows = document.getElementById('bond-table').getElementsByTagName('tbody')[0];\n      bondRows.remove();\n\n      for (let i = 0; i < response.length; i++) {\n        this.appendToTable(response[i]);\n      }\n    });\n  }\n\n  exportData() {\n    let exports = this.state.export.split(',');\n    let total_denominations = [];\n    let total_prices = [];\n    let total_interests = [];\n    let total_values = [];\n    let export_data = [];\n    let i = 0;\n\n    while (i + 10 <= exports.length) {\n      export_data.push(exports.slice(i, i + 10));\n\n      if (i >= 10) {\n        total_denominations.push(parseFloat(exports[i + 3].substring(1)));\n        total_prices.push(parseFloat(exports[i + 7].substring(1)));\n        total_interests.push(parseFloat(exports[i + 8].substring(1)));\n        total_values.push(parseFloat(exports[i + 9].substring(1)));\n      }\n\n      i += 10;\n    }\n\n    let total_denomination = '$' + parseFloat(total_denominations.reduce((a, b) => a + b, 0)).toFixed(2);\n    let total_price = '$' + parseFloat(total_prices.reduce((a, b) => a + b, 0)).toFixed(2);\n    let total_interest = '$' + parseFloat(total_interests.reduce((a, b) => a + b, 0)).toFixed(2);\n    let total_value = '$' + parseFloat(total_values.reduce((a, b) => a + b, 0)).toFixed(2);\n    export_data.push([\"\", \"\", \"\", total_denomination, \"\", \"\", \"\", total_price, total_interest, total_value]);\n    this.setState({\n      exportResults: export_data\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    if (this.state.hideTable) {\n      this.setState({\n        hideTable: false,\n        showCards: {\n          visibility: 'visible'\n        }\n      });\n    }\n\n    const series_map = {\n      'EE Bond': 'EE',\n      'E Bond': 'E',\n      'I Bond': 'I',\n      'Savings Bond': 'S'\n    };\n    let bond = {\n      'vMonth': e.target.aMonth.value,\n      'vYear': e.target.aYear.value,\n      'series': series_map[e.target.series.value],\n      'denomination': e.target.denomination.value.substring(1),\n      'serialNumber': e.target.serialnumber.value,\n      'iMonth': e.target.iMonth.value,\n      'iYear': e.target.iYear.value\n    };\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      },\n      body: JSON.stringify({\n        bond\n      })\n    };\n    fetch('http://localhost:5000/individual/bonds', requestOptions).then(response => response.json()).then(response => {\n      this.appendToTable(response);\n      this.setState({\n        currentBond: response\n      });\n      let values = [response['vDate'], response['serialNumber'], response['series'], response['denomination'], response['iDate'], response['aDate'], response['mDate'], '$' + response['iPrice'], '$' + response['interest'], '$' + response['value']];\n      let export_string = this.state.export.concat(\",\" + values.toString());\n      this.setState({\n        export: export_string\n      });\n      this.exportData();\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '75%',\n        margin: 'auto',\n        marginTop: '1.5em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      style: {\n        width: '100%',\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"col-padding\",\n      style: {\n        position: 'relative'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 29\n      }\n    }, \"VALUE AS OF\"), /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      name: \"aMonth\",\n      type: \"number\",\n      placeholder: \"Month\",\n      min: \"1\",\n      max: \"12\",\n      defaultValue: this.state.month,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n      id: \"inputGroupPrepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 37\n      }\n    }, \"/\")), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      name: \"aYear\",\n      type: \"number\",\n      placeholder: \"Year\",\n      maxLength: \"4\",\n      min: \"1992\",\n      max: this.state.year,\n      style: {\n        marginLeft: '-1px'\n      },\n      defaultValue: this.state.year,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(OverlayTrigger, {\n      placement: \"right\",\n      overlay: /*#__PURE__*/React.createElement(Tooltip, {\n        style: this.state.showTooltip,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 33\n        }\n      }, \"Revalue all bonds by this date.\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      size: \"sm\",\n      variant: \"success\",\n      onMouseEnter: this.onUpdateEnter,\n      onClick: this.onUpdateClick,\n      style: {\n        position: 'absolute',\n        top: '0',\n        right: '1.5em',\n        fontSize: '.65em',\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 33\n      }\n    }, \"UPDATE\"))), /*#__PURE__*/React.createElement(Col, {\n      className: \"col-padding\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 29\n      }\n    }, \"SERIES\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"series\",\n      as: \"select\",\n      custom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 33\n      }\n    }, \"EE Bond\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 33\n      }\n    }, \"I Bond\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 33\n      }\n    }, \"E Bond\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 33\n      }\n    }, \"Savings Note\"))), /*#__PURE__*/React.createElement(Col, {\n      className: \"col-padding\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 29\n      }\n    }, \"DENOMINATION\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"denomination\",\n      as: \"select\",\n      custom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 33\n      }\n    }, \"$25\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 33\n      }\n    }, \"$50\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 33\n      }\n    }, \"$75\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 33\n      }\n    }, \"$100\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 33\n      }\n    }, \"$200\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 33\n      }\n    }, \"$500\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 33\n      }\n    }, \"$1,000\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 33\n      }\n    }, \"$5,000\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 33\n      }\n    }, \"$10,000\"))), /*#__PURE__*/React.createElement(Col, {\n      className: \"col-padding\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 29\n      }\n    }, \"SERIAL NUMBER\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"serialnumber\",\n      type: \"text\",\n      placeholder: \"Optional\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      style: {\n        position: 'relative'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 29\n      }\n    }, \"ISSUE DATE\"), /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      name: \"iMonth\",\n      type: \"number\",\n      placeholder: \"Month\",\n      maxLength: \"2\",\n      min: \"1\",\n      max: \"12\",\n      defaultValue: \"11\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n      id: \"inputGroupPrepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 37\n      }\n    }, \"/\")), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      name: \"iYear\",\n      type: \"number\",\n      placeholder: \"Year\",\n      maxLength: \"4\",\n      min: \"1940\",\n      max: this.state.year,\n      style: {\n        marginLeft: '-1px'\n      },\n      defaultValue: \"2005\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      size: \"sm\",\n      style: {\n        position: 'absolute',\n        top: '0',\n        right: '.5em',\n        fontSize: '.65em',\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 29\n      }\n    }, \"SUBMIT\")))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"card-container\",\n      style: {\n        width: '100%',\n        float: 'left',\n        paddingTop: '2em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        textAlign: 'right',\n        marginBottom: '.25em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CSVLink, {\n      filename: 'bonds_valued_from_' + this.state.month + '_' + this.state.year,\n      data: this.state.exportResults.length > 0 ? this.state.exportResults : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 25\n      }\n    }, \"+ [Export]\")), /*#__PURE__*/React.createElement(Card, {\n      style: this.state.showCards,\n      className: \"card-one\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: {\n        fontSize: '14px',\n        padding: '.50em',\n        fontWeight: '500'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 25\n      }\n    }, \"VALUE AS OF\"), /*#__PURE__*/React.createElement(Card.Body, {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 29\n      }\n    }, this.state.currentBond ? this.formatDate(this.state.currentBond['vDate']) : null))), /*#__PURE__*/React.createElement(Card, {\n      style: this.state.showCards,\n      className: \"card-two\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: {\n        fontSize: '14px',\n        padding: '.50em',\n        fontWeight: '500'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 25\n      }\n    }, \"TOTAL COST\"), /*#__PURE__*/React.createElement(Card.Body, {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      id: \"card-price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 29\n      }\n    }, this.state.totalPrice))), /*#__PURE__*/React.createElement(Card, {\n      style: this.state.showCards,\n      className: \"card-three\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: {\n        fontSize: '14px',\n        padding: '.50em',\n        fontWeight: '500'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 25\n      }\n    }, \"TOTAL INTEREST\"), /*#__PURE__*/React.createElement(Card.Body, {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      id: \"card-interest\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 29\n      }\n    }, this.state.totalInterest))), /*#__PURE__*/React.createElement(Card, {\n      style: this.state.showCards,\n      className: \"card-four\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: {\n        fontSize: '14px',\n        padding: '.50em',\n        fontWeight: '500'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 25\n      }\n    }, \"TOTAL VALUE\"), /*#__PURE__*/React.createElement(Card.Body, {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      id: \"card-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 29\n      }\n    }, this.state.totalValue)))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        float: 'left',\n        marginTop: '1em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      id: \"bond-table\",\n      hidden: this.state.hideTable,\n      onChange: this.state.changeTable,\n      style: {\n        width: '100%',\n        margin: 'auto',\n        marginBottom: '2em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      style: {\n        textAlign: \"center\",\n        fontSize: \"11px\",\n        textTransform: \"uppercase\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 33\n      }\n    }, \"Serial Number\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 33\n      }\n    }, \"Series\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 33\n      }\n    }, \"Denomination\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 33\n      }\n    }, \"Issue Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 33\n      }\n    }, \"Next Accrual\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 33\n      }\n    }, \"Final Maturity\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 33\n      }\n    }, \"Issue Price\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 33\n      }\n    }, \"Interest\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 33\n      }\n    }, \"Value\"))))));\n  }\n\n}\n\nexport default BondPricingOne;","map":{"version":3,"sources":["/Users/greggvanorden/Desktop/bonds_react_app/bonds-react-app/src/components/bond_pricing.jsx"],"names":["React","Component","Form","Col","InputGroup","Button","OverlayTrigger","Tooltip","Table","Card","CSVLink","BondPricingOne","constructor","props","state","totalPrice","totalInterest","totalValue","example","month","getCurrentMonth","year","getCurrentYear","showTooltip","visibility","showCards","hideTable","export","exportResults","onUpdateEnter","bind","onUpdateClick","onSubmit","formatDate","appendToTable","exportData","value_date","months","split","month_string","d","Date","getMonth","getFullYear","handleClickX","element","parentNode","remove","rows","document","getElementById","getElementsByClassName","length","getElementsByTagName","style","setState","currentBond","total_prices","total_interests","total_values","prices","i","price","innerHTML","undefined","push","parseFloat","substring","interests","interest","values","value","reduce","a","b","toFixed","bondTable","bondBody","createElement","append","bondRow","insertRow","className","textAlign","insertCell","cell6","cell7","cell8","position","span","setAttribute","border","button","onclick","right","j","total_value","e","preventDefault","setTimeout","bonds","vMonth","getElementsByName","vYear","series","denomination","serialNumber","iMonth","iYear","bond","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","bondRows","exports","total_denominations","export_data","slice","total_denomination","total_price","total_interest","series_map","target","aMonth","aYear","serialnumber","export_string","concat","toString","render","width","margin","marginTop","fontSize","marginLeft","top","fontWeight","float","paddingTop","marginBottom","padding","changeTable","textTransform"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Col, InputGroup, Button, OverlayTrigger, Tooltip, Table, Card } from 'react-bootstrap';\nimport { CSVLink } from \"react-csv\";\nimport '../index.css'\n\nclass BondPricingOne extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            totalPrice: null,\n            totalInterest: null,\n            totalValue: null,\n            example: null,\n            month: this.getCurrentMonth(),\n            year: this.getCurrentYear(),\n            showTooltip: { visibility: 'visible' },\n            showCards: { visibility: 'hidden' },\n            hideTable: true,\n            export: \"Value as of, Serial #, Series, Denomination, Issue Date, Next Accrual, Final Maturity, Issue Price, Interest, Value\",\n            exportResults: []\n        };\n\n        this.onUpdateEnter = this.onUpdateEnter.bind(this)\n        this.onUpdateClick = this.onUpdateClick.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n        this.formatDate = this.formatDate.bind(this)\n        this.appendToTable = this.appendToTable.bind(this)\n        this.exportData = this.exportData.bind(this)\n        //this.handleClickX = this.handleClickX.bind(this)\n    }\n\n    formatDate(value_date) {\n        const months = { \"01\": \"Jan.\", \"02\": \"Feb.\", \"03\": \"March\", \"04\": \"April\", \"05\": \"May\", \"06\": \"June\", \"07\": \"July\", \"08\": \"Aug.\", \"09\": \"Sept\", \"10\": \"Oct\", \"11\": \"Nov\", \"12\": \"Dec\" }\n\n        let month = value_date.split('/')[0]\n        let year = value_date.split('/')[1]\n\n        let month_string = months[month] + ' 1, ' + year\n\n        return month_string\n    }\n\n    getCurrentMonth() {\n        let d = new Date();\n        return d.getMonth() + 1\n    }\n\n    getCurrentYear() {\n        let d = new Date();\n\n        return d.getFullYear()\n    }\n\n    handleClickX(element) {\n        element.parentNode.parentNode.remove()\n\n        let rows = document.getElementById('bond-table').getElementsByClassName('bond-row')\n\n        if (rows.length === 0) {\n            document.getElementById('bond-table').getElementsByTagName('tr')[0].style.visibility = 'hidden'\n        }\n\n        this.setState({ example: 'test' })\n    }\n\n    appendToTable(currentBond) {\n        function handleClickX(element) {\n\n            element.parentNode.parentNode.remove()\n\n            let rows = document.getElementById('bond-table').getElementsByClassName('bond-row')\n\n            if (rows.length === 0) {\n                document.getElementById('bond-table').getElementsByTagName('tr')[0].style.visibility = 'hidden'\n            }\n\n            let total_prices = []\n            let total_interests = []\n            let total_values = []\n\n            let prices = document.getElementsByClassName('issue-price')\n            for (let i in prices) {\n                let price = prices[i].innerHTML\n                if (price !== undefined) {\n                    total_prices.push(parseFloat(price.substring(1)))\n                }\n            }\n\n            let interests = document.getElementsByClassName('bond-interest')\n            for (let i in interests) {\n                let interest = interests[i].innerHTML\n                if (interest !== undefined) {\n                    total_interests.push(parseFloat(interest.substring(1)))\n                }\n            }\n\n            let values = document.getElementsByClassName('bond-value')\n\n            for (let i in values) {\n                let value = values[i].innerHTML\n                if (value !== undefined) {\n                    total_values.push(parseFloat(value.substring(1)))\n                }\n            }\n\n            document.getElementById('card-price').innerHTML = '$' + parseFloat(total_prices.reduce((a, b) => a + b, 0)).toFixed(2)\n            document.getElementById('card-interest').innerHTML = '$' + parseFloat(total_interests.reduce((a, b) => a + b, 0)).toFixed(2)\n            document.getElementById('card-value').innerHTML = '$' + parseFloat(total_values.reduce((a, b) => a + b, 0)).toFixed(2)\n        }\n\n        const bondTable = document.getElementById('bond-table')\n\n        let bondBody = null\n\n        if (bondTable.getElementsByTagName('tbody').length === 0) {\n            bondBody = document.createElement('tbody')\n            bondTable.append(bondBody)\n        }\n        else {\n            bondBody = bondTable.getElementsByTagName('tbody')[0]\n        }\n\n        bondTable.getElementsByTagName('tr')[0].style.visibility = 'visible'\n\n        let bondRow = bondBody.insertRow();\n        bondRow.className = \"bond-row\"\n        bondRow.style.textAlign = 'center'\n\n        bondRow.insertCell(0).innerHTML = currentBond['serialNumber']\n        bondRow.insertCell(1).innerHTML = currentBond['series']\n        bondRow.insertCell(2).innerHTML = currentBond['denomination']\n        bondRow.insertCell(3).innerHTML = currentBond['iDate']\n        bondRow.insertCell(4).innerHTML = currentBond['aDate']\n        bondRow.insertCell(5).innerHTML = currentBond['mDate']\n\n        let cell6 = bondRow.insertCell(6)\n        cell6.className = 'issue-price'\n        cell6.innerHTML = '$' + currentBond['iPrice']\n\n        let cell7 = bondRow.insertCell(7)\n        cell7.className = 'bond-interest'\n        cell7.innerHTML = '$' + currentBond['interest']\n\n        let cell8 = bondRow.insertCell(8)\n        cell8.className = 'bond-value'\n        cell8.innerHTML = '$' + currentBond['value']\n        cell8.style.position = 'relative'\n\n        let span = document.createElement('span')\n        span.innerHTML = '&times;'\n        span.setAttribute('aria-hidden', 'true')\n        span.style.border = 'none';\n\n        let button = document.createElement('button')\n        button.onclick = () => { this.handleClickX(button) };\n        button.className = 'close'\n        button.style.position = 'absolute'\n        button.style.right = '-1em'\n\n        button.append(span);\n        cell8.append(button);\n\n        let rows = bondTable.getElementsByClassName('bond-row')\n\n        let total_prices = []\n        let total_interests = []\n        let total_values = []\n\n        for (let i = 0; i < rows.length; i++) {\n            let prices = rows[i].getElementsByClassName('issue-price')\n            for (let j in prices) {\n                let price = prices[j].innerHTML\n                if (price !== undefined) {\n                    total_prices.push(parseFloat(price.substring(1)))\n                }\n            }\n\n            let interests = rows[i].getElementsByClassName('bond-interest')\n            for (let j in interests) {\n                let interest = interests[j].innerHTML\n                if (interest !== undefined) {\n                    total_interests.push(parseFloat(interest.substring(1)))\n                }\n            }\n\n            let values = rows[i].getElementsByClassName('bond-value')\n            for (let j in values) {\n                let value = values[j].innerHTML\n                if (value !== undefined) {\n                    total_values.push(parseFloat(value.substring(1)))\n                }\n            }\n        }\n\n        this.setState({ total_value: '$' + parseFloat(total_prices.reduce((a, b) => a + b, 0)).toFixed(2) })\n        document.getElementById('card-interest').innerHTML = '$' + parseFloat(total_interests.reduce((a, b) => a + b, 0)).toFixed(2)\n        document.getElementById('card-value').innerHTML = '$' + parseFloat(total_values.reduce((a, b) => a + b, 0)).toFixed(2)\n    }\n\n    onUpdateEnter(e) {\n        e.preventDefault();\n\n        setTimeout(() => {\n            this.setState({ showTooltip: { visibility: 'hidden' } })\n        }, 3500)\n    }\n\n    onUpdateClick() {\n        let rows = document.getElementById('bond-table').getElementsByTagName('tr')\n\n        let bonds = []\n\n        let vMonth = document.getElementsByName('aMonth')[0].value\n        let vYear = document.getElementsByName('aYear')[0].value\n\n        for (let i = 1; i < rows.length; i++) {\n            let series = rows[i].getElementsByTagName('td')[1].innerHTML\n            let denomination = (rows[i].getElementsByTagName('td')[2].innerHTML).substring(1)\n            let serialNumber = rows[i].getElementsByTagName('td')[0].innerHTML\n            let iMonth = (rows[i].getElementsByTagName('td')[3].innerHTML).split('/')[0]\n            let iYear = (rows[i].getElementsByTagName('td')[3].innerHTML).split('/')[1]\n\n            let bond = {\n                'vMonth': vMonth,\n                'vYear': vYear,\n                'series': series,\n                'denomination': denomination,\n                'serialNumber': serialNumber,\n                'iMonth': iMonth,\n                'iYear': iYear,\n            }\n\n            bonds.push(bond)\n        }\n\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' },\n            body: JSON.stringify({ bonds })\n        };\n\n        fetch('http://localhost:5000/update', requestOptions)\n            .then(response => response.json())\n            .then(response => {\n                let bondRows = document.getElementById('bond-table').getElementsByTagName('tbody')[0]\n                bondRows.remove()\n\n                for (let i = 0; i < response.length; i++) {\n                    this.appendToTable(response[i])\n                }\n            })\n    }\n\n    exportData() {\n        let exports = (this.state.export).split(',')\n\n        let total_denominations = []\n        let total_prices = []\n        let total_interests = []\n        let total_values = []\n\n        let export_data = []\n\n        let i = 0\n        while ((i + 10) <= exports.length) {\n            export_data.push(exports.slice(i, i + 10))\n\n            if (i >= 10) {\n                total_denominations.push(parseFloat(exports[i + 3].substring(1)))\n                total_prices.push(parseFloat(exports[i + 7].substring(1)))\n                total_interests.push(parseFloat(exports[i + 8].substring(1)))\n                total_values.push(parseFloat(exports[i + 9].substring(1)))\n            }\n\n            i += 10\n        }\n\n        let total_denomination = '$' + parseFloat(total_denominations.reduce((a, b) => a + b, 0)).toFixed(2)\n        let total_price = '$' + parseFloat(total_prices.reduce((a, b) => a + b, 0)).toFixed(2)\n        let total_interest = '$' + parseFloat(total_interests.reduce((a, b) => a + b, 0)).toFixed(2)\n        let total_value = '$' + parseFloat(total_values.reduce((a, b) => a + b, 0)).toFixed(2)\n\n        export_data.push([\"\", \"\", \"\", total_denomination, \"\", \"\", \"\", total_price, total_interest, total_value])\n\n        this.setState({ exportResults: export_data })\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        if (this.state.hideTable) {\n            this.setState({ hideTable: false, showCards: { visibility: 'visible' } })\n        }\n\n        const series_map = {\n            'EE Bond': 'EE',\n            'E Bond': 'E',\n            'I Bond': 'I',\n            'Savings Bond': 'S'\n        }\n\n        let bond = {\n            'vMonth': e.target.aMonth.value,\n            'vYear': e.target.aYear.value,\n            'series': series_map[e.target.series.value],\n            'denomination': (e.target.denomination.value).substring(1),\n            'serialNumber': e.target.serialnumber.value,\n            'iMonth': e.target.iMonth.value,\n            'iYear': e.target.iYear.value\n        }\n\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' },\n            body: JSON.stringify({ bond })\n        };\n\n        fetch('http://localhost:5000/individual/bonds', requestOptions)\n            .then(response => response.json())\n            .then(response => {\n                this.appendToTable(response)\n\n                this.setState({ currentBond: response })\n\n                let values = [\n                    response['vDate'],\n                    response['serialNumber'],\n                    response['series'],\n                    response['denomination'],\n                    response['iDate'],\n                    response['aDate'],\n                    response['mDate'],\n                    '$' + response['iPrice'],\n                    '$' + response['interest'],\n                    '$' + response['value']\n                ]\n\n                let export_string = this.state.export.concat(\",\" + values.toString());\n\n                this.setState({ export: export_string })\n\n                this.exportData()\n            })\n    }\n\n    render() {\n        return (\n            <div style={{ width: '75%', margin: 'auto', marginTop: '1.5em' }}>\n                <Form onSubmit={this.onSubmit} style={{ width: '100%', fontSize: '14px' }}>\n                    <Form.Row>\n                        <Col className=\"col-padding\" style={{ position: 'relative' }}>\n                            <Form.Label>VALUE AS OF</Form.Label>\n                            <InputGroup>\n                                <Form.Control\n                                    required\n                                    name=\"aMonth\"\n                                    type=\"number\"\n                                    placeholder=\"Month\"\n                                    min=\"1\"\n                                    max=\"12\"\n                                    defaultValue={this.state.month}\n                                />\n                                <InputGroup.Append>\n                                    <InputGroup.Text id=\"inputGroupPrepend\">/</InputGroup.Text>\n                                </InputGroup.Append>\n                                <Form.Control\n                                    required\n                                    name=\"aYear\"\n                                    type=\"number\"\n                                    placeholder=\"Year\"\n                                    maxLength=\"4\"\n                                    min=\"1992\"\n                                    max={this.state.year}\n                                    style={{ marginLeft: '-1px' }}\n                                    defaultValue={this.state.year}\n                                />\n                            </InputGroup>\n                            <OverlayTrigger placement='right' overlay={\n                                <Tooltip style={this.state.showTooltip} >\n                                    Revalue all bonds by this date.\n                                    </Tooltip>}>\n                                <Button type=\"button\" size='sm' variant='success' onMouseEnter={this.onUpdateEnter} onClick={this.onUpdateClick} style={{ position: 'absolute', top: '0', right: '1.5em', fontSize: '.65em', fontWeight: 'bold' }}>UPDATE</Button>\n                            </OverlayTrigger>\n                        </Col>\n                        <Col className=\"col-padding\">\n                            <Form.Label>SERIES</Form.Label>\n                            <Form.Control name=\"series\" as=\"select\" custom>\n                                <option>EE Bond</option>\n                                <option>I Bond</option>\n                                <option>E Bond</option>\n                                <option>Savings Note</option>\n                            </Form.Control>\n                        </Col>\n                        <Col className=\"col-padding\">\n                            <Form.Label>DENOMINATION</Form.Label>\n                            <Form.Control name=\"denomination\" as=\"select\" custom>\n                                <option>$25</option>\n                                <option>$50</option>\n                                <option>$75</option>\n                                <option>$100</option>\n                                <option>$200</option>\n                                <option>$500</option>\n                                <option>$1,000</option>\n                                <option>$5,000</option>\n                                <option>$10,000</option>\n                            </Form.Control>\n                        </Col>\n                        <Col className=\"col-padding\">\n                            <Form.Label size='sm'>SERIAL NUMBER</Form.Label>\n                            <Form.Control\n                                name=\"serialnumber\"\n                                type=\"text\"\n                                placeholder=\"Optional\"\n                            />\n                        </Col>\n                        <Col style={{ position: 'relative' }}>\n                            <Form.Label>ISSUE DATE</Form.Label>\n                            <InputGroup>\n                                <Form.Control\n                                    required\n                                    name=\"iMonth\"\n                                    type=\"number\"\n                                    placeholder=\"Month\"\n                                    maxLength=\"2\"\n                                    min=\"1\"\n                                    max=\"12\"\n                                    defaultValue=\"11\"\n                                />\n                                <InputGroup.Append>\n                                    <InputGroup.Text id=\"inputGroupPrepend\">/</InputGroup.Text>\n                                </InputGroup.Append>\n                                <Form.Control\n                                    required\n                                    name=\"iYear\"\n                                    type=\"number\"\n                                    placeholder=\"Year\"\n                                    maxLength=\"4\"\n                                    min=\"1940\"\n                                    max={this.state.year}\n                                    style={{ marginLeft: '-1px' }}\n                                    defaultValue=\"2005\"\n                                />\n                            </InputGroup>\n                            <Button type=\"submit\" size='sm' style={{ position: 'absolute', top: '0', right: '.5em', fontSize: '.65em', fontWeight: 'bold' }}>SUBMIT</Button>\n                        </Col>\n                    </Form.Row>\n                </Form >\n                <div id=\"card-container\" style={{ width: '100%', float: 'left', paddingTop: '2em' }}>\n                    <div style={{ width: '100%', textAlign: 'right', marginBottom: '.25em' }}>\n                        <CSVLink filename={'bonds_valued_from_' + this.state.month + '_' + this.state.year} data={this.state.exportResults.length > 0 ? this.state.exportResults : ''}>+ [Export]</CSVLink>\n                    </div>\n                    <Card style={this.state.showCards} className='card-one'>\n                        <Card.Header style={{ fontSize: '14px', padding: '.50em', fontWeight: '500' }}>VALUE AS OF</Card.Header>\n                        <Card.Body style={{ textAlign: 'center' }}>\n                            <Card.Title>{this.state.currentBond ? this.formatDate(this.state.currentBond['vDate']) : null}</Card.Title>\n                        </Card.Body>\n                    </Card>\n                    <Card style={this.state.showCards} className='card-two'>\n                        <Card.Header style={{ fontSize: '14px', padding: '.50em', fontWeight: '500' }}>TOTAL COST</Card.Header>\n                        <Card.Body style={{ textAlign: 'center' }}>\n                            <Card.Title id=\"card-price\">{this.state.totalPrice}</Card.Title>\n                        </Card.Body>\n                    </Card>\n                    <Card style={this.state.showCards} className='card-three'>\n                        <Card.Header style={{ fontSize: '14px', padding: '.50em', fontWeight: '500' }}>TOTAL INTEREST</Card.Header>\n                        <Card.Body style={{ textAlign: 'center' }}>\n                            <Card.Title id=\"card-interest\">{this.state.totalInterest}</Card.Title>\n                        </Card.Body>\n                    </Card>\n                    <Card style={this.state.showCards} className='card-four'>\n                        <Card.Header style={{ fontSize: '14px', padding: '.50em', fontWeight: '500' }}>TOTAL VALUE</Card.Header>\n                        <Card.Body style={{ textAlign: 'center' }}>\n                            <Card.Title id=\"card-value\">{this.state.totalValue}</Card.Title>\n                        </Card.Body>\n                    </Card>\n                </div>\n                <div style={{ width: '100%', float: 'left', marginTop: '1em' }}>\n                    <Table striped bordered hover id=\"bond-table\" hidden={this.state.hideTable} onChange={this.state.changeTable} style={{ width: '100%', margin: 'auto', marginBottom: '2em' }}>\n                        <thead style={{ textAlign: \"center\", fontSize: \"11px\", textTransform: \"uppercase\" }}>\n                            <tr>\n                                <th>Serial Number</th>\n                                <th>Series</th>\n                                <th>Denomination</th>\n                                <th>Issue Date</th>\n                                <th>Next Accrual</th>\n                                <th>Final Maturity</th>\n                                <th>Issue Price</th>\n                                <th>Interest</th>\n                                <th>Value</th>\n                            </tr>\n                        </thead>\n                    </Table>\n                </div>\n            </div >\n        )\n    }\n}\n\nexport default BondPricingOne;\n\n"]},"metadata":{},"sourceType":"module"}