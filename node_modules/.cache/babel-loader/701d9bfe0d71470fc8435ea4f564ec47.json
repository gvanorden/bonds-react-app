{"ast":null,"code":"var _jsxFileName = \"/Users/greggvanorden/Desktop/bonds_react_app/bonds-react-app/src/components/valuations.jsx\";\nimport React, { Component } from \"react\";\nimport { Form, Table, Card, Spinner } from \"react-bootstrap\";\nimport { CSVLink } from \"react-csv\";\n\nclass Valuations extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      label: 'Attach file',\n      rows: [],\n      totals: [],\n      spinner: false,\n      export: []\n    };\n    this.setFilename = this.setFilename.bind(this);\n  }\n\n  setFilename(e) {\n    let filename = null;\n\n    if (e.target.files.length > 0) {\n      filename = e.target.files[0].name;\n    }\n\n    if (filename !== null) {\n      this.setState({\n        label: filename,\n        rows: [],\n        totals: [],\n        spinner: false,\n        timer: 50\n      });\n      var reader = new FileReader();\n\n      reader.onload = () => {\n        const csv = reader.result;\n        this.setState({\n          spinner: true\n        });\n        const requestOptions = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*'\n          },\n          body: JSON.stringify({\n            csv\n          })\n        };\n        fetch('http://localhost:5000/upload', requestOptions).then(response => response.json()).then(response => {\n          let exports = response['results'];\n          exports.push(['', '', '', response['totals'][1], '', '', '', response['totals'][2], '', '', response['totals'][0]]);\n          this.setState({\n            export: exports\n          });\n          this.setState({\n            rows: response['results'],\n            totals: response['totals'],\n            spinner: false\n          });\n        });\n      };\n\n      reader.readAsText(e.target.files[0]);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: \"form-csv\",\n      style: {\n        position: 'relative'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, this.state.spinner ? /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      role: \"status\",\n      variant: \"secondary\",\n      style: {\n        position: 'absolute',\n        top: '.25em',\n        left: '-2.5em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 43\n      }\n    }) : null, /*#__PURE__*/React.createElement(Form.File, {\n      id: \"custom-file\",\n      label: this.state.label,\n      onChange: this.setFilename,\n      custom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: 'left',\n        width: '100%',\n        marginTop: '2em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, this.state.totals.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '50em',\n        margin: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: '15em',\n        float: 'left'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      style: {\n        margin: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card.Subtitle, {\n      className: \"mb-2 text-muted\",\n      style: {\n        fontSize: '14px',\n        fontWeight: 'bold',\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 37\n      }\n    }, \"VALUE TOTAL\"), /*#__PURE__*/React.createElement(Card.Title, {\n      style: {\n        color: 'green',\n        fontSize: '28px',\n        textAlign: 'center',\n        marginBottom: '0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 37\n      }\n    }, this.state.totals[0]))), /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: '15em',\n        float: 'left',\n        marginLeft: '2.5em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      style: {\n        margin: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card.Subtitle, {\n      className: \"mb-2 text-muted\",\n      style: {\n        fontSize: '14px',\n        fontWeight: 'bold',\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 37\n      }\n    }, \"AMOUNT TOTAL\"), /*#__PURE__*/React.createElement(Card.Title, {\n      style: {\n        fontSize: '28px',\n        textAlign: 'center',\n        marginBottom: '0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 37\n      }\n    }, this.state.totals[1]))), /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: '15em',\n        float: 'left',\n        marginLeft: '2.5em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      style: {\n        margin: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card.Subtitle, {\n      className: \"mb-2 text-muted\",\n      style: {\n        fontSize: '14px',\n        fontWeight: 'bold',\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 37\n      }\n    }, \"ISSUE PRICE TOTAL\"), /*#__PURE__*/React.createElement(Card.Title, {\n      style: {\n        fontSize: '28px',\n        textAlign: 'center',\n        marginBottom: '0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 37\n      }\n    }, this.state.totals[2])))) : null), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: 'left',\n        width: '100%',\n        margin: '.5em 0 .25em 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '85%',\n        margin: 'auto',\n        textAlign: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, this.state.rows.length > 0 ? /*#__PURE__*/React.createElement(CSVLink, {\n      filename: 'export_' + this.state.label,\n      data: this.state.rows,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 29\n      }\n    }, \"+ [Export]\") : null)), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: 'left',\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, this.state.rows.length > 0 ? /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      style: {\n        width: '85%',\n        margin: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      style: {\n        textAlign: \"center\",\n        fontSize: \"11px\",\n        textTransform: \"uppercase\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 41\n      }\n    }, \"Lookup Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 41\n      }\n    }, \"Serial Number\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 41\n      }\n    }, \"Bond Type\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 41\n      }\n    }, \"Bond Amount\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 41\n      }\n    }, \"Issue Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 41\n      }\n    }, \"Next Accrual\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 41\n      }\n    }, \"Final Maturity\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 41\n      }\n    }, \"Issue Price\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 41\n      }\n    }, \"Interest\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 41\n      }\n    }, \"Interest Rate\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 41\n      }\n    }, \"Value\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 33\n      }\n    }, this.state.rows.map(result => /*#__PURE__*/React.createElement(\"tr\", {\n      key: result[1],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 45\n      }\n    }, result[0]), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 45\n      }\n    }, result[1]), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 45\n      }\n    }, result[2]), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 45\n      }\n    }, result[3]), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 45\n      }\n    }, result[4]), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 45\n      }\n    }, result[5]), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 45\n      }\n    }, result[6]), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 45\n      }\n    }, result[7]), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 45\n      }\n    }, result[8]), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 45\n      }\n    }, result[9]), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 45\n      }\n    }, result[10]))))) : null));\n  }\n\n}\n\nexport default Valuations;","map":{"version":3,"sources":["/Users/greggvanorden/Desktop/bonds_react_app/bonds-react-app/src/components/valuations.jsx"],"names":["React","Component","Form","Table","Card","Spinner","CSVLink","Valuations","constructor","props","state","label","rows","totals","spinner","export","setFilename","bind","e","filename","target","files","length","name","setState","timer","reader","FileReader","onload","csv","result","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","exports","push","readAsText","render","position","top","left","float","width","marginTop","margin","fontSize","fontWeight","textAlign","color","marginBottom","marginLeft","textTransform","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Table, Card, Spinner } from \"react-bootstrap\";\nimport { CSVLink } from \"react-csv\";\n\n\nclass Valuations extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            label: 'Attach file',\n            rows: [],\n            totals: [],\n            spinner: false,\n            export: []\n        };\n\n        this.setFilename = this.setFilename.bind(this);\n    }\n\n    setFilename(e) {\n        let filename = null\n\n        if (e.target.files.length > 0) {\n            filename = e.target.files[0].name\n        }\n\n        if (filename !== null) {\n\n            this.setState({ label: filename, rows: [], totals: [], spinner: false, timer: 50 })\n\n            var reader = new FileReader();\n\n            reader.onload = () => {\n                const csv = reader.result\n\n                this.setState({ spinner: true })\n\n                const requestOptions = {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' },\n                    body: JSON.stringify({ csv })\n                };\n\n                fetch('http://localhost:5000/upload', requestOptions)\n                    .then(response => response.json())\n                    .then(response => {\n                        let exports = response['results']\n\n                        exports.push(['', '', '', response['totals'][1], '', '', '', response['totals'][2], '', '', response['totals'][0]])\n\n                        this.setState({ export: exports })\n\n                        this.setState({ rows: response['results'], totals: response['totals'], spinner: false })\n                    })\n            }\n\n            reader.readAsText(e.target.files[0]);\n        }\n\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Form className=\"form-csv\" style={{ position: 'relative' }}>\n                    {this.state.spinner ? <Spinner animation=\"border\" role=\"status\" variant=\"secondary\" style={{ position: 'absolute', top: '.25em', left: '-2.5em' }}></Spinner> : null}\n                    <Form.File\n                        id=\"custom-file\"\n                        label={this.state.label}\n                        onChange={this.setFilename}\n                        custom\n                    />\n                </Form>\n                <div style={{ float: 'left', width: '100%', marginTop: '2em' }}>\n                    {this.state.totals.length > 0 ?\n                        <div style={{ width: '50em', margin: 'auto' }}>\n                            <Card style={{ width: '15em', float: 'left' }}>\n                                <Card.Body style={{ margin: 'auto' }} >\n                                    <Card.Subtitle className=\"mb-2 text-muted\" style={{ fontSize: '14px', fontWeight: 'bold', textAlign: 'center' }}>VALUE TOTAL</Card.Subtitle>\n                                    <Card.Title style={{ color: 'green', fontSize: '28px', textAlign: 'center', marginBottom: '0' }}>{this.state.totals[0]}</Card.Title>\n                                </Card.Body>\n                            </Card>\n                            <Card style={{ width: '15em', float: 'left', marginLeft: '2.5em' }}>\n                                <Card.Body style={{ margin: 'auto' }}>\n                                    <Card.Subtitle className=\"mb-2 text-muted\" style={{ fontSize: '14px', fontWeight: 'bold', textAlign: 'center' }}>AMOUNT TOTAL</Card.Subtitle>\n                                    <Card.Title style={{ fontSize: '28px', textAlign: 'center', marginBottom: '0' }}>{this.state.totals[1]}</Card.Title>\n                                </Card.Body>\n                            </Card>\n                            <Card style={{ width: '15em', float: 'left', marginLeft: '2.5em' }}>\n                                <Card.Body style={{ margin: 'auto' }}>\n                                    <Card.Subtitle className=\"mb-2 text-muted\" style={{ fontSize: '14px', fontWeight: 'bold', textAlign: 'center' }}>ISSUE PRICE TOTAL</Card.Subtitle>\n                                    <Card.Title style={{ fontSize: '28px', textAlign: 'center', marginBottom: '0' }}>{this.state.totals[2]}</Card.Title>\n                                </Card.Body>\n                            </Card>\n                        </div> : null}\n                </div>\n                <div style={{ float: 'left', width: '100%', margin: '.5em 0 .25em 0' }}>\n                    <div style={{ width: '85%', margin: 'auto', textAlign: 'right' }}>\n                        {this.state.rows.length > 0 ?\n                            <CSVLink filename={'export_' + this.state.label} data={this.state.rows}>+ [Export]</CSVLink> : null}\n                    </div>\n                </div>\n                <div style={{ float: 'left', width: '100%' }}>\n                    {\n                        this.state.rows.length > 0 ?\n                            <Table striped bordered hover style={{ width: '85%', margin: 'auto' }}>\n                                <thead style={{ textAlign: \"center\", fontSize: \"11px\", textTransform: \"uppercase\" }}>\n                                    <tr>\n                                        <th>Lookup Date</th>\n                                        <th>Serial Number</th>\n                                        <th>Bond Type</th>\n                                        <th>Bond Amount</th>\n                                        <th>Issue Date</th>\n                                        <th>Next Accrual</th>\n                                        <th>Final Maturity</th>\n                                        <th>Issue Price</th>\n                                        <th>Interest</th>\n                                        <th>Interest Rate</th>\n                                        <th>Value</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.state.rows.map((result) => (\n                                        <tr key={result[1]}>\n                                            <td>{result[0]}</td>\n                                            <td>{result[1]}</td>\n                                            <td>{result[2]}</td>\n                                            <td>{result[3]}</td>\n                                            <td>{result[4]}</td>\n                                            <td>{result[5]}</td>\n                                            <td>{result[6]}</td>\n                                            <td>{result[7]}</td>\n                                            <td>{result[8]}</td>\n                                            <td>{result[9]}</td>\n                                            <td>{result[10]}</td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table> : null\n                    }\n                </div>\n            </React.Fragment >\n        )\n    }\n}\n\nexport default Valuations;"]},"metadata":{},"sourceType":"module"}