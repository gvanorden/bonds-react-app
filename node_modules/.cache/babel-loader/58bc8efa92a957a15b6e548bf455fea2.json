{"ast":null,"code":"var _jsxFileName = \"/Users/greggvanorden/Desktop/bonds-react-app/src/components/bond_pricing_spreadsheet.jsx\";\nimport React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { isMobile } from \"react-device-detect\";\nimport { Form, Table, Card, Col, InputGroup, Button, OverlayTrigger, Tooltip, Pagination } from \"react-bootstrap\";\nimport { CSVLink } from \"react-csv\";\nimport '../index.css';\n\nclass BondPricingTwo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bonds: [],\n      exportBonds: [],\n      label: 'Import ...',\n      totalPrice: 0,\n      totalInterest: 0,\n      totalValue: 0,\n      totalDenomination: 0,\n      totalDate: this.formatDate(this.getCurrentMonth() + '/' + this.getCurrentYear()),\n      month: this.getCurrentMonth(),\n      year: this.getCurrentYear(),\n      hideTable: true,\n      showCards: {\n        visibility: 'hidden'\n      },\n      exportData: [],\n      export: \"Value as of, Serial #, Series, Denomination, Issue Date, Next Accrual, Final Maturity, Issue Price, Interest, Value\",\n      exportResults: [],\n      pages: [],\n      perPage: 5,\n      currentPage: 0,\n      containerStyle: null,\n      windowWidth: window.outerWidth\n    };\n    this.setFilename = this.setFilename.bind(this);\n    this.formatDate = this.formatDate.bind(this);\n    this.onUpdateEnter = this.onUpdateEnter.bind(this);\n    this.onUpdateClick = this.onUpdateClick.bind(this);\n    this.setPrevPage = this.setPrevPage.bind(this);\n    this.setCurrentPage = this.setCurrentPage.bind(this);\n    this.setNextPage = this.setNextPage.bind(this);\n    this.exportOnClick = this.exportOnClick.bind(this);\n    this.handleClickX = this.handleClickX.bind(this);\n    this.handleResize = this.handleResize.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(isMobile);\n    window.addEventListener(\"resize\", this.handleResize);\n  }\n\n  handleResize() {\n    setTimeout(() => {\n      this.setState({\n        windowWidth: window.outerWidth\n      });\n      console.log(window.outerWidth);\n    }, 100);\n  }\n\n  setPages(bonds) {\n    let pages = [];\n    let pageCount = bonds.length / this.state.perPage;\n    let i = 0;\n\n    while (i < pageCount) {\n      pages.push(i);\n      i++;\n    }\n\n    this.setState({\n      pages: pages\n    });\n  }\n\n  exportOnClick() {\n    const bonds = this.state.bonds;\n    let bondExports = [];\n    bondExports.push(['Lookup Date', 'Serial Number', 'Series', 'Bond Amount', 'Issue Date', 'Next Accrual', 'Final Maturity', 'Issue Price', 'Interest', 'Bond Value']);\n\n    for (let i = 0; i < bonds.length; i++) {\n      let bondExport = [bonds[i]['vDate'], bonds[i]['serialNumber'], bonds[i]['series'], '$' + bonds[i]['denomination'], bonds[i]['iDate'], bonds[i]['aDate'], bonds[i]['mDate'], '$' + parseFloat(bonds[i]['iPrice']).toFixed(2), '$' + parseFloat(bonds[i]['interest']).toFixed(2), '$' + parseFloat(bonds[i]['value']).toFixed(2)];\n      bondExports.push(bondExport);\n    }\n\n    bondExports.push([\"\", \"\", \"\", '$' + this.state.totalDenomination, \"\", \"\", \"\", '$' + parseFloat(this.state.totalPrice).toFixed(2), '$' + parseFloat(this.state.totalInterest).toFixed(2), '$' + parseFloat(this.state.totalValue).toFixed(2)]);\n    this.setState({\n      exportResults: bondExports\n    });\n  }\n\n  setCurrentPage(i) {\n    this.setState({\n      currentPage: i\n    });\n  }\n\n  setPrevPage() {\n    let showCount = (this.state.currentPage - 1) * this.state.perPage;\n\n    if (showCount >= 0) {\n      this.setState({\n        currentPage: this.state.currentPage - 1\n      });\n    }\n  }\n\n  setNextPage() {\n    let showCount = (this.state.currentPage + 1) * this.state.perPage;\n\n    if (showCount < this.state.bonds.length) {\n      this.setState({\n        currentPage: this.state.currentPage + 1\n      });\n    }\n  }\n\n  formatDate(value_date) {\n    const months = {\n      \"01\": \"Jan.\",\n      \"02\": \"Feb.\",\n      \"03\": \"Mar.\",\n      \"04\": \"April\",\n      \"05\": \"May\",\n      \"06\": \"June\",\n      \"07\": \"July\",\n      \"08\": \"Aug.\",\n      \"09\": \"Sept.\",\n      \"10\": \"Oct.\",\n      \"11\": \"Nov.\",\n      \"12\": \"Dec.\"\n    };\n    let month = value_date.split('/')[0];\n\n    if (month.length === 1) {\n      month = '0' + month;\n    }\n\n    let year = value_date.split('/')[1];\n    let month_string = months[month] + ' ' + year;\n    return month_string;\n  }\n\n  getCurrentMonth() {\n    let d = new Date();\n    return d.getMonth() + 1;\n  }\n\n  getCurrentYear() {\n    let d = new Date();\n    return d.getFullYear();\n  }\n\n  handleClickX(i) {\n    const newBonds = this.state.bonds;\n    let x = this.state.currentPage * this.state.perPage + i;\n    this.setState({\n      totalDenomination: this.state.totalDenomination - newBonds[x]['denomination'],\n      totalPrice: this.state.totalPrice - newBonds[x]['iPrice'],\n      totalInterest: this.state.totalInterest - newBonds[x]['interest'],\n      totalValue: this.state.totalValue - newBonds[x]['value']\n    });\n    newBonds.splice(x, 1);\n    this.setState({\n      bonds: newBonds\n    });\n    this.setPages(newBonds);\n  }\n\n  onUpdateEnter(e) {\n    e.preventDefault();\n    setTimeout(() => {\n      this.setState({\n        showTooltip: {\n          visibility: 'hidden'\n        }\n      });\n    }, 3500);\n  }\n\n  onUpdateClick() {\n    const bondState = this.state.bonds;\n    let bonds = [];\n    let vMonth = document.getElementsByName('aMonth')[0].value;\n    let vYear = document.getElementsByName('aYear')[0].value;\n    let vDate = vMonth + '/' + vYear;\n\n    for (let i = 0; i < bondState.length; i++) {\n      let bond = {\n        'vMonth': vMonth,\n        'vYear': vYear,\n        'series': this.state.bonds[i]['series'],\n        'denomination': this.state.bonds[i]['denomination'],\n        'serialNumber': this.state.bonds[i]['serialNumber'],\n        'iDate': this.state.bonds[i]['iDate']\n      };\n      bonds.push(bond);\n    }\n\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      },\n      body: JSON.stringify({\n        bonds\n      })\n    };\n    fetch('https://secure.thesavingsbondwizard.com/update', requestOptions).then(response => response.json()).then(response => {\n      if (response[0] !== 'error') {\n        this.setState({\n          totalDate: this.formatDate(response[1]['totalDate']),\n          totalDenomination: response[1]['totalDenominations'],\n          totalPrice: response[1]['totalPrices'],\n          totalInterest: response[1]['totalInterests'],\n          totalValue: response[1]['totalValues']\n        });\n        this.setState({\n          bonds: response[0]\n        });\n      } else {\n        this.setState({\n          totalDate: this.formatDate(vDate)\n        });\n      }\n    });\n  }\n\n  setFilename(e) {\n    if (e.target.files.length > 0) {\n      this.setState({\n        label: e.target.files[0].name\n      });\n    }\n\n    if (this.state.hideTable) {\n      this.setState({\n        hideTable: false,\n        showCards: {\n          visibility: 'visible'\n        }\n      });\n    }\n\n    try {\n      if (e.target.files[0].name !== this.state.label) {\n        this.setState({\n          currentPage: 0\n        });\n      }\n\n      var reader = new FileReader();\n\n      reader.onload = () => {\n        const bondCsv = reader.result;\n        let bonds = [];\n        let bondRow = bondCsv.split('\\r');\n\n        for (let i = 1; i < bondRow.length; i++) {\n          let bond = bondRow[i].split(',');\n          let bondDict = {\n            'vMonth': document.getElementsByName('aMonth')[0].value,\n            'vYear': document.getElementsByName('aYear')[0].value,\n            'serialNumber': bond[0],\n            'series': bond[1],\n            'denomination': parseInt(bond[2].replace(/[$]/g, '')),\n            'iDate': bond[3]\n          };\n          bonds.push(bondDict);\n        }\n\n        const requestOptions = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*'\n          },\n          body: JSON.stringify({\n            bonds\n          })\n        };\n        fetch('https://secure.thesavingsbondwizard.com/update', requestOptions).then(response => response.json()).then(response => {\n          this.setState({\n            bonds: response[0]\n          });\n          this.setState({\n            totalDate: this.formatDate(response[1]['totalDate']),\n            totalDenomination: response[1]['totalDenominations'],\n            totalPrice: response[1]['totalPrices'],\n            totalInterest: response[1]['totalInterests'],\n            totalValue: response[1]['totalValues']\n          });\n          this.setPages(response[0]);\n        });\n      };\n\n      reader.readAsText(e.target.files[0]);\n    } catch {}\n  }\n\n  convertValues(value) {\n    return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  render() {\n    const {\n      windowWidth\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron-pages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: isMobile && windowWidth <= 1024 ? {\n        width: '100%',\n        padding: '0 1.5%'\n      } : {\n        width: '60%',\n        minWidth: windowWidth * .6,\n        margin: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: isMobile && windowWidth < 1024 ? {\n        width: '100%',\n        marginTop: '.5rem'\n      } : {\n        width: '100%',\n        marginTop: '2rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      style: {\n        float: 'left',\n        width: '40.5%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      style: isMobile && windowWidth <= 1024 ? {\n        fontSize: '.65rem'\n      } : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 37\n      }\n    }, \" VALUE AS OF\"), /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      name: \"aMonth\",\n      type: \"number\",\n      placeholder: \"Month\",\n      min: \"1\",\n      max: \"12\",\n      defaultValue: this.state.month,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 45\n      }\n    }, \"/\")), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      name: \"aYear\",\n      type: \"number\",\n      placeholder: \"Year\",\n      maxLength: \"4\",\n      min: \"1992\",\n      max: this.state.year,\n      style: {\n        marginLeft: '-1px'\n      },\n      defaultValue: this.state.year,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(OverlayTrigger, {\n      placement: \"right\",\n      overlay: /*#__PURE__*/React.createElement(Tooltip, {\n        style: this.state.showTooltip,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 41\n        }\n      }, \"Revalue all bonds by this date.\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      size: \"sm\",\n      variant: \"success\",\n      onMouseEnter: this.onUpdateEnter,\n      onClick: this.onUpdateClick,\n      style: {\n        position: 'absolute',\n        top: '.25rem',\n        right: '.25rem',\n        fontSize: '.5rem',\n        fontWeight: 'bold',\n        padding: '.1rem .2rem .2rem .2rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 41\n      }\n    }, \"UPDATE\")))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        padding: '0 0 0 .5rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      style: isMobile && windowWidth <= 1024 ? {\n        fontSize: '.65rem'\n      } : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 37\n      }\n    }, \"ATTACHMENT\"), /*#__PURE__*/React.createElement(Form.File, {\n      id: \"custom-file\",\n      label: this.state.label,\n      onChange: this.setFilename,\n      custom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(Form, {\n      style: isMobile && windowWidth < 1024 ? {\n        marginTop: '.5rem'\n      } : {\n        marginTop: '2rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      className: \"card-header\",\n      style: isMobile && windowWidth < 1024 ? {\n        padding: '.75rem',\n        fontSize: '.5rem'\n      } : {\n        padding: '.75rem 1rem',\n        fontSize: '.75rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 41\n      }\n    }, \"VALUED AS OF\"), /*#__PURE__*/React.createElement(Card.Body, {\n      style: isMobile && windowWidth < 1024 ? {\n        textAlign: 'center',\n        padding: '1rem .5rem .5rem .5rem'\n      } : {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      style: {\n        fontSize: '1rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 45\n      }\n    }, this.state.totalDate)))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 37\n      }\n    }, isMobile && windowWidth < 600 ? /*#__PURE__*/React.createElement(Card.Header, {\n      className: \"card-header\",\n      style: isMobile && windowWidth < 1024 ? {\n        padding: '.75rem .5rem',\n        fontSize: '.5rem'\n      } : {\n        padding: '.75rem 1rem',\n        fontSize: '.75rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 45\n      }\n    }, \"TOT. FACE VALUE\") : /*#__PURE__*/React.createElement(Card.Header, {\n      className: \"card-header\",\n      style: isMobile && windowWidth < 1024 ? {\n        padding: '.75rem .5rem',\n        fontSize: '.5rem'\n      } : {\n        padding: '.75rem 1rem',\n        fontSize: '.75rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 45\n      }\n    }, \"TOTAL FACE VALUE\"), /*#__PURE__*/React.createElement(Card.Body, {\n      style: isMobile && windowWidth < 1024 ? {\n        textAlign: 'center',\n        padding: '1rem .5rem .5rem .5rem'\n      } : {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      style: {\n        fontSize: '1rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 45\n      }\n    }, \"$\", this.convertValues(this.state.totalDenomination))))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      className: \"card-header\",\n      style: isMobile && windowWidth < 1024 ? {\n        padding: '.75rem',\n        fontSize: '.5rem'\n      } : {\n        padding: '.75rem 1rem',\n        fontSize: '.75rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 41\n      }\n    }, \"TOTAL PRICE\"), /*#__PURE__*/React.createElement(Card.Body, {\n      style: isMobile && windowWidth < 1024 ? {\n        textAlign: 'center',\n        padding: '1rem .5rem .5rem .5rem'\n      } : {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      id: \"card-price\",\n      style: {\n        color: 'red',\n        fontSize: '1rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 45\n      }\n    }, \"$\", this.convertValues(parseFloat(this.state.totalPrice).toFixed(2)))))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      className: \"card-header\",\n      style: isMobile && windowWidth < 1024 ? {\n        padding: '.75rem .75rem',\n        fontSize: '.5rem'\n      } : {\n        padding: '.75rem 1rem',\n        fontSize: '.75rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 41\n      }\n    }, \"TOTAL INTEREST\"), /*#__PURE__*/React.createElement(Card.Body, {\n      style: isMobile && windowWidth < 1024 ? {\n        textAlign: 'center',\n        padding: '1rem .5rem .5rem .5rem'\n      } : {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      id: \"card-interest\",\n      style: {\n        color: '#ff8c00',\n        fontSize: '1rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 45\n      }\n    }, \"$\", this.convertValues(parseFloat(this.state.totalInterest).toFixed(2)))))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      className: \"card-header\",\n      style: isMobile && windowWidth < 1024 ? {\n        padding: '.75rem',\n        fontSize: '.5rem'\n      } : {\n        padding: '.75rem 1rem',\n        fontSize: '.75rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 41\n      }\n    }, \"TOTAL VALUE\"), /*#__PURE__*/React.createElement(Card.Body, {\n      style: isMobile && windowWidth < 1024 ? {\n        textAlign: 'center',\n        padding: '1rem .5rem .5rem .5rem'\n      } : {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      id: \"card-value\",\n      style: {\n        color: 'green',\n        fontSize: '1rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 45\n      }\n    }, \"$\", this.convertValues(parseFloat(this.state.totalValue).toFixed(2)))))))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"card-container\",\n      style: {\n        width: '100%',\n        float: 'left',\n        paddingTop: '1em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 25\n      }\n    }, this.state.bonds.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.exportOnClick,\n      style: {\n        width: '100%',\n        textAlign: 'right',\n        marginBottom: '.25em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 60\n      }\n    }, /*#__PURE__*/React.createElement(CSVLink, {\n      filename: 'bonds_valued_from_' + this.state.month + '_' + this.state.year,\n      data: this.state.exportResults.length > 0 ? this.state.exportResults : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 33\n      }\n    }, \"+ [Export]\")) : null), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        float: 'left',\n        margin: '0 0 1em 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 25\n      }\n    }, this.state.bonds.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      id: \"bond-table\",\n      hidden: this.state.hideTable,\n      onChange: this.state.changeTable,\n      style: {\n        width: '100%',\n        margin: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      style: {\n        textAlign: \"center\",\n        fontSize: \".75em\",\n        textTransform: \"uppercase\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 53\n      }\n    }, \"Serial Number\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 53\n      }\n    }, \"Series\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 53\n      }\n    }, \"Face Value\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 53\n      }\n    }, \"Issue Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 53\n      }\n    }, \"Next Accrual\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 53\n      }\n    }, \"Final Maturity\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 53\n      }\n    }, \"Issue Price\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 53\n      }\n    }, \"Interest\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 53\n      }\n    }, \"Value\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 45\n      }\n    }, this.state.bonds.slice(this.state.currentPage * this.state.perPage, (this.state.currentPage + 1) * this.state.perPage).map((bond, i) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 61\n      }\n    }, bond['serialNumber']), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 61\n      }\n    }, bond['series']), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 61\n      }\n    }, \"$\", this.convertValues(bond['denomination'])), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 61\n      }\n    }, bond['iDate']), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 61\n      }\n    }, bond['aDate']), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 61\n      }\n    }, bond['mDate']), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 61\n      }\n    }, \"$\", this.convertValues(parseFloat(bond['iPrice']).toFixed(2))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 61\n      }\n    }, \"$\", this.convertValues(parseFloat(bond['interest']).toFixed(2))), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        position: 'relative'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 61\n      }\n    }, \"$\", this.convertValues(parseFloat(bond['value']).toFixed(2)), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.handleClickX(i),\n      className: \"close\",\n      style: {\n        position: 'absolute',\n        top: '.5em',\n        right: '-1em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      style: {\n        border: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 69\n      }\n    }, \"\\xD7\"))))))), this.state.bonds.length > this.state.perPage ? /*#__PURE__*/React.createElement(Pagination, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Pagination.Prev, {\n      onClick: this.setPrevPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 49\n      }\n    }), this.state.pages.map(i => /*#__PURE__*/React.createElement(Pagination.Item, {\n      active: i === this.state.currentPage,\n      key: i,\n      onClick: () => this.setCurrentPage(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 53\n      }\n    }, i + 1)), /*#__PURE__*/React.createElement(Pagination.Next, {\n      onClick: this.setNextPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 49\n      }\n    })) : null) : null)), /*#__PURE__*/React.createElement(Helmet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 25\n      }\n    }, \"Bond Priceing - Spreadsheet\"), /*#__PURE__*/React.createElement(\"meta\", {\n      name: \"Price Bonds By Spreadsheet\",\n      content: \"Price all your I,E, EE Bonds and Savings Notes using a predefined spreadsheet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"link\", {\n      related: \"canonical\",\n      content: \"/bond_pricing_spreadsheet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default BondPricingTwo;","map":{"version":3,"sources":["/Users/greggvanorden/Desktop/bonds-react-app/src/components/bond_pricing_spreadsheet.jsx"],"names":["React","Component","Helmet","isMobile","Form","Table","Card","Col","InputGroup","Button","OverlayTrigger","Tooltip","Pagination","CSVLink","BondPricingTwo","constructor","props","state","bonds","exportBonds","label","totalPrice","totalInterest","totalValue","totalDenomination","totalDate","formatDate","getCurrentMonth","getCurrentYear","month","year","hideTable","showCards","visibility","exportData","export","exportResults","pages","perPage","currentPage","containerStyle","windowWidth","window","outerWidth","setFilename","bind","onUpdateEnter","onUpdateClick","setPrevPage","setCurrentPage","setNextPage","exportOnClick","handleClickX","handleResize","componentDidMount","console","log","addEventListener","setTimeout","setState","setPages","pageCount","length","i","push","bondExports","bondExport","parseFloat","toFixed","showCount","value_date","months","split","month_string","d","Date","getMonth","getFullYear","newBonds","x","splice","e","preventDefault","showTooltip","bondState","vMonth","document","getElementsByName","value","vYear","vDate","bond","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","target","files","name","reader","FileReader","onload","bondCsv","result","bondRow","bondDict","parseInt","replace","readAsText","convertValues","toString","render","width","padding","minWidth","margin","marginTop","float","fontSize","marginLeft","position","top","right","fontWeight","textAlign","color","paddingTop","marginBottom","changeTable","textTransform","slice","map","border"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { isMobile } from \"react-device-detect\";\nimport { Form, Table, Card, Col, InputGroup, Button, OverlayTrigger, Tooltip, Pagination } from \"react-bootstrap\";\nimport { CSVLink } from \"react-csv\";\nimport '../index.css'\n\n\nclass BondPricingTwo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bonds: [],\n            exportBonds: [],\n            label: 'Import ...',\n            totalPrice: 0,\n            totalInterest: 0,\n            totalValue: 0,\n            totalDenomination: 0,\n            totalDate: this.formatDate(this.getCurrentMonth() + '/' + this.getCurrentYear()),\n            month: this.getCurrentMonth(),\n            year: this.getCurrentYear(),\n            hideTable: true,\n            showCards: { visibility: 'hidden' },\n            exportData: [],\n            export: \"Value as of, Serial #, Series, Denomination, Issue Date, Next Accrual, Final Maturity, Issue Price, Interest, Value\",\n            exportResults: [],\n            pages: [],\n            perPage: 5,\n            currentPage: 0,\n            containerStyle: null,\n            windowWidth: window.outerWidth\n        };\n\n        this.setFilename = this.setFilename.bind(this)\n        this.formatDate = this.formatDate.bind(this)\n        this.onUpdateEnter = this.onUpdateEnter.bind(this)\n        this.onUpdateClick = this.onUpdateClick.bind(this)\n        this.setPrevPage = this.setPrevPage.bind(this)\n        this.setCurrentPage = this.setCurrentPage.bind(this)\n        this.setNextPage = this.setNextPage.bind(this)\n        this.exportOnClick = this.exportOnClick.bind(this)\n        this.handleClickX = this.handleClickX.bind(this)\n        this.handleResize = this.handleResize.bind(this)\n    }\n\n    componentDidMount() {\n        console.log(isMobile)\n        window.addEventListener(\"resize\", this.handleResize);\n    }\n\n    handleResize() {\n        setTimeout(() => {\n            this.setState({ windowWidth: window.outerWidth })\n            console.log(window.outerWidth)\n        }, 100);\n    }\n\n    setPages(bonds) {\n        let pages = []\n        let pageCount = bonds.length / this.state.perPage\n\n        let i = 0\n        while (i < pageCount) {\n            pages.push(i)\n\n            i++\n        }\n\n        this.setState({ pages: pages })\n    }\n\n    exportOnClick() {\n        const bonds = this.state.bonds\n\n        let bondExports = []\n\n        bondExports.push(['Lookup Date', 'Serial Number', 'Series', 'Bond Amount', 'Issue Date', 'Next Accrual', 'Final Maturity', 'Issue Price', 'Interest', 'Bond Value'])\n\n        for (let i = 0; i < bonds.length; i++) {\n\n            let bondExport = [\n                bonds[i]['vDate'],\n                bonds[i]['serialNumber'],\n                bonds[i]['series'],\n                '$' + bonds[i]['denomination'],\n                bonds[i]['iDate'],\n                bonds[i]['aDate'],\n                bonds[i]['mDate'],\n                '$' + parseFloat(bonds[i]['iPrice']).toFixed(2),\n                '$' + parseFloat(bonds[i]['interest']).toFixed(2),\n                '$' + parseFloat(bonds[i]['value']).toFixed(2)\n            ]\n\n            bondExports.push(bondExport);\n        }\n\n        bondExports.push([\n            \"\",\n            \"\",\n            \"\",\n            '$' + this.state.totalDenomination,\n            \"\",\n            \"\",\n            \"\",\n            '$' + parseFloat(this.state.totalPrice).toFixed(2),\n            '$' + parseFloat(this.state.totalInterest).toFixed(2),\n            '$' + parseFloat(this.state.totalValue).toFixed(2)\n        ])\n\n        this.setState({ exportResults: bondExports })\n    }\n\n    setCurrentPage(i) {\n        this.setState({ currentPage: i })\n    }\n\n    setPrevPage() {\n        let showCount = (this.state.currentPage - 1) * this.state.perPage\n        if (showCount >= 0) {\n            this.setState({ currentPage: this.state.currentPage - 1 })\n        }\n    }\n\n\n    setNextPage() {\n        let showCount = (this.state.currentPage + 1) * this.state.perPage\n        if (showCount < this.state.bonds.length) {\n            this.setState({ currentPage: this.state.currentPage + 1 })\n        }\n    }\n\n    formatDate(value_date) {\n        const months = { \"01\": \"Jan.\", \"02\": \"Feb.\", \"03\": \"Mar.\", \"04\": \"April\", \"05\": \"May\", \"06\": \"June\", \"07\": \"July\", \"08\": \"Aug.\", \"09\": \"Sept.\", \"10\": \"Oct.\", \"11\": \"Nov.\", \"12\": \"Dec.\" }\n\n        let month = value_date.split('/')[0]\n\n        if (month.length === 1) {\n            month = '0' + month\n        }\n\n        let year = value_date.split('/')[1]\n\n        let month_string = months[month] + ' ' + year\n\n        return month_string\n    }\n\n    getCurrentMonth() {\n        let d = new Date();\n        return d.getMonth() + 1\n    }\n\n    getCurrentYear() {\n        let d = new Date();\n\n        return d.getFullYear()\n    }\n\n    handleClickX(i) {\n        const newBonds = this.state.bonds\n\n        let x = (this.state.currentPage * this.state.perPage) + i\n\n        this.setState({\n            totalDenomination: this.state.totalDenomination - newBonds[x]['denomination'],\n            totalPrice: this.state.totalPrice - newBonds[x]['iPrice'],\n            totalInterest: this.state.totalInterest - newBonds[x]['interest'],\n            totalValue: this.state.totalValue - newBonds[x]['value']\n        })\n\n        newBonds.splice(x, 1)\n        this.setState({ bonds: newBonds })\n\n        this.setPages(newBonds)\n    }\n\n    onUpdateEnter(e) {\n        e.preventDefault();\n\n        setTimeout(() => {\n            this.setState({ showTooltip: { visibility: 'hidden' } })\n        }, 3500)\n    }\n\n    onUpdateClick() {\n        const bondState = this.state.bonds\n\n        let bonds = []\n\n        let vMonth = document.getElementsByName('aMonth')[0].value\n        let vYear = document.getElementsByName('aYear')[0].value\n        let vDate = vMonth + '/' + vYear\n\n        for (let i = 0; i < bondState.length; i++) {\n            let bond = {\n                'vMonth': vMonth,\n                'vYear': vYear,\n                'series': this.state.bonds[i]['series'],\n                'denomination': this.state.bonds[i]['denomination'],\n                'serialNumber': this.state.bonds[i]['serialNumber'],\n                'iDate': this.state.bonds[i]['iDate']\n            }\n\n            bonds.push(bond)\n        }\n\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' },\n            body: JSON.stringify({ bonds })\n        };\n\n        fetch('https://secure.thesavingsbondwizard.com/update', requestOptions)\n            .then(response => response.json())\n            .then(response => {\n                if (response[0] !== 'error') {\n                    this.setState({\n                        totalDate: this.formatDate(response[1]['totalDate']),\n                        totalDenomination: response[1]['totalDenominations'],\n                        totalPrice: response[1]['totalPrices'],\n                        totalInterest: response[1]['totalInterests'],\n                        totalValue: response[1]['totalValues']\n                    })\n\n                    this.setState({ bonds: response[0] })\n                }\n                else {\n                    this.setState({ totalDate: this.formatDate(vDate) })\n                }\n            })\n    }\n\n    setFilename(e) {\n\n        if (e.target.files.length > 0) {\n            this.setState({ label: e.target.files[0].name })\n        }\n\n        if (this.state.hideTable) {\n            this.setState({ hideTable: false, showCards: { visibility: 'visible' } })\n        }\n        try {\n            if (e.target.files[0].name !== this.state.label) {\n                this.setState({ currentPage: 0 })\n            }\n\n            var reader = new FileReader();\n\n            reader.onload = () => {\n                const bondCsv = reader.result\n\n                let bonds = []\n\n                let bondRow = bondCsv.split('\\r')\n\n\n                for (let i = 1; i < bondRow.length; i++) {\n                    let bond = bondRow[i].split(',')\n\n                    let bondDict = {\n                        'vMonth': document.getElementsByName('aMonth')[0].value,\n                        'vYear': document.getElementsByName('aYear')[0].value,\n                        'serialNumber': bond[0],\n                        'series': bond[1],\n                        'denomination': parseInt(bond[2].replace(/[$]/g, '')),\n                        'iDate': bond[3]\n                    }\n\n                    bonds.push(bondDict)\n                }\n\n                const requestOptions = {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' },\n                    body: JSON.stringify({ bonds })\n                };\n\n                fetch('https://secure.thesavingsbondwizard.com/update', requestOptions)\n                    .then(response => response.json())\n                    .then(response => {\n                        this.setState({ bonds: response[0] })\n\n                        this.setState({\n                            totalDate: this.formatDate(response[1]['totalDate']),\n                            totalDenomination: response[1]['totalDenominations'],\n                            totalPrice: response[1]['totalPrices'],\n                            totalInterest: response[1]['totalInterests'],\n                            totalValue: response[1]['totalValues']\n                        })\n\n                        this.setPages(response[0])\n                    })\n            }\n\n            reader.readAsText(e.target.files[0]);\n        }\n        catch {\n\n        }\n    }\n\n    convertValues(value) {\n        return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n    }\n\n    render() {\n        const { windowWidth } = this.state\n        return (\n            <div>\n                <div className=\"jumbotron-pages\"></div>\n                <div style={isMobile && windowWidth <= 1024 ? { width: '100%', padding: '0 1.5%' } : { width: '60%', minWidth: (windowWidth * .6), margin: 'auto' }}>\n                    <div style={isMobile && windowWidth < 1024 ? { width: '100%', marginTop: '.5rem' } : { width: '100%', marginTop: '2rem' }}>\n                        <Form>\n                            <Form.Row style={{ float: 'left', width: '40.5%' }}>\n                                <Col>\n                                    <Form.Label style={isMobile && windowWidth <= 1024 ? { fontSize: '.65rem' } : null}> VALUE AS OF</Form.Label>\n                                    <InputGroup>\n                                        <Form.Control\n                                            required\n                                            name=\"aMonth\"\n                                            type=\"number\"\n                                            placeholder=\"Month\"\n                                            min=\"1\"\n                                            max=\"12\"\n                                            defaultValue={this.state.month}\n                                        />\n                                        <InputGroup.Append>\n                                            <InputGroup.Text>/</InputGroup.Text>\n                                        </InputGroup.Append>\n                                        <Form.Control\n                                            required\n                                            name=\"aYear\"\n                                            type=\"number\"\n                                            placeholder=\"Year\"\n                                            maxLength=\"4\"\n                                            min=\"1992\"\n                                            max={this.state.year}\n                                            style={{ marginLeft: '-1px' }}\n                                            defaultValue={this.state.year}\n                                        />\n                                    </InputGroup>\n                                    <OverlayTrigger placement='right' overlay={\n                                        <Tooltip style={this.state.showTooltip}>\n                                            Revalue all bonds by this date.\n                                    </Tooltip>}>\n                                        <Button type=\"button\" size='sm' variant='success' onMouseEnter={this.onUpdateEnter} onClick={this.onUpdateClick} style={{ position: 'absolute', top: '.25rem', right: '.25rem', fontSize: '.5rem', fontWeight: 'bold', padding: '.1rem .2rem .2rem .2rem' }}>UPDATE</Button>\n                                    </OverlayTrigger>\n                                </Col>\n                            </Form.Row>\n                            <Form.Row>\n                                <Col style={{ padding: '0 0 0 .5rem' }}>\n                                    <Form.Label style={isMobile && windowWidth <= 1024 ? { fontSize: '.65rem' } : null}>ATTACHMENT</Form.Label>\n                                    <Form.File\n                                        id=\"custom-file\"\n                                        label={this.state.label}\n                                        onChange={this.setFilename}\n                                        custom\n                                    />\n                                </Col>\n                            </Form.Row>\n                        </Form>\n                        <Form style={isMobile && windowWidth < 1024 ? { marginTop: '.5rem' } : { marginTop: '2rem' }}>\n                            <Form.Row>\n                                <Col>\n                                    <Card>\n                                        <Card.Header className='card-header' style={isMobile && windowWidth < 1024 ? { padding: '.75rem', fontSize: '.5rem' } : { padding: '.75rem 1rem', fontSize: '.75rem' }}>VALUED AS OF</Card.Header>\n                                        <Card.Body style={isMobile && windowWidth < 1024 ? { textAlign: 'center', padding: '1rem .5rem .5rem .5rem' } : { textAlign: 'center' }}>\n                                            <Card.Title style={{ fontSize: '1rem' }}>{this.state.totalDate}</Card.Title>\n                                        </Card.Body>\n                                    </Card>\n                                </Col>\n                                <Col>\n                                    <Card>\n                                        {isMobile && windowWidth < 600 ?\n                                            <Card.Header className='card-header' style={isMobile && windowWidth < 1024 ? { padding: '.75rem .5rem', fontSize: '.5rem' } : { padding: '.75rem 1rem', fontSize: '.75rem' }}>TOT. FACE VALUE</Card.Header> :\n                                            <Card.Header className='card-header' style={isMobile && windowWidth < 1024 ? { padding: '.75rem .5rem', fontSize: '.5rem' } : { padding: '.75rem 1rem', fontSize: '.75rem' }}>TOTAL FACE VALUE</Card.Header>}\n                                        <Card.Body style={isMobile && windowWidth < 1024 ? { textAlign: 'center', padding: '1rem .5rem .5rem .5rem' } : { textAlign: 'center' }}>\n                                            <Card.Title style={{ fontSize: '1rem' }}>${this.convertValues(this.state.totalDenomination)}</Card.Title>\n                                        </Card.Body>\n                                    </Card>\n                                </Col>\n                                <Col>\n                                    <Card>\n                                        <Card.Header className='card-header' style={isMobile && windowWidth < 1024 ? { padding: '.75rem', fontSize: '.5rem' } : { padding: '.75rem 1rem', fontSize: '.75rem' }}>TOTAL PRICE</Card.Header>\n                                        <Card.Body style={isMobile && windowWidth < 1024 ? { textAlign: 'center', padding: '1rem .5rem .5rem .5rem' } : { textAlign: 'center' }}>\n                                            <Card.Title id=\"card-price\" style={{ color: 'red', fontSize: '1rem' }}>${this.convertValues(parseFloat(this.state.totalPrice).toFixed(2))}</Card.Title>\n                                        </Card.Body>\n                                    </Card>\n                                </Col>\n                                <Col>\n                                    <Card>\n                                        <Card.Header className='card-header' style={isMobile && windowWidth < 1024 ? { padding: '.75rem .75rem', fontSize: '.5rem' } : { padding: '.75rem 1rem', fontSize: '.75rem' }}>TOTAL INTEREST</Card.Header>\n                                        <Card.Body style={isMobile && windowWidth < 1024 ? { textAlign: 'center', padding: '1rem .5rem .5rem .5rem' } : { textAlign: 'center' }}>\n                                            <Card.Title id=\"card-interest\" style={{ color: '#ff8c00', fontSize: '1rem' }}>${this.convertValues(parseFloat(this.state.totalInterest).toFixed(2))}</Card.Title>\n                                        </Card.Body>\n                                    </Card>\n                                </Col>\n                                <Col>\n                                    <Card>\n                                        <Card.Header className='card-header' style={isMobile && windowWidth < 1024 ? { padding: '.75rem', fontSize: '.5rem' } : { padding: '.75rem 1rem', fontSize: '.75rem' }}>TOTAL VALUE</Card.Header>\n                                        <Card.Body style={isMobile && windowWidth < 1024 ? { textAlign: 'center', padding: '1rem .5rem .5rem .5rem' } : { textAlign: 'center' }}>\n                                            <Card.Title id=\"card-value\" style={{ color: 'green', fontSize: '1rem' }}>${this.convertValues(parseFloat(this.state.totalValue).toFixed(2))}</Card.Title>\n                                        </Card.Body>\n                                    </Card>\n                                </Col>\n                            </Form.Row>\n                        </Form >\n                        <div id=\"card-container\" style={{ width: '100%', float: 'left', paddingTop: '1em' }}>\n                            {this.state.bonds.length > 0 ? <div onClick={this.exportOnClick} style={{ width: '100%', textAlign: 'right', marginBottom: '.25em' }}>\n                                <CSVLink filename={'bonds_valued_from_' + this.state.month + '_' + this.state.year} data={this.state.exportResults.length > 0 ? this.state.exportResults : ''}>+ [Export]</CSVLink>\n                            </div> : null}\n                        </div >\n                        <div style={{ width: '100%', float: 'left', margin: '0 0 1em 0' }}>\n                            {\n                                this.state.bonds.length > 0 ?\n                                    <div>\n                                        <Table striped bordered hover id=\"bond-table\" hidden={this.state.hideTable} onChange={this.state.changeTable} style={{ width: '100%', margin: 'auto' }}>\n                                            <thead style={{ textAlign: \"center\", fontSize: \".75em\", textTransform: \"uppercase\" }}>\n                                                <tr>\n                                                    <th>Serial Number</th>\n                                                    <th>Series</th>\n                                                    <th>Face Value</th>\n                                                    <th>Issue Date</th>\n                                                    <th>Next Accrual</th>\n                                                    <th>Final Maturity</th>\n                                                    <th>Issue Price</th>\n                                                    <th>Interest</th>\n                                                    <th>Value</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {this.state.bonds\n                                                    .slice(this.state.currentPage * this.state.perPage, (this.state.currentPage + 1) * this.state.perPage)\n                                                    .map((bond, i) => (\n                                                        <tr key={i}>\n                                                            <td>{bond['serialNumber']}</td>\n                                                            <td>{bond['series']}</td>\n                                                            <td>${this.convertValues(bond['denomination'])}</td>\n                                                            <td>{bond['iDate']}</td>\n                                                            <td>{bond['aDate']}</td>\n                                                            <td>{bond['mDate']}</td>\n                                                            <td>${this.convertValues(parseFloat(bond['iPrice']).toFixed(2))}</td>\n                                                            <td>${this.convertValues(parseFloat(bond['interest']).toFixed(2))}</td>\n                                                            <td style={{ position: 'relative' }}>\n                                                                ${this.convertValues(parseFloat(bond['value']).toFixed(2))}\n                                                                <button onClick={() => this.handleClickX(i)} className='close' style={{ position: 'absolute', top: '.5em', right: '-1em' }}>\n                                                                    <span aria-hidden='true' style={{ border: 'none' }}>&times;</span>\n                                                                </button>\n                                                            </td>\n                                                        </tr>\n                                                    ))}\n                                            </tbody>\n                                        </Table>\n                                        {this.state.bonds.length > this.state.perPage ?\n                                            <Pagination size='sm'>\n                                                <Pagination.Prev onClick={this.setPrevPage} />\n                                                {this.state.pages.map((i) => (\n                                                    <Pagination.Item active={i === this.state.currentPage} key={i} onClick={() => this.setCurrentPage(i)}>{i + 1}</Pagination.Item>\n                                                ))}\n                                                <Pagination.Next onClick={this.setNextPage} />\n                                            </Pagination>\n                                            : null}\n                                    </div>\n                                    : null}\n\n                        </div>\n                    </div >\n                    <Helmet>\n                        <title>Bond Priceing - Spreadsheet</title>\n                        <meta name='Price Bonds By Spreadsheet' content='Price all your I,E, EE Bonds and Savings Notes using a predefined spreadsheet' />\n                        <link related='canonical' content='/bond_pricing_spreadsheet' />\n                    </Helmet>\n                </div >\n            </div >\n        )\n    }\n}\n\nexport default BondPricingTwo;\n"]},"metadata":{},"sourceType":"module"}