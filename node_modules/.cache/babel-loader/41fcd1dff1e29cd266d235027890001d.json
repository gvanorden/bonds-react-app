{"ast":null,"code":"var _jsxFileName = \"/Users/greggvanorden/Desktop/bonds_react_app/bonds-react-app/src/components/bond_pricing_spreadsheet.jsx\";\nimport React, { Component } from \"react\";\nimport { Form, Table, Card, Row, Col, InputGroup, Button, OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport { CSVLink } from \"react-csv\";\n\nclass BondPricingTwo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bonds: [],\n      label: 'Attach .csv',\n      totalPrice: 0,\n      totalInterest: 0,\n      totalValue: 0,\n      totalDenomination: 0,\n      totalDate: null,\n      month: this.getCurrentMonth(),\n      year: this.getCurrentYear(),\n      hideTable: true,\n      showCards: {\n        visibility: 'hidden'\n      },\n      exportResults: []\n    };\n    this.setFilename = this.setFilename.bind(this);\n    this.formatDate = this.formatDate.bind(this);\n  }\n\n  formatDate(value_date) {\n    const months = {\n      \"01\": \"Jan.\",\n      \"02\": \"Feb.\",\n      \"03\": \"March\",\n      \"04\": \"April\",\n      \"05\": \"May\",\n      \"06\": \"June\",\n      \"07\": \"July\",\n      \"08\": \"Aug.\",\n      \"09\": \"Sept\",\n      \"10\": \"Oct\",\n      \"11\": \"Nov\",\n      \"12\": \"Dec\"\n    };\n    let month = value_date.split('/')[0];\n    let year = value_date.split('/')[1];\n    let month_string = months[month] + ' 1, ' + year;\n    return month_string;\n  }\n\n  getCurrentMonth() {\n    let d = new Date();\n    return d.getMonth() + 1;\n  }\n\n  getCurrentYear() {\n    let d = new Date();\n    return d.getFullYear();\n  }\n\n  setFilename(e) {\n    if (e.target.files.length > 0) {\n      this.setState({\n        label: e.target.files[0].name\n      });\n    }\n\n    if (this.state.hideTable) {\n      this.setState({\n        hideTable: false,\n        showCards: {\n          visibility: 'visible'\n        }\n      });\n    }\n\n    let vMonth = document.getElementsByName('aMonth')[0].value;\n    let vYear = document.getElementsByName('aYear')[0].value;\n    var reader = new FileReader();\n\n    reader.onload = () => {\n      const bonds = reader.result;\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        },\n        body: JSON.stringify({\n          bonds,\n          vMonth,\n          vYear\n        })\n      };\n      fetch('http://localhost:5000/upload', requestOptions).then(response => response.json()).then(response => {\n        let exports = [];\n        exports.push(['Lookup Date', 'Serial Number', 'Series', 'Bond Amount', 'Issue Date', 'Next Accrual', 'Final Maturity', 'Issue Price', 'Interest', 'Interest Rate', 'Bond Value']);\n\n        for (let i = 0; i < response[0].length; i++) {\n          let values = [response['vDate'], response['serialNumber'], response['series'], '$' + response['denomination'], response['iDate'], response['aDate'], response['mDate'], '$' + response['iPrice'], '$' + response['interest'], '$' + response['value']];\n          exports.push(values);\n        }\n\n        this.setState({\n          totalDate: this.formatDate(response[1]['totalDate']),\n          totalDenomination: response[1]['totalDenominations'],\n          totalPrice: response[1]['totalPrices'],\n          totalInterest: response[1]['totalInterests'],\n          totalValue: response[1]['totalValues']\n        });\n        exports.push([\"\", \"\", \"\", '$' + response[1]['totalDenominations'], \"\", \"\", \"\", '$' + parseFloat(response[1]['totalPrices']).toFixed(2), '$' + parseFloat(response[1]['totalInterests']).toFixed(2), '$' + parseFloat(response[1]['totalValues']).toFixed(2)]);\n        console.log(response[0]);\n        this.setState({\n          bonds: response[0],\n          exportResults: exports\n        });\n      });\n    };\n\n    reader.readAsText(e.target.files[0]);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: \"form-csv\",\n      style: {\n        position: 'relative'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      style: {\n        float: 'left',\n        width: '30%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 29\n      }\n    }, \"VALUE AS OF\"), /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      name: \"aMonth\",\n      type: \"number\",\n      placeholder: \"Month\",\n      min: \"1\",\n      max: \"12\",\n      defaultValue: this.state.month,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n      id: \"inputGroupPrepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 37\n      }\n    }, \"/\")), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      name: \"aYear\",\n      type: \"number\",\n      placeholder: \"Year\",\n      maxLength: \"4\",\n      min: \"1992\",\n      max: this.state.year,\n      style: {\n        marginLeft: '-1px'\n      },\n      defaultValue: this.state.year,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(OverlayTrigger, {\n      placement: \"right\",\n      overlay: /*#__PURE__*/React.createElement(Tooltip, {\n        style: this.state.showTooltip,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 33\n        }\n      }, \"Revalue all bonds by this date.\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      size: \"sm\",\n      variant: \"success\",\n      onMouseEnter: this.onUpdateEnter,\n      onClick: this.onUpdateClick,\n      style: {\n        position: 'absolute',\n        top: '0',\n        right: '.5em',\n        fontSize: '.65em',\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 33\n      }\n    }, \"UPDATE\")))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        marginLeft: '2em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 29\n      }\n    }, \"ATTACHMENT\"), /*#__PURE__*/React.createElement(Form.File, {\n      id: \"custom-file\",\n      label: this.state.label,\n      onChange: this.setFilename,\n      custom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"card-container\",\n      style: {\n        width: '100%',\n        float: 'left',\n        paddingTop: '1em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }, this.state.exportResults.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        textAlign: 'right',\n        marginBottom: '.25em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 60\n      }\n    }, /*#__PURE__*/React.createElement(CSVLink, {\n      filename: 'bonds_valued_from_' + this.state.month + '_' + this.state.year,\n      data: this.state.exportResults.length > 0 ? this.state.exportResults : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 25\n      }\n    }, \"+ [Export]\")) : null, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: this.state.showCards,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 33\n      }\n    }, \"VALUED AS OF\"), /*#__PURE__*/React.createElement(Card.Body, {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 37\n      }\n    }, this.state.totalDate)))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: this.state.showCards,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 33\n      }\n    }, \"TOTAL FACE VALUE\"), /*#__PURE__*/React.createElement(Card.Body, {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 37\n      }\n    }, \"$\", this.state.totalDenomination)))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: this.state.showCards,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 33\n      }\n    }, \"TOTAL COST\"), /*#__PURE__*/React.createElement(Card.Body, {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      id: \"card-price\",\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 37\n      }\n    }, \"$\", parseFloat(this.state.totalPrice).toFixed(2))))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: this.state.showCards,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 33\n      }\n    }, \"TOTAL INTEREST\"), /*#__PURE__*/React.createElement(Card.Body, {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      id: \"card-interest\",\n      style: {\n        color: '#ff8c00'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 37\n      }\n    }, \"$\", parseFloat(this.state.totalInterest).toFixed(2))))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: this.state.showCards,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 33\n      }\n    }, \"TOTAL VALUE\"), /*#__PURE__*/React.createElement(Card.Body, {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      id: \"card-value\",\n      style: {\n        color: 'green'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 37\n      }\n    }, \"$\", parseFloat(this.state.totalValue).toFixed(2))))))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        float: 'left',\n        marginTop: '1em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }\n    }, this.state.bonds.length > 0 ? /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      id: \"bond-table\",\n      hidden: this.state.hideTable,\n      onChange: this.state.changeTable,\n      style: {\n        width: '100%',\n        margin: 'auto',\n        marginBottom: '2em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      style: {\n        textAlign: \"center\",\n        fontSize: \".75em\",\n        textTransform: \"uppercase\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 41\n      }\n    }, \"Serial Number\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 41\n      }\n    }, \"Bond Type\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 41\n      }\n    }, \"Bond Amount\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 41\n      }\n    }, \"Issue Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 41\n      }\n    }, \"Next Accrual\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 41\n      }\n    }, \"Final Maturity\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 41\n      }\n    }, \"Issue Price\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 41\n      }\n    }, \"Interest\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 41\n      }\n    }, \"Interest Rate\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 41\n      }\n    }, \"Value\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 33\n      }\n    }, this.state.bonds.map(bond => /*#__PURE__*/React.createElement(\"tr\", {\n      key: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 45\n      }\n    }, bond['serialNumber']), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 45\n      }\n    }, bond['series']), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 45\n      }\n    }, bond['denomination']), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 45\n      }\n    }, bond['iDate']), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 45\n      }\n    }, bond['aDate']), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 45\n      }\n    }, bond['mDate']), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 45\n      }\n    }, bond['iPrice']), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 45\n      }\n    }, bond['interest']), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 45\n      }\n    }, bond['value']))))) : null));\n  }\n\n}\n\nexport default BondPricingTwo;","map":{"version":3,"sources":["/Users/greggvanorden/Desktop/bonds_react_app/bonds-react-app/src/components/bond_pricing_spreadsheet.jsx"],"names":["React","Component","Form","Table","Card","Row","Col","InputGroup","Button","OverlayTrigger","Tooltip","CSVLink","BondPricingTwo","constructor","props","state","bonds","label","totalPrice","totalInterest","totalValue","totalDenomination","totalDate","month","getCurrentMonth","year","getCurrentYear","hideTable","showCards","visibility","exportResults","setFilename","bind","formatDate","value_date","months","split","month_string","d","Date","getMonth","getFullYear","e","target","files","length","setState","name","vMonth","document","getElementsByName","value","vYear","reader","FileReader","onload","result","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","exports","push","i","values","parseFloat","toFixed","console","log","readAsText","render","position","float","width","marginLeft","showTooltip","onUpdateEnter","onUpdateClick","top","right","fontSize","fontWeight","paddingTop","textAlign","marginBottom","color","marginTop","changeTable","margin","textTransform","map","bond"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Table, Card, Row, Col, InputGroup, Button, OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport { CSVLink } from \"react-csv\";\n\n\nclass BondPricingTwo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bonds: [],\n            label: 'Attach .csv',\n            totalPrice: 0,\n            totalInterest: 0,\n            totalValue: 0,\n            totalDenomination: 0,\n            totalDate: null,\n            month: this.getCurrentMonth(),\n            year: this.getCurrentYear(),\n            hideTable: true,\n            showCards: { visibility: 'hidden' },\n            exportResults: []\n        };\n\n        this.setFilename = this.setFilename.bind(this);\n        this.formatDate = this.formatDate.bind(this)\n    }\n\n    formatDate(value_date) {\n        const months = { \"01\": \"Jan.\", \"02\": \"Feb.\", \"03\": \"March\", \"04\": \"April\", \"05\": \"May\", \"06\": \"June\", \"07\": \"July\", \"08\": \"Aug.\", \"09\": \"Sept\", \"10\": \"Oct\", \"11\": \"Nov\", \"12\": \"Dec\" }\n\n        let month = value_date.split('/')[0]\n        let year = value_date.split('/')[1]\n\n        let month_string = months[month] + ' 1, ' + year\n\n        return month_string\n    }\n\n    getCurrentMonth() {\n        let d = new Date();\n        return d.getMonth() + 1\n    }\n\n    getCurrentYear() {\n        let d = new Date();\n\n        return d.getFullYear()\n    }\n\n    setFilename(e) {\n        if (e.target.files.length > 0) {\n            this.setState({ label: e.target.files[0].name })\n        }\n\n        if (this.state.hideTable) {\n            this.setState({ hideTable: false, showCards: { visibility: 'visible' } })\n        }\n\n        let vMonth = document.getElementsByName('aMonth')[0].value\n        let vYear = document.getElementsByName('aYear')[0].value\n\n        var reader = new FileReader();\n\n        reader.onload = () => {\n            const bonds = reader.result\n\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' },\n                body: JSON.stringify({ bonds, vMonth, vYear })\n            };\n\n            fetch('http://localhost:5000/upload', requestOptions)\n                .then(response => response.json())\n                .then(response => {\n                    let exports = []\n\n                    exports.push(['Lookup Date', 'Serial Number', 'Series', 'Bond Amount', 'Issue Date', 'Next Accrual', 'Final Maturity', 'Issue Price', 'Interest', 'Interest Rate', 'Bond Value'])\n\n                    for (let i = 0; i < response[0].length; i++) {\n                        let values = [\n                            response['vDate'],\n                            response['serialNumber'],\n                            response['series'],\n                            '$' + response['denomination'],\n                            response['iDate'],\n                            response['aDate'],\n                            response['mDate'],\n                            '$' + response['iPrice'],\n                            '$' + response['interest'],\n                            '$' + response['value']\n                        ]\n\n                        exports.push(values);\n                    }\n\n                    this.setState({\n                        totalDate: this.formatDate(response[1]['totalDate']),\n                        totalDenomination: response[1]['totalDenominations'],\n                        totalPrice: response[1]['totalPrices'],\n                        totalInterest: response[1]['totalInterests'],\n                        totalValue: response[1]['totalValues']\n                    })\n\n                    exports.push([\n                        \"\",\n                        \"\",\n                        \"\",\n                        '$' + response[1]['totalDenominations'],\n                        \"\",\n                        \"\",\n                        \"\",\n                        '$' + parseFloat(response[1]['totalPrices']).toFixed(2),\n                        '$' + parseFloat(response[1]['totalInterests']).toFixed(2),\n                        '$' + parseFloat(response[1]['totalValues']).toFixed(2)\n                    ])\n\n                    console.log(response[0])\n\n                    this.setState({ bonds: response[0], exportResults: exports })\n                })\n        }\n\n        reader.readAsText(e.target.files[0]);\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Form className=\"form-csv\" style={{ position: 'relative' }}>\n                    <Form.Row style={{ float: 'left', width: '30%' }}>\n                        <Col>\n                            <Form.Label>VALUE AS OF</Form.Label>\n                            <InputGroup>\n                                <Form.Control\n                                    required\n                                    name=\"aMonth\"\n                                    type=\"number\"\n                                    placeholder=\"Month\"\n                                    min=\"1\"\n                                    max=\"12\"\n                                    defaultValue={this.state.month}\n                                />\n                                <InputGroup.Append>\n                                    <InputGroup.Text id=\"inputGroupPrepend\">/</InputGroup.Text>\n                                </InputGroup.Append>\n                                <Form.Control\n                                    required\n                                    name=\"aYear\"\n                                    type=\"number\"\n                                    placeholder=\"Year\"\n                                    maxLength=\"4\"\n                                    min=\"1992\"\n                                    max={this.state.year}\n                                    style={{ marginLeft: '-1px' }}\n                                    defaultValue={this.state.year}\n                                />\n                            </InputGroup>\n                            <OverlayTrigger placement='right' overlay={\n                                <Tooltip style={this.state.showTooltip} >\n                                    Revalue all bonds by this date.\n                                    </Tooltip>}>\n                                <Button type=\"button\" size='sm' variant='success' onMouseEnter={this.onUpdateEnter} onClick={this.onUpdateClick} style={{ position: 'absolute', top: '0', right: '.5em', fontSize: '.65em', fontWeight: 'bold' }}>UPDATE</Button>\n                            </OverlayTrigger>\n                        </Col>\n                    </Form.Row>\n                    <Form.Row>\n                        <Col style={{ marginLeft: '2em' }}>\n                            <Form.Label>ATTACHMENT</Form.Label>\n                            <Form.File\n                                id=\"custom-file\"\n                                label={this.state.label}\n                                onChange={this.setFilename}\n                                custom\n                            />\n                        </Col>\n                    </Form.Row>\n                </Form>\n                <div id=\"card-container\" style={{ width: '100%', float: 'left', paddingTop: '1em' }}>\n                    {this.state.exportResults.length > 0 ? <div style={{ width: '100%', textAlign: 'right', marginBottom: '.25em' }}>\n                        <CSVLink filename={'bonds_valued_from_' + this.state.month + '_' + this.state.year} data={this.state.exportResults.length > 0 ? this.state.exportResults : ''}>+ [Export]</CSVLink>\n                    </div> : null}\n                    <Row>\n                        <Col>\n                            <Card style={this.state.showCards}>\n                                <Card.Header className='card-header'>VALUED AS OF</Card.Header>\n                                <Card.Body style={{ textAlign: 'center' }}>\n                                    <Card.Title>{this.state.totalDate}</Card.Title>\n                                </Card.Body>\n                            </Card>\n                        </Col>\n                        <Col>\n                            <Card style={this.state.showCards}>\n                                <Card.Header className='card-header'>TOTAL FACE VALUE</Card.Header>\n                                <Card.Body style={{ textAlign: 'center' }}>\n                                    <Card.Title>${this.state.totalDenomination}</Card.Title>\n                                </Card.Body>\n                            </Card>\n                        </Col>\n                        <Col>\n                            <Card style={this.state.showCards}>\n                                <Card.Header className='card-header'>TOTAL COST</Card.Header>\n                                <Card.Body style={{ textAlign: 'center' }}>\n                                    <Card.Title id=\"card-price\" style={{ color: 'red' }}>${parseFloat(this.state.totalPrice).toFixed(2)}</Card.Title>\n                                </Card.Body>\n                            </Card>\n                        </Col>\n                        <Col>\n                            <Card style={this.state.showCards}>\n                                <Card.Header className='card-header'>TOTAL INTEREST</Card.Header>\n                                <Card.Body style={{ textAlign: 'center' }}>\n                                    <Card.Title id=\"card-interest\" style={{ color: '#ff8c00' }}>${parseFloat(this.state.totalInterest).toFixed(2)}</Card.Title>\n                                </Card.Body>\n                            </Card>\n                        </Col>\n                        <Col>\n                            <Card style={this.state.showCards}>\n                                <Card.Header className='card-header'>TOTAL VALUE</Card.Header>\n                                <Card.Body style={{ textAlign: 'center' }}>\n                                    <Card.Title id=\"card-value\" style={{ color: 'green' }}>${parseFloat(this.state.totalValue).toFixed(2)}</Card.Title>\n                                </Card.Body>\n                            </Card>\n                        </Col>\n                    </Row>\n                </div >\n                <div style={{ width: '100%', float: 'left', marginTop: '1em' }}>\n                    {\n                        this.state.bonds.length > 0 ?\n                            <Table striped bordered hover id=\"bond-table\" hidden={this.state.hideTable} onChange={this.state.changeTable} style={{ width: '100%', margin: 'auto', marginBottom: '2em' }}>\n                                <thead style={{ textAlign: \"center\", fontSize: \".75em\", textTransform: \"uppercase\" }}>\n                                    <tr>\n                                        <th>Serial Number</th>\n                                        <th>Bond Type</th>\n                                        <th>Bond Amount</th>\n                                        <th>Issue Date</th>\n                                        <th>Next Accrual</th>\n                                        <th>Final Maturity</th>\n                                        <th>Issue Price</th>\n                                        <th>Interest</th>\n                                        <th>Interest Rate</th>\n                                        <th>Value</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.state.bonds.map((bond) => (\n                                        <tr key={1}>\n                                            <td>{bond['serialNumber']}</td>\n                                            <td>{bond['series']}</td>\n                                            <td>{bond['denomination']}</td>\n                                            <td>{bond['iDate']}</td>\n                                            <td>{bond['aDate']}</td>\n                                            <td>{bond['mDate']}</td>\n                                            <td>{bond['iPrice']}</td>\n                                            <td>{bond['interest']}</td>\n                                            <td>{bond['value']}</td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table> : null}\n                </div>\n            </React.Fragment >\n        )\n    }\n}\n\nexport default BondPricingTwo;\n"]},"metadata":{},"sourceType":"module"}