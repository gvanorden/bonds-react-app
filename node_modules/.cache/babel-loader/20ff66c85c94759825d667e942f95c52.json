{"ast":null,"code":"var _jsxFileName = \"/Users/greggvanorden/Desktop/bonds_react_app/bonds-react-app/src/components/bond_pricing.jsx\";\nimport React, { Component } from 'react';\nimport { Form, Col, InputGroup, Button, OverlayTrigger, Tooltip, Table, Card } from 'react-bootstrap';\nimport '../index.css';\n\nclass BondPricingOne extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentBond: null,\n      month: this.getCurrentMonth(),\n      year: this.getCurrentYear(),\n      showTooltip: {\n        visibility: 'visible'\n      },\n      hideTable: true\n    };\n    this.onUpdateEnter = this.onUpdateEnter.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.formatDate = this.formatDate.bind(this);\n  }\n\n  formatDate(value_date) {\n    const months = {\n      \"01\": \"Jan\",\n      \"02\": \"Feb\",\n      \"03\": \"Mar\",\n      \"04\": \"Apr\",\n      \"05\": \"May\",\n      \"06\": \"June\",\n      \"07\": \"Jul\",\n      \"08\": \"Aug\",\n      \"09\": \"Sept\",\n      \"10\": \"Oct\",\n      \"11\": \"Nov\",\n      \"12\": \"Dec\"\n    };\n    let month = value_date.split('/')[0];\n    let year = value_date.split('/')[1];\n    let month_string = months[month] + ' 1, ' + year;\n    console.log(month_string);\n    return month_string;\n  }\n\n  getCurrentMonth() {\n    let d = new Date();\n    return d.getMonth() + 1;\n  }\n\n  getCurrentYear() {\n    let d = new Date();\n    return d.getFullYear();\n  }\n\n  appendToTable(bond) {\n    const {\n      currentBond\n    } = this.state;\n\n    function handleClickX(element) {\n      element.parentNode.parentNode.remove();\n      let rows = document.getElementById('bond-table').getElementsByTagName('tr');\n\n      if (rows.length === 2) {\n        element.parentNode.parentNode.remove();\n        document.getElementById('bond-table').getElementsByTagName('tr')[0].style.visibility = 'hidden';\n      }\n    }\n\n    const bondTable = document.getElementById('bond-table');\n    bondTable.getElementsByTagName('tr')[0].style.visibility = 'visible';\n    let bondRow = bondTable.insertRow(1);\n    bondRow.style.textAlign = 'center';\n    bondRow.insertCell(0).innerHTML = currentBond['serialNumber'];\n    bondRow.insertCell(1).innerHTML = currentBond['series'];\n    bondRow.insertCell(2).innerHTML = currentBond['denomination'];\n    bondRow.insertCell(3).innerHTML = currentBond['iDate'];\n    bondRow.insertCell(4).innerHTML = currentBond['aDate'];\n    bondRow.insertCell(5).innerHTML = currentBond['mDate'];\n    let cell6 = bondRow.insertCell(6);\n    cell6.className = 'issue-price';\n    cell6.innerHTML = '$' + currentBond['iPrice'];\n    let cell7 = bondRow.insertCell(7);\n    cell7.className = 'bond-interest';\n    cell7.innerHTML = '$' + currentBond['interest'];\n    let cell8 = bondRow.insertCell(8);\n    cell8.className = 'bond-value';\n    cell8.innerHTML = '$' + currentBond['value'];\n    cell8.style.position = 'relative';\n    let span = document.createElement('span');\n    span.innerHTML = '&times;';\n    span.setAttribute('aria-hidden', 'true');\n    span.style.border = 'none';\n    let button = document.createElement('button');\n\n    button.onclick = function () {\n      handleClickX(this);\n    };\n\n    button.className = 'close';\n    button.style.position = 'absolute';\n    button.style.right = '-1em';\n    button.append(span);\n    cell8.append(button);\n    let rows = bondTable.getElementsByTagName('tr');\n    let issue_prices = [];\n\n    for (let i in rows) {\n      if (!isNaN(i)) {\n        if (i > 0 && i < rows.length - 1) {\n          let i_prices = rows[i].getElementsByClassName('issue-price');\n\n          for (let j in i_prices) {\n            let issue_price = i_prices[j].innerHTML;\n\n            if (issue_price !== undefined) {\n              issue_prices.append(issue_price.substring(1));\n            }\n          }\n        }\n      }\n    }\n\n    console.log(issue_prices);\n  }\n\n  onUpdateEnter(e) {\n    e.preventDefault();\n    setTimeout(() => {\n      this.setState({\n        showTooltip: {\n          visibility: 'hidden'\n        }\n      });\n    }, 3500);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    if (this.state.hideTable) {\n      this.setState({\n        hideTable: false\n      });\n    }\n\n    const series_map = {\n      'EE Bond': 'EE',\n      'E Bond': 'E',\n      'I Bond': 'I',\n      'Savings Bond': 'S'\n    };\n    let bond = {\n      'vMonth': e.target.aMonth.value,\n      'vYear': e.target.aYear.value,\n      'series': series_map[e.target.series.value],\n      'denomination': e.target.denomination.value.substring(1),\n      'serialNumber': e.target.serialnumber.value,\n      'iMonth': e.target.iMonth.value,\n      'iYear': e.target.iYear.value\n    };\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      },\n      body: JSON.stringify({\n        bond\n      })\n    };\n    fetch('http://localhost:5000/individual/bonds', requestOptions).then(response => response.json()).then(response => {\n      this.setState({\n        currentBond: response\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '75%',\n        margin: 'auto',\n        marginTop: '2em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      style: {\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 29\n      }\n    }, \"VALUE AS OF\"), /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      name: \"aMonth\",\n      type: \"number\",\n      placeholder: \"Month\",\n      min: \"1\",\n      max: \"12\",\n      defaultValue: this.state.month,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n      id: \"inputGroupPrepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 37\n      }\n    }, \"/\")), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      name: \"aYear\",\n      type: \"number\",\n      placeholder: \"Year\",\n      maxLength: \"4\",\n      min: \"1992\",\n      max: this.state.year,\n      style: {\n        marginLeft: '-1px'\n      },\n      defaultValue: this.state.year,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(OverlayTrigger, {\n      placement: \"right\",\n      overlay: /*#__PURE__*/React.createElement(Tooltip, {\n        style: this.state.showTooltip,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 33\n        }\n      }, \"Revalue all bonds by this date.\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      onMouseEnter: this.onUpdateEnter,\n      variant: \"success\",\n      style: {\n        marginTop: '1.8em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 33\n      }\n    }, \"UPDATE\"))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      style: {\n        marginTop: '1.8em',\n        float: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 29\n      }\n    }, \"SUBMIT\"))), /*#__PURE__*/React.createElement(Form.Row, {\n      style: {\n        marginTop: '1em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 29\n      }\n    }, \"SERIES\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"series\",\n      as: \"select\",\n      custom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 33\n      }\n    }, \"EE Bond\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 33\n      }\n    }, \"I Bond\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 33\n      }\n    }, \"E Bond\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 33\n      }\n    }, \"Savings Note\"))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 29\n      }\n    }, \"DENOMINATION\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"denomination\",\n      as: \"select\",\n      custom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 33\n      }\n    }, \"$25\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 33\n      }\n    }, \"$50\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 33\n      }\n    }, \"$75\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 33\n      }\n    }, \"$100\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 33\n      }\n    }, \"$200\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 33\n      }\n    }, \"$500\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 33\n      }\n    }, \"$1,000\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 33\n      }\n    }, \"$5,000\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 33\n      }\n    }, \"$10,000\"))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 29\n      }\n    }, \"SERIAL NUMBER\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"serialnumber\",\n      type: \"text\",\n      placeholder: \"Optional\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 29\n      }\n    }, \"ISSUE DATE\"), /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      name: \"iMonth\",\n      type: \"number\",\n      placeholder: \"Month\",\n      maxLength: \"2\",\n      min: \"1\",\n      max: \"12\",\n      defaultValue: \"11\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n      id: \"inputGroupPrepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 37\n      }\n    }, \"/\")), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      name: \"iYear\",\n      type: \"number\",\n      placeholder: \"Year\",\n      maxLength: \"4\",\n      min: \"1940\",\n      max: this.state.year,\n      style: {\n        marginLeft: '-1px'\n      },\n      defaultValue: \"2005\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 33\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        float: 'left',\n        marginTop: '2em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }\n    }, this.state.currentBond ? /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: '20.50%',\n        float: 'left'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: {\n        fontSize: '14px',\n        padding: '.50em',\n        fontWeight: '500'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 29\n      }\n    }, \"PRICED FROM\"), /*#__PURE__*/React.createElement(Card.Body, {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 33\n      }\n    }, this.formatDate(this.state.currentBond['vDate'])))) : null, /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: '20.50%',\n        float: 'left',\n        marginLeft: '6%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: {\n        fontSize: '14px',\n        padding: '.50em',\n        fontWeight: '500'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 25\n      }\n    }, \"TOTAL PRICE\"), /*#__PURE__*/React.createElement(Card.Body, {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: '20.50%',\n        float: 'left',\n        marginLeft: '6%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: {\n        fontSize: '14px',\n        padding: '.50em',\n        fontWeight: '500'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 25\n      }\n    }, \"TOTAL INTEREST\"), /*#__PURE__*/React.createElement(Card.Body, {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: '20.50%',\n        float: 'left',\n        marginLeft: '6%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: {\n        fontSize: '14px',\n        padding: '.50em',\n        fontWeight: '500'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 25\n      }\n    }, \"TOTAL VALUE\"), /*#__PURE__*/React.createElement(Card.Body, {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        float: 'left',\n        marginTop: '1em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      id: \"bond-table\",\n      hidden: this.state.hideTable,\n      onChange: this.state.changeTable,\n      style: {\n        width: '100%',\n        margin: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      style: {\n        textAlign: \"center\",\n        fontSize: \"11px\",\n        textTransform: \"uppercase\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 33\n      }\n    }, \"Serial Number\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 33\n      }\n    }, \"Series\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 33\n      }\n    }, \"Denomination\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 33\n      }\n    }, \"Issue Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 33\n      }\n    }, \"Next Accrual\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 33\n      }\n    }, \"Final Maturity\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 33\n      }\n    }, \"Issue Price\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 33\n      }\n    }, \"Interest\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 33\n      }\n    }, \"Value\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 29\n      }\n    }, this.state.currentBond ? this.appendToTable(this.state.currentBond) : null)))));\n  }\n\n}\n\nexport default BondPricingOne;","map":{"version":3,"sources":["/Users/greggvanorden/Desktop/bonds_react_app/bonds-react-app/src/components/bond_pricing.jsx"],"names":["React","Component","Form","Col","InputGroup","Button","OverlayTrigger","Tooltip","Table","Card","BondPricingOne","constructor","props","state","currentBond","month","getCurrentMonth","year","getCurrentYear","showTooltip","visibility","hideTable","onUpdateEnter","bind","onSubmit","formatDate","value_date","months","split","month_string","console","log","d","Date","getMonth","getFullYear","appendToTable","bond","handleClickX","element","parentNode","remove","rows","document","getElementById","getElementsByTagName","length","style","bondTable","bondRow","insertRow","textAlign","insertCell","innerHTML","cell6","className","cell7","cell8","position","span","createElement","setAttribute","border","button","onclick","right","append","issue_prices","i","isNaN","i_prices","getElementsByClassName","j","issue_price","undefined","substring","e","preventDefault","setTimeout","setState","series_map","target","aMonth","value","aYear","series","denomination","serialnumber","iMonth","iYear","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","render","width","margin","marginTop","fontSize","marginLeft","float","padding","fontWeight","changeTable","textTransform"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Col, InputGroup, Button, OverlayTrigger, Tooltip, Table, Card } from 'react-bootstrap';\nimport '../index.css'\n\nclass BondPricingOne extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentBond: null,\n            month: this.getCurrentMonth(),\n            year: this.getCurrentYear(),\n            showTooltip: { visibility: 'visible' },\n            hideTable: true\n        };\n\n        this.onUpdateEnter = this.onUpdateEnter.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n        this.formatDate = this.formatDate.bind(this)\n    }\n\n    formatDate(value_date) {\n        const months = { \"01\": \"Jan\", \"02\": \"Feb\", \"03\": \"Mar\", \"04\": \"Apr\", \"05\": \"May\", \"06\": \"June\", \"07\": \"Jul\", \"08\": \"Aug\", \"09\": \"Sept\", \"10\": \"Oct\", \"11\": \"Nov\", \"12\": \"Dec\" }\n\n        let month = value_date.split('/')[0]\n        let year = value_date.split('/')[1]\n\n        let month_string = months[month] + ' 1, ' + year\n\n        console.log(month_string)\n        return month_string\n    }\n\n    getCurrentMonth() {\n        let d = new Date();\n        return d.getMonth() + 1\n    }\n\n    getCurrentYear() {\n        let d = new Date();\n\n        return d.getFullYear()\n    }\n\n    appendToTable(bond) {\n        const { currentBond } = this.state\n\n        function handleClickX(element) {\n            element.parentNode.parentNode.remove()\n\n            let rows = document.getElementById('bond-table').getElementsByTagName('tr')\n\n            if (rows.length === 2) {\n                element.parentNode.parentNode.remove()\n\n                document.getElementById('bond-table').getElementsByTagName('tr')[0].style.visibility = 'hidden'\n            }\n        }\n\n        const bondTable = document.getElementById('bond-table')\n\n        bondTable.getElementsByTagName('tr')[0].style.visibility = 'visible'\n\n        let bondRow = bondTable.insertRow(1);\n        bondRow.style.textAlign = 'center'\n\n        bondRow.insertCell(0).innerHTML = currentBond['serialNumber']\n        bondRow.insertCell(1).innerHTML = currentBond['series']\n        bondRow.insertCell(2).innerHTML = currentBond['denomination']\n        bondRow.insertCell(3).innerHTML = currentBond['iDate']\n        bondRow.insertCell(4).innerHTML = currentBond['aDate']\n        bondRow.insertCell(5).innerHTML = currentBond['mDate']\n\n        let cell6 = bondRow.insertCell(6)\n        cell6.className = 'issue-price'\n        cell6.innerHTML = '$' + currentBond['iPrice']\n\n        let cell7 = bondRow.insertCell(7)\n        cell7.className = 'bond-interest'\n        cell7.innerHTML = '$' + currentBond['interest']\n\n        let cell8 = bondRow.insertCell(8)\n        cell8.className = 'bond-value'\n        cell8.innerHTML = '$' + currentBond['value']\n        cell8.style.position = 'relative'\n\n        let span = document.createElement('span')\n        span.innerHTML = '&times;'\n        span.setAttribute('aria-hidden', 'true')\n        span.style.border = 'none';\n\n        let button = document.createElement('button')\n        button.onclick = function () { handleClickX(this); };\n        button.className = 'close'\n        button.style.position = 'absolute'\n        button.style.right = '-1em'\n\n        button.append(span);\n        cell8.append(button);\n\n        let rows = bondTable.getElementsByTagName('tr')\n\n        let issue_prices = []\n\n        for (let i in rows) {\n            if (!isNaN(i)) {\n                if (i > 0 && i < (rows.length - 1)) {\n                    let i_prices = rows[i].getElementsByClassName('issue-price')\n                    for (let j in i_prices) {\n                        let issue_price = i_prices[j].innerHTML\n                        if (issue_price !== undefined) {\n                            issue_prices.append(issue_price.substring(1))\n                        }\n                    }\n                }\n            }\n        }\n\n        console.log(issue_prices)\n    }\n\n    onUpdateEnter(e) {\n        e.preventDefault();\n\n        setTimeout(() => {\n            this.setState({ showTooltip: { visibility: 'hidden' } })\n        }, 3500)\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        if (this.state.hideTable) {\n            this.setState({ hideTable: false })\n        }\n\n        const series_map = {\n            'EE Bond': 'EE',\n            'E Bond': 'E',\n            'I Bond': 'I',\n            'Savings Bond': 'S'\n        }\n\n        let bond = {\n            'vMonth': e.target.aMonth.value,\n            'vYear': e.target.aYear.value,\n            'series': series_map[e.target.series.value],\n            'denomination': (e.target.denomination.value).substring(1),\n            'serialNumber': e.target.serialnumber.value,\n            'iMonth': e.target.iMonth.value,\n            'iYear': e.target.iYear.value\n        }\n\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' },\n            body: JSON.stringify({ bond })\n        };\n\n        fetch('http://localhost:5000/individual/bonds', requestOptions)\n            .then(response => response.json())\n            .then(response => {\n                this.setState({ currentBond: response });\n            })\n    }\n\n    render() {\n        return (\n            <div style={{ width: '75%', margin: 'auto', marginTop: '2em' }}>\n                <Form onSubmit={this.onSubmit} style={{ fontSize: '14px' }}>\n                    <Form.Row>\n                        <Col>\n                            <Form.Label>VALUE AS OF</Form.Label>\n                            <InputGroup>\n                                <Form.Control\n                                    required\n                                    name=\"aMonth\"\n                                    type=\"number\"\n                                    placeholder=\"Month\"\n                                    min=\"1\"\n                                    max=\"12\"\n                                    defaultValue={this.state.month}\n                                />\n                                <InputGroup.Append>\n                                    <InputGroup.Text id=\"inputGroupPrepend\">/</InputGroup.Text>\n                                </InputGroup.Append>\n                                <Form.Control\n                                    required\n                                    name=\"aYear\"\n                                    type=\"number\"\n                                    placeholder=\"Year\"\n                                    maxLength=\"4\"\n                                    min=\"1992\"\n                                    max={this.state.year}\n                                    style={{ marginLeft: '-1px' }}\n                                    defaultValue={this.state.year}\n                                />\n                            </InputGroup>\n                        </Col>\n                        <Col>\n                            <OverlayTrigger placement='right' overlay={\n                                <Tooltip style={this.state.showTooltip} >\n                                    Revalue all bonds by this date.\n                                    </Tooltip>}>\n                                <Button type=\"submit\" onMouseEnter={this.onUpdateEnter} variant='success' style={{ marginTop: '1.8em' }}>UPDATE</Button>\n                            </OverlayTrigger>\n                        </Col>\n                        <Col></Col>\n                        <Col>\n                            <Button type=\"submit\" style={{ marginTop: '1.8em', float: 'right' }}>SUBMIT</Button>\n                        </Col>\n                    </Form.Row>\n                    <Form.Row style={{ marginTop: '1em' }}>\n                        <Col>\n                            <Form.Label>SERIES</Form.Label>\n                            <Form.Control name=\"series\" as=\"select\" custom>\n                                <option>EE Bond</option>\n                                <option>I Bond</option>\n                                <option>E Bond</option>\n                                <option>Savings Note</option>\n                            </Form.Control>\n                        </Col>\n                        <Col>\n                            <Form.Label>DENOMINATION</Form.Label>\n                            <Form.Control name=\"denomination\" as=\"select\" custom>\n                                <option>$25</option>\n                                <option>$50</option>\n                                <option>$75</option>\n                                <option>$100</option>\n                                <option>$200</option>\n                                <option>$500</option>\n                                <option>$1,000</option>\n                                <option>$5,000</option>\n                                <option>$10,000</option>\n                            </Form.Control>\n                        </Col>\n                        <Col>\n                            <Form.Label size='sm'>SERIAL NUMBER</Form.Label>\n                            <Form.Control\n                                name=\"serialnumber\"\n                                type=\"text\"\n                                placeholder=\"Optional\"\n                            />\n                        </Col>\n                        <Col>\n                            <Form.Label>ISSUE DATE</Form.Label>\n                            <InputGroup>\n                                <Form.Control\n                                    required\n                                    name=\"iMonth\"\n                                    type=\"number\"\n                                    placeholder=\"Month\"\n                                    maxLength=\"2\"\n                                    min=\"1\"\n                                    max=\"12\"\n                                    defaultValue=\"11\"\n                                />\n                                <InputGroup.Append>\n                                    <InputGroup.Text id=\"inputGroupPrepend\">/</InputGroup.Text>\n                                </InputGroup.Append>\n                                <Form.Control\n                                    required\n                                    name=\"iYear\"\n                                    type=\"number\"\n                                    placeholder=\"Year\"\n                                    maxLength=\"4\"\n                                    min=\"1940\"\n                                    max={this.state.year}\n                                    style={{ marginLeft: '-1px' }}\n                                    defaultValue=\"2005\"\n                                />\n                            </InputGroup>\n                        </Col>\n                    </Form.Row>\n                </Form>\n                <div style={{ width: '100%', float: 'left', marginTop: '2em' }}>\n                    {this.state.currentBond ?\n                        <Card style={{ width: '20.50%', float: 'left' }}>\n                            <Card.Header style={{ fontSize: '14px', padding: '.50em', fontWeight: '500' }}>PRICED FROM</Card.Header>\n                            <Card.Body style={{ textAlign: 'center' }}>\n                                <Card.Title>{this.formatDate(this.state.currentBond['vDate'])}</Card.Title>\n                            </Card.Body>\n                        </Card> : null}\n                    <Card style={{ width: '20.50%', float: 'left', marginLeft: '6%' }}>\n                        <Card.Header style={{ fontSize: '14px', padding: '.50em', fontWeight: '500' }}>TOTAL PRICE</Card.Header>\n                        <Card.Body style={{ textAlign: 'center' }}>\n                            <Card.Title></Card.Title>\n                        </Card.Body>\n                    </Card>\n                    <Card style={{ width: '20.50%', float: 'left', marginLeft: '6%' }}>\n                        <Card.Header style={{ fontSize: '14px', padding: '.50em', fontWeight: '500' }}>TOTAL INTEREST</Card.Header>\n                        <Card.Body style={{ textAlign: 'center' }}>\n                            <Card.Title></Card.Title>\n                        </Card.Body>\n                    </Card>\n                    <Card style={{ width: '20.50%', float: 'left', marginLeft: '6%' }}>\n                        <Card.Header style={{ fontSize: '14px', padding: '.50em', fontWeight: '500' }}>TOTAL VALUE</Card.Header>\n                        <Card.Body style={{ textAlign: 'center' }}>\n                            <Card.Title></Card.Title>\n                        </Card.Body>\n                    </Card>\n                </div>\n                <div style={{ width: '100%', float: 'left', marginTop: '1em' }}>\n                    <Table striped bordered hover id=\"bond-table\" hidden={this.state.hideTable} onChange={this.state.changeTable} style={{ width: '100%', margin: 'auto' }}>\n                        <thead style={{ textAlign: \"center\", fontSize: \"11px\", textTransform: \"uppercase\" }}>\n                            <tr>\n                                <th>Serial Number</th>\n                                <th>Series</th>\n                                <th>Denomination</th>\n                                <th>Issue Date</th>\n                                <th>Next Accrual</th>\n                                <th>Final Maturity</th>\n                                <th>Issue Price</th>\n                                <th>Interest</th>\n                                <th>Value</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>{this.state.currentBond ? this.appendToTable(this.state.currentBond) : null}</tr>\n                        </tbody>\n                    </Table>\n                </div>\n            </div >\n        )\n    }\n}\n\nexport default BondPricingOne;\n\n"]},"metadata":{},"sourceType":"module"}