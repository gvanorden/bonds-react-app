{"ast":null,"code":"var _jsxFileName = \"/Users/greggvanorden/Desktop/bonds_react_app/bonds-react-app/src/components/instructions.jsx\";\nimport React, { Component } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { CSVLink } from \"react-csv\";\nimport excel from '../images/excel.png';\n\nclass Instructions extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    const exportData = [['Serial Number', 'Series', 'Denomination', 'Issue Date']];\n    const descriptions = [[/*#__PURE__*/React.createElement(\"a\", {\n      href: \"/bond_example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 14\n      }\n    }, \"Series\"), 'Bond type (ex. E, EE, I, Savings Note)'], [/*#__PURE__*/React.createElement(\"a\", {\n      href: \"/bond_example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 14\n      }\n    }, \"Denomination\"), 'Purchase price of your bond'], [/*#__PURE__*/React.createElement(\"a\", {\n      href: \"/bond_example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 14\n      }\n    }, \"Serial Number\"), 'Unique identifier of your bond'], [/*#__PURE__*/React.createElement(\"a\", {\n      href: \"/bond_example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 14\n      }\n    }, \"Issue Month/Year\"), 'Start date of when the bond was purchased'], ['Value as of Month/Year', 'End date of which to value your bonds']];\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron-pages\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '50%',\n        margin: 'auto',\n        marginTop: '2em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }\n    }, \"First, you\\u2019ll need a .csv file containing a list of your bonds with the following specifications:\"), /*#__PURE__*/React.createElement(Table, {\n      style: {\n        marginTop: '1em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 29\n      }\n    }, descriptions.map(description => /*#__PURE__*/React.createElement(\"tr\", {\n      key: description[0] + description[1],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      key: description[0],\n      style: {\n        border: 'none',\n        fontWeight: '500',\n        width: '30%',\n        padding: '.25em',\n        fontSize: '.9em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 41\n      }\n    }, description[0]), /*#__PURE__*/React.createElement(\"td\", {\n      key: description[1],\n      style: {\n        border: 'none',\n        padding: '.25em',\n        fontSize: '.9em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 41\n      }\n    }, description[1]))))), /*#__PURE__*/React.createElement(CSVLink, {\n      data: exportData,\n      style: {\n        float: 'left',\n        width: '100%',\n        textAlign: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }\n    }, \"[Download CSV Template]\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: excel,\n      alt: \"spreadsheet example\",\n      style: {\n        height: '100%',\n        width: '100%',\n        margin: '.5em 0 2em 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }\n    }, \"Then, navigate to the \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/valuations\",\n      style: {\n        fontSize: '.95em',\n        fontWeight: '500'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 51\n      }\n    }, \"VALUATIONS\"), \" page where you'll attach this csv to value your bonds.\"))), \";\");\n  }\n\n}\n\nexport default Instructions;","map":{"version":3,"sources":["/Users/greggvanorden/Desktop/bonds_react_app/bonds-react-app/src/components/instructions.jsx"],"names":["React","Component","Table","CSVLink","excel","Instructions","state","render","exportData","descriptions","width","margin","marginTop","map","description","border","fontWeight","padding","fontSize","float","textAlign","height"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { CSVLink } from \"react-csv\";\nimport excel from '../images/excel.png';\n\nclass Instructions extends Component {\n    state = {}\n\n    render() {\n        const exportData = [['Serial Number', 'Series', 'Denomination', 'Issue Date']]\n\n        const descriptions = [\n            [<a href=\"/bond_example\">Series</a>, 'Bond type (ex. E, EE, I, Savings Note)'],\n            [<a href=\"/bond_example\">Denomination</a>, 'Purchase price of your bond'],\n            [<a href=\"/bond_example\">Serial Number</a>, 'Unique identifier of your bond'],\n            [<a href=\"/bond_example\">Issue Month/Year</a>, 'Start date of when the bond was purchased'],\n            ['Value as of Month/Year', 'End date of which to value your bonds']\n        ]\n\n        return (\n            <React.Fragment>\n                <div className=\"jumbotron-pages\"></div>\n                <div style={{ width: '50%', margin: 'auto', marginTop: '2em' }}>\n                    <ol>\n                        <li>First, youâ€™ll need a .csv file containing a list of your bonds with the following specifications:</li>\n                        <Table style={{ marginTop: '1em' }}>\n                            <tbody>\n                                {descriptions.map((description) => (\n                                    <tr key={description[0] + description[1]}>\n                                        <td key={description[0]} style={{ border: 'none', fontWeight: '500', width: '30%', padding: '.25em', fontSize: '.9em' }}>{description[0]}</td>\n                                        <td key={description[1]} style={{ border: 'none', padding: '.25em', fontSize: '.9em' }}>{description[1]}</td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                        <CSVLink data={exportData} style={{ float: 'left', width: '100%', textAlign: 'right' }}>[Download CSV Template]</CSVLink>\n                        <img src={excel} alt=\"spreadsheet example\" style={{ height: '100%', width: '100%', margin: '.5em 0 2em 0' }}></img>\n                        <li>Then, navigate to the <a href=\"/valuations\" style={{ fontSize: '.95em', fontWeight: '500' }}>VALUATIONS</a> page where you'll attach this csv to value your bonds.</li>\n                    </ol>\n                </div>;\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Instructions;"]},"metadata":{},"sourceType":"module"}