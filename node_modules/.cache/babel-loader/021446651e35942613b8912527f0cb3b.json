{"ast":null,"code":"var _jsxFileName = \"/Users/greggvanorden/Desktop/bonds_react_app/bonds-react-app/src/components/bond_pricing.jsx\";\nimport React, { Component } from 'react';\nimport { Form, Col, InputGroup, Button, OverlayTrigger, Tooltip, Table, Card } from 'react-bootstrap';\nimport '../index.css';\n\nclass BondPricingOne extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentBond: null,\n      totalPrice: null,\n      totalInterest: null,\n      totalValue: null,\n      month: this.getCurrentMonth(),\n      year: this.getCurrentYear(),\n      showTooltip: {\n        visibility: 'visible'\n      },\n      hideTable: true\n    };\n    this.onUpdateEnter = this.onUpdateEnter.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.formatDate = this.formatDate.bind(this);\n    this.appendToTable = this.appendToTable.bind(this);\n  }\n\n  formatDate(value_date) {\n    const months = {\n      \"01\": \"Jan\",\n      \"02\": \"Feb\",\n      \"03\": \"Mar\",\n      \"04\": \"Apr\",\n      \"05\": \"May\",\n      \"06\": \"June\",\n      \"07\": \"Jul\",\n      \"08\": \"Aug\",\n      \"09\": \"Sept\",\n      \"10\": \"Oct\",\n      \"11\": \"Nov\",\n      \"12\": \"Dec\"\n    };\n    let month = value_date.split('/')[0];\n    let year = value_date.split('/')[1];\n    let month_string = months[month] + ' 1, ' + year;\n    return month_string;\n  }\n\n  getCurrentMonth() {\n    let d = new Date();\n    return d.getMonth() + 1;\n  }\n\n  getCurrentYear() {\n    let d = new Date();\n    return d.getFullYear();\n  }\n\n  appendToTable(currentBond) {\n    function handleClickX(element) {\n      let total_value = element.innerHTML;\n      element.parentNode.parentNode.remove();\n      let rows = document.getElementById('bond-table').getElementsByTagName('tr');\n\n      if (rows.length === 2) {\n        element.parentNode.parentNode.remove();\n        document.getElementById('bond-table').getElementsByTagName('tr')[0].style.visibility = 'hidden';\n      }\n\n      console.log(document.getElementById('bond-table').getElementsByTagName('tr').length);\n      return;\n    }\n\n    function calculateTotals() {\n      const bondTable = document.getElementById('bond-table');\n      let rows = bondTable.getElementsByTagName('tr');\n      let total_prices = [];\n      let total_interests = [];\n      let total_values = [];\n\n      for (let i in rows) {\n        if (!isNaN(i)) {\n          if (i > 0 && i < rows.length - 1) {\n            let prices = rows[i].getElementsByClassName('issue-price');\n\n            for (let j in prices) {\n              let price = prices[j].innerHTML;\n\n              if (price !== undefined) {\n                total_prices.push(parseFloat(price.substring(1)));\n              }\n            }\n\n            let interests = rows[i].getElementsByClassName('bond-interest');\n\n            for (let j in interests) {\n              let interest = interests[j].innerHTML;\n\n              if (interest !== undefined) {\n                total_interests.push(parseFloat(interest.substring(1)));\n              }\n            }\n\n            let values = rows[i].getElementsByClassName('bond-value');\n\n            for (let j in values) {\n              let value = values[j].innerHTML;\n\n              if (value !== undefined) {\n                total_values.push(parseFloat(value.substring(1)));\n              }\n            }\n          }\n        }\n      }\n\n      let total_price = parseFloat(total_prices.reduce((a, b) => a + b, 0)).toFixed(2);\n      let total_interest = parseFloat(total_interests.reduce((a, b) => a + b, 0)).toFixed(2);\n      let total_value = parseFloat(total_values.reduce((a, b) => a + b, 0)).toFixed(2);\n      let totals = [total_price, total_interest, total_value];\n      return totals;\n    }\n\n    const bondTable = document.getElementById('bond-table');\n    bondTable.getElementsByTagName('tr')[0].style.visibility = 'visible';\n    let bondRow = bondTable.insertRow(1);\n    bondRow.style.textAlign = 'center';\n    bondRow.insertCell(0).innerHTML = currentBond['serialNumber'];\n    bondRow.insertCell(1).innerHTML = currentBond['series'];\n    bondRow.insertCell(2).innerHTML = currentBond['denomination'];\n    bondRow.insertCell(3).innerHTML = currentBond['iDate'];\n    bondRow.insertCell(4).innerHTML = currentBond['aDate'];\n    bondRow.insertCell(5).innerHTML = currentBond['mDate'];\n    let cell6 = bondRow.insertCell(6);\n    cell6.className = 'issue-price';\n    cell6.innerHTML = '$' + currentBond['iPrice'];\n    let cell7 = bondRow.insertCell(7);\n    cell7.className = 'bond-interest';\n    cell7.innerHTML = '$' + currentBond['interest'];\n    let cell8 = bondRow.insertCell(8);\n    cell8.className = 'bond-value';\n    cell8.innerHTML = '$' + currentBond['value'];\n    cell8.style.position = 'relative';\n    let span = document.createElement('span');\n    span.innerHTML = '&times;';\n    span.setAttribute('aria-hidden', 'true');\n    span.style.border = 'none';\n    let button = document.createElement('button');\n\n    button.onclick = function () {\n      handleClickX(this);\n    };\n\n    this.setState({\n      totalValue: null\n    });\n    button.className = 'close';\n    button.style.position = 'absolute';\n    button.style.right = '-1em';\n    button.append(span);\n    cell8.append(button);\n    let totals = calculateTotals();\n    console.log(totals);\n    this.setState({\n      totalPrice: totals[0],\n      totalInterest: totals[1],\n      totalValue: totals[2]\n    });\n  }\n\n  onUpdateEnter(e) {\n    e.preventDefault();\n    setTimeout(() => {\n      this.setState({\n        showTooltip: {\n          visibility: 'hidden'\n        }\n      });\n    }, 3500);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    if (this.state.hideTable) {\n      this.setState({\n        hideTable: false\n      });\n    }\n\n    const series_map = {\n      'EE Bond': 'EE',\n      'E Bond': 'E',\n      'I Bond': 'I',\n      'Savings Bond': 'S'\n    };\n    let bond = {\n      'vMonth': e.target.aMonth.value,\n      'vYear': e.target.aYear.value,\n      'series': series_map[e.target.series.value],\n      'denomination': e.target.denomination.value.substring(1),\n      'serialNumber': e.target.serialnumber.value,\n      'iMonth': e.target.iMonth.value,\n      'iYear': e.target.iYear.value\n    };\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      },\n      body: JSON.stringify({\n        bond\n      })\n    };\n    fetch('http://localhost:5000/individual/bonds', requestOptions).then(response => response.json()).then(response => {\n      this.appendToTable(response);\n      this.setState({\n        currentBond: response\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '75%',\n        margin: 'auto',\n        marginTop: '2em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      style: {\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"column-border\",\n      style: {\n        position: 'relative'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 29\n      }\n    }, \"VALUE AS OF\"), /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      name: \"aMonth\",\n      type: \"number\",\n      placeholder: \"Month\",\n      min: \"1\",\n      max: \"12\",\n      defaultValue: this.state.month,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n      id: \"inputGroupPrepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 37\n      }\n    }, \"/\")), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      name: \"aYear\",\n      type: \"number\",\n      placeholder: \"Year\",\n      maxLength: \"4\",\n      min: \"1992\",\n      max: this.state.year,\n      style: {\n        marginLeft: '-1px'\n      },\n      defaultValue: this.state.year,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(OverlayTrigger, {\n      placement: \"right\",\n      overlay: /*#__PURE__*/React.createElement(Tooltip, {\n        style: this.state.showTooltip,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 33\n        }\n      }, \"Revalue all bonds by this date.\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      size: \"sm\",\n      onMouseEnter: this.onUpdateEnter,\n      variant: \"success\",\n      style: {\n        marginTop: '.5em',\n        float: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 33\n      }\n    }, \"UPDATE\"))), /*#__PURE__*/React.createElement(Col, {\n      className: \"border-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 29\n      }\n    }, \"SERIES\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"series\",\n      as: \"select\",\n      custom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 33\n      }\n    }, \"EE Bond\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 33\n      }\n    }, \"I Bond\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 33\n      }\n    }, \"E Bond\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 33\n      }\n    }, \"Savings Note\"))), /*#__PURE__*/React.createElement(Col, {\n      className: \"border-middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 29\n      }\n    }, \"DENOMINATION\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"denomination\",\n      as: \"select\",\n      custom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 33\n      }\n    }, \"$25\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 33\n      }\n    }, \"$50\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 33\n      }\n    }, \"$75\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 33\n      }\n    }, \"$100\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 33\n      }\n    }, \"$200\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 33\n      }\n    }, \"$500\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 33\n      }\n    }, \"$1,000\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 33\n      }\n    }, \"$5,000\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 33\n      }\n    }, \"$10,000\"))), /*#__PURE__*/React.createElement(Col, {\n      className: \"border-middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 29\n      }\n    }, \"SERIAL NUMBER\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"serialnumber\",\n      type: \"text\",\n      placeholder: \"Optional\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      className: \"border-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 29\n      }\n    }, \"ISSUE DATE\"), /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      name: \"iMonth\",\n      type: \"number\",\n      placeholder: \"Month\",\n      maxLength: \"2\",\n      min: \"1\",\n      max: \"12\",\n      defaultValue: \"11\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n      id: \"inputGroupPrepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 37\n      }\n    }, \"/\")), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      name: \"iYear\",\n      type: \"number\",\n      placeholder: \"Year\",\n      maxLength: \"4\",\n      min: \"1940\",\n      max: this.state.year,\n      style: {\n        marginLeft: '-1px'\n      },\n      defaultValue: \"2005\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      size: \"sm\",\n      style: {\n        marginTop: '.5em',\n        float: 'right'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 29\n      }\n    }, \"SUBMIT\")))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        float: 'left',\n        marginTop: '2em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }\n    }, this.state.currentBond ? /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: '20.50%',\n        float: 'left'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: {\n        fontSize: '14px',\n        padding: '.50em',\n        fontWeight: '500'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 29\n      }\n    }, \"VALUED FROM\"), /*#__PURE__*/React.createElement(Card.Body, {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 33\n      }\n    }, this.formatDate(this.state.currentBond['vDate'])))) : null, /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: '20.50%',\n        float: 'left',\n        marginLeft: '6%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: {\n        fontSize: '14px',\n        padding: '.50em',\n        fontWeight: '500'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 25\n      }\n    }, \"TOTAL COST\"), /*#__PURE__*/React.createElement(Card.Body, {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      id: \"card-price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 29\n      }\n    }, \"$\", this.state.totalPrice))), /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: '20.50%',\n        float: 'left',\n        marginLeft: '6%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: {\n        fontSize: '14px',\n        padding: '.50em',\n        fontWeight: '500'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 25\n      }\n    }, \"TOTAL INTEREST\"), /*#__PURE__*/React.createElement(Card.Body, {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      id: \"card-interest\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 29\n      }\n    }, \"$\", this.state.totalInterest))), /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: '20.50%',\n        float: 'left',\n        marginLeft: '6%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: {\n        fontSize: '14px',\n        padding: '.50em',\n        fontWeight: '500'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 25\n      }\n    }, \"TOTAL VALUE\"), /*#__PURE__*/React.createElement(Card.Body, {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      id: \"card-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 29\n      }\n    }, \"$\", this.state.totalValue)))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        float: 'left',\n        marginTop: '1em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      id: \"bond-table\",\n      hidden: this.state.hideTable,\n      onChange: this.state.changeTable,\n      style: {\n        width: '100%',\n        margin: 'auto',\n        marginBottom: '2em'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      style: {\n        textAlign: \"center\",\n        fontSize: \"11px\",\n        textTransform: \"uppercase\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 33\n      }\n    }, \"Serial Number\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 33\n      }\n    }, \"Series\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 33\n      }\n    }, \"Denomination\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 33\n      }\n    }, \"Issue Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 33\n      }\n    }, \"Next Accrual\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 33\n      }\n    }, \"Final Maturity\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 33\n      }\n    }, \"Issue Price\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 33\n      }\n    }, \"Interest\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 33\n      }\n    }, \"Value\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n}\n\nexport default BondPricingOne;","map":{"version":3,"sources":["/Users/greggvanorden/Desktop/bonds_react_app/bonds-react-app/src/components/bond_pricing.jsx"],"names":["React","Component","Form","Col","InputGroup","Button","OverlayTrigger","Tooltip","Table","Card","BondPricingOne","constructor","props","state","currentBond","totalPrice","totalInterest","totalValue","month","getCurrentMonth","year","getCurrentYear","showTooltip","visibility","hideTable","onUpdateEnter","bind","onSubmit","formatDate","appendToTable","value_date","months","split","month_string","d","Date","getMonth","getFullYear","handleClickX","element","total_value","innerHTML","parentNode","remove","rows","document","getElementById","getElementsByTagName","length","style","console","log","calculateTotals","bondTable","total_prices","total_interests","total_values","i","isNaN","prices","getElementsByClassName","j","price","undefined","push","parseFloat","substring","interests","interest","values","value","total_price","reduce","a","b","toFixed","total_interest","totals","bondRow","insertRow","textAlign","insertCell","cell6","className","cell7","cell8","position","span","createElement","setAttribute","border","button","onclick","setState","right","append","e","preventDefault","setTimeout","series_map","bond","target","aMonth","aYear","series","denomination","serialnumber","iMonth","iYear","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","render","width","margin","marginTop","fontSize","marginLeft","float","padding","fontWeight","changeTable","marginBottom","textTransform"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Col, InputGroup, Button, OverlayTrigger, Tooltip, Table, Card } from 'react-bootstrap';\nimport '../index.css'\n\nclass BondPricingOne extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentBond: null,\n            totalPrice: null,\n            totalInterest: null,\n            totalValue: null,\n            month: this.getCurrentMonth(),\n            year: this.getCurrentYear(),\n            showTooltip: { visibility: 'visible' },\n            hideTable: true\n        };\n\n        this.onUpdateEnter = this.onUpdateEnter.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n        this.formatDate = this.formatDate.bind(this)\n        this.appendToTable = this.appendToTable.bind(this)\n    }\n\n    formatDate(value_date) {\n        const months = { \"01\": \"Jan\", \"02\": \"Feb\", \"03\": \"Mar\", \"04\": \"Apr\", \"05\": \"May\", \"06\": \"June\", \"07\": \"Jul\", \"08\": \"Aug\", \"09\": \"Sept\", \"10\": \"Oct\", \"11\": \"Nov\", \"12\": \"Dec\" }\n\n        let month = value_date.split('/')[0]\n        let year = value_date.split('/')[1]\n\n        let month_string = months[month] + ' 1, ' + year\n\n        return month_string\n    }\n\n    getCurrentMonth() {\n        let d = new Date();\n        return d.getMonth() + 1\n    }\n\n    getCurrentYear() {\n        let d = new Date();\n\n        return d.getFullYear()\n    }\n\n    appendToTable(currentBond) {\n        function handleClickX(element) {\n            let total_value = element.innerHTML\n\n            element.parentNode.parentNode.remove()\n\n            let rows = document.getElementById('bond-table').getElementsByTagName('tr')\n\n            if (rows.length === 2) {\n                element.parentNode.parentNode.remove()\n\n                document.getElementById('bond-table').getElementsByTagName('tr')[0].style.visibility = 'hidden'\n            }\n\n            console.log(document.getElementById('bond-table').getElementsByTagName('tr').length)\n            return\n        }\n\n        function calculateTotals() {\n            const bondTable = document.getElementById('bond-table')\n            let rows = bondTable.getElementsByTagName('tr')\n\n            let total_prices = []\n            let total_interests = []\n            let total_values = []\n\n            for (let i in rows) {\n                if (!isNaN(i)) {\n                    if (i > 0 && i < (rows.length - 1)) {\n\n                        let prices = rows[i].getElementsByClassName('issue-price')\n                        for (let j in prices) {\n                            let price = prices[j].innerHTML\n                            if (price !== undefined) {\n                                total_prices.push(parseFloat(price.substring(1)))\n                            }\n                        }\n\n                        let interests = rows[i].getElementsByClassName('bond-interest')\n                        for (let j in interests) {\n                            let interest = interests[j].innerHTML\n                            if (interest !== undefined) {\n                                total_interests.push(parseFloat(interest.substring(1)))\n                            }\n                        }\n\n                        let values = rows[i].getElementsByClassName('bond-value')\n                        for (let j in values) {\n                            let value = values[j].innerHTML\n                            if (value !== undefined) {\n                                total_values.push(parseFloat(value.substring(1)))\n                            }\n                        }\n                    }\n                }\n            }\n\n            let total_price = parseFloat(total_prices.reduce((a, b) => a + b, 0)).toFixed(2)\n            let total_interest = parseFloat(total_interests.reduce((a, b) => a + b, 0)).toFixed(2)\n            let total_value = parseFloat(total_values.reduce((a, b) => a + b, 0)).toFixed(2)\n\n            let totals = [total_price, total_interest, total_value]\n\n            return totals\n        }\n\n\n        const bondTable = document.getElementById('bond-table')\n\n        bondTable.getElementsByTagName('tr')[0].style.visibility = 'visible'\n\n        let bondRow = bondTable.insertRow(1);\n        bondRow.style.textAlign = 'center'\n\n        bondRow.insertCell(0).innerHTML = currentBond['serialNumber']\n        bondRow.insertCell(1).innerHTML = currentBond['series']\n        bondRow.insertCell(2).innerHTML = currentBond['denomination']\n        bondRow.insertCell(3).innerHTML = currentBond['iDate']\n        bondRow.insertCell(4).innerHTML = currentBond['aDate']\n        bondRow.insertCell(5).innerHTML = currentBond['mDate']\n\n        let cell6 = bondRow.insertCell(6)\n        cell6.className = 'issue-price'\n        cell6.innerHTML = '$' + currentBond['iPrice']\n\n        let cell7 = bondRow.insertCell(7)\n        cell7.className = 'bond-interest'\n        cell7.innerHTML = '$' + currentBond['interest']\n\n        let cell8 = bondRow.insertCell(8)\n        cell8.className = 'bond-value'\n        cell8.innerHTML = '$' + currentBond['value']\n        cell8.style.position = 'relative'\n\n        let span = document.createElement('span')\n        span.innerHTML = '&times;'\n        span.setAttribute('aria-hidden', 'true')\n        span.style.border = 'none';\n\n        let button = document.createElement('button')\n        button.onclick = function () { handleClickX(this); }; this.setState({ totalValue: null })\n        button.className = 'close'\n        button.style.position = 'absolute'\n        button.style.right = '-1em'\n\n        button.append(span);\n        cell8.append(button);\n\n        let totals = calculateTotals();\n\n        console.log(totals)\n\n        this.setState({ totalPrice: totals[0], totalInterest: totals[1], totalValue: totals[2] })\n    }\n\n    onUpdateEnter(e) {\n        e.preventDefault();\n\n        setTimeout(() => {\n            this.setState({ showTooltip: { visibility: 'hidden' } })\n        }, 3500)\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        if (this.state.hideTable) {\n            this.setState({ hideTable: false })\n        }\n\n        const series_map = {\n            'EE Bond': 'EE',\n            'E Bond': 'E',\n            'I Bond': 'I',\n            'Savings Bond': 'S'\n        }\n\n        let bond = {\n            'vMonth': e.target.aMonth.value,\n            'vYear': e.target.aYear.value,\n            'series': series_map[e.target.series.value],\n            'denomination': (e.target.denomination.value).substring(1),\n            'serialNumber': e.target.serialnumber.value,\n            'iMonth': e.target.iMonth.value,\n            'iYear': e.target.iYear.value\n        }\n\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' },\n            body: JSON.stringify({ bond })\n        };\n\n        fetch('http://localhost:5000/individual/bonds', requestOptions)\n            .then(response => response.json())\n            .then(response => {\n                this.appendToTable(response)\n\n                this.setState({\n                    currentBond: response\n                })\n            })\n    }\n\n    render() {\n        return (\n            <div style={{ width: '75%', margin: 'auto', marginTop: '2em' }}>\n                <Form onSubmit={this.onSubmit} style={{ fontSize: '14px' }}>\n                    <Form.Row>\n                        <Col className='column-border' style={{ position: 'relative' }}>\n                            <Form.Label>VALUE AS OF</Form.Label>\n                            <InputGroup>\n                                <Form.Control\n                                    required\n                                    name=\"aMonth\"\n                                    type=\"number\"\n                                    placeholder=\"Month\"\n                                    min=\"1\"\n                                    max=\"12\"\n                                    defaultValue={this.state.month}\n                                />\n                                <InputGroup.Append>\n                                    <InputGroup.Text id=\"inputGroupPrepend\">/</InputGroup.Text>\n                                </InputGroup.Append>\n                                <Form.Control\n                                    required\n                                    name=\"aYear\"\n                                    type=\"number\"\n                                    placeholder=\"Year\"\n                                    maxLength=\"4\"\n                                    min=\"1992\"\n                                    max={this.state.year}\n                                    style={{ marginLeft: '-1px' }}\n                                    defaultValue={this.state.year}\n                                />\n                            </InputGroup>\n                            <OverlayTrigger placement='right' overlay={\n                                <Tooltip style={this.state.showTooltip} >\n                                    Revalue all bonds by this date.\n                                    </Tooltip>}>\n                                <Button type=\"submit\" size='sm' onMouseEnter={this.onUpdateEnter} variant='success' style={{ marginTop: '.5em', float: 'right' }}>UPDATE</Button>\n                            </OverlayTrigger>\n                        </Col>\n                        <Col className='border-left' >\n                            <Form.Label>SERIES</Form.Label>\n                            <Form.Control name=\"series\" as=\"select\" custom>\n                                <option>EE Bond</option>\n                                <option>I Bond</option>\n                                <option>E Bond</option>\n                                <option>Savings Note</option>\n                            </Form.Control>\n                        </Col>\n                        <Col className='border-middle'>\n                            <Form.Label>DENOMINATION</Form.Label>\n                            <Form.Control name=\"denomination\" as=\"select\" custom>\n                                <option>$25</option>\n                                <option>$50</option>\n                                <option>$75</option>\n                                <option>$100</option>\n                                <option>$200</option>\n                                <option>$500</option>\n                                <option>$1,000</option>\n                                <option>$5,000</option>\n                                <option>$10,000</option>\n                            </Form.Control>\n                        </Col>\n                        <Col className='border-middle'>\n                            <Form.Label size='sm'>SERIAL NUMBER</Form.Label>\n                            <Form.Control\n                                name=\"serialnumber\"\n                                type=\"text\"\n                                placeholder=\"Optional\"\n                            />\n                        </Col>\n                        <Col className='border-right'>\n                            <Form.Label>ISSUE DATE</Form.Label>\n                            <InputGroup>\n                                <Form.Control\n                                    required\n                                    name=\"iMonth\"\n                                    type=\"number\"\n                                    placeholder=\"Month\"\n                                    maxLength=\"2\"\n                                    min=\"1\"\n                                    max=\"12\"\n                                    defaultValue=\"11\"\n                                />\n                                <InputGroup.Append>\n                                    <InputGroup.Text id=\"inputGroupPrepend\">/</InputGroup.Text>\n                                </InputGroup.Append>\n                                <Form.Control\n                                    required\n                                    name=\"iYear\"\n                                    type=\"number\"\n                                    placeholder=\"Year\"\n                                    maxLength=\"4\"\n                                    min=\"1940\"\n                                    max={this.state.year}\n                                    style={{ marginLeft: '-1px' }}\n                                    defaultValue=\"2005\"\n                                />\n                            </InputGroup>\n                            <Button type=\"submit\" size=\"sm\" style={{ marginTop: '.5em', float: 'right' }}>SUBMIT</Button>\n                        </Col>\n                    </Form.Row>\n\n                </Form>\n                <div style={{ width: '100%', float: 'left', marginTop: '2em' }}>\n                    {this.state.currentBond ?\n                        <Card style={{ width: '20.50%', float: 'left' }}>\n                            <Card.Header style={{ fontSize: '14px', padding: '.50em', fontWeight: '500' }}>VALUED FROM</Card.Header>\n                            <Card.Body style={{ textAlign: 'center' }}>\n                                <Card.Title>{this.formatDate(this.state.currentBond['vDate'])}</Card.Title>\n                            </Card.Body>\n                        </Card> : null}\n                    <Card style={{ width: '20.50%', float: 'left', marginLeft: '6%' }}>\n                        <Card.Header style={{ fontSize: '14px', padding: '.50em', fontWeight: '500' }}>TOTAL COST</Card.Header>\n                        <Card.Body style={{ textAlign: 'center' }}>\n                            <Card.Title id=\"card-price\">${this.state.totalPrice}</Card.Title>\n                        </Card.Body>\n                    </Card>\n                    <Card style={{ width: '20.50%', float: 'left', marginLeft: '6%' }}>\n                        <Card.Header style={{ fontSize: '14px', padding: '.50em', fontWeight: '500' }}>TOTAL INTEREST</Card.Header>\n                        <Card.Body style={{ textAlign: 'center' }}>\n                            <Card.Title id=\"card-interest\">${this.state.totalInterest}</Card.Title>\n                        </Card.Body>\n                    </Card>\n                    <Card style={{ width: '20.50%', float: 'left', marginLeft: '6%' }}>\n                        <Card.Header style={{ fontSize: '14px', padding: '.50em', fontWeight: '500' }}>TOTAL VALUE</Card.Header>\n                        <Card.Body style={{ textAlign: 'center' }}>\n                            <Card.Title id=\"card-value\">${this.state.totalValue}</Card.Title>\n                        </Card.Body>\n                    </Card>\n                </div>\n                <div style={{ width: '100%', float: 'left', marginTop: '1em' }}>\n                    <Table striped bordered hover id=\"bond-table\" hidden={this.state.hideTable} onChange={this.state.changeTable} style={{ width: '100%', margin: 'auto', marginBottom: '2em' }}>\n                        <thead style={{ textAlign: \"center\", fontSize: \"11px\", textTransform: \"uppercase\" }}>\n                            <tr>\n                                <th>Serial Number</th>\n                                <th>Series</th>\n                                <th>Denomination</th>\n                                <th>Issue Date</th>\n                                <th>Next Accrual</th>\n                                <th>Final Maturity</th>\n                                <th>Issue Price</th>\n                                <th>Interest</th>\n                                <th>Value</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr></tr>\n                        </tbody>\n                    </Table>\n                </div>\n            </div >\n        )\n    }\n}\n\nexport default BondPricingOne;\n\n"]},"metadata":{},"sourceType":"module"}